/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * Fax
 */
@JsonPropertyOrder({
  Fax.JSON_PROPERTY_RECORD_TYPE,
  Fax.JSON_PROPERTY_ID,
  Fax.JSON_PROPERTY_CONNECTION_ID,
  Fax.JSON_PROPERTY_DIRECTION,
  Fax.JSON_PROPERTY_MEDIA_URL,
  Fax.JSON_PROPERTY_TO,
  Fax.JSON_PROPERTY_FROM,
  Fax.JSON_PROPERTY_QUALITY,
  Fax.JSON_PROPERTY_STATUS,
  Fax.JSON_PROPERTY_WEBHOOK_URL,
  Fax.JSON_PROPERTY_WEBHOOK_FAILOVER_URL,
  Fax.JSON_PROPERTY_STORE_MEDIA,
  Fax.JSON_PROPERTY_STORED_MEDIA_URL,
  Fax.JSON_PROPERTY_CREATED_AT,
  Fax.JSON_PROPERTY_UPDATED_AT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Fax {
  /**
   * Identifies the type of the resource.
   */
  public enum RecordTypeEnum {
    FAX("fax");

    private String value;

    RecordTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RecordTypeEnum fromValue(String value) {
      for (RecordTypeEnum b : RecordTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RECORD_TYPE = "record_type";
  private RecordTypeEnum recordType;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_CONNECTION_ID = "connection_id";
  private String connectionId;

  /**
   * The direction of the fax.
   */
  public enum DirectionEnum {
    INBOUND("inbound"),
    
    OUTBOUND("outbound");

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DirectionEnum fromValue(String value) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DIRECTION = "direction";
  private DirectionEnum direction;

  public static final String JSON_PROPERTY_MEDIA_URL = "media_url";
  private String mediaUrl;

  public static final String JSON_PROPERTY_TO = "to";
  private String to;

  public static final String JSON_PROPERTY_FROM = "from";
  private String from;

  public static final String JSON_PROPERTY_QUALITY = "quality";
  private String quality = "high";

  /**
   * Status of the fax
   */
  public enum StatusEnum {
    QUEUED("queued"),
    
    MEDIA_PROCESSED("media.processed"),
    
    SENDING("sending"),
    
    DELIVERED("delivered"),
    
    FAILED("failed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_WEBHOOK_URL = "webhook_url";
  private String webhookUrl;

  public static final String JSON_PROPERTY_WEBHOOK_FAILOVER_URL = "webhook_failover_url";
  private String webhookFailoverUrl;

  public static final String JSON_PROPERTY_STORE_MEDIA = "store_media";
  private Boolean storeMedia;

  public static final String JSON_PROPERTY_STORED_MEDIA_URL = "stored_media_url";
  private String storedMediaUrl;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private String createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private String updatedAt;


  public Fax recordType(RecordTypeEnum recordType) {
    this.recordType = recordType;
    return this;
  }

   /**
   * Identifies the type of the resource.
   * @return recordType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "fax", value = "Identifies the type of the resource.")
  @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RecordTypeEnum getRecordType() {
    return recordType;
  }


  public void setRecordType(RecordTypeEnum recordType) {
    this.recordType = recordType;
  }


  public Fax id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Identifies the fax.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0ccc7b54-4df3-4bca-a65a-3da1ecc777f0", value = "Identifies the fax.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public Fax connectionId(String connectionId) {
    this.connectionId = connectionId;
    return this;
  }

   /**
   * The connection ID to send the fax with.
   * @return connectionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "234423", value = "The connection ID to send the fax with.")
  @JsonProperty(JSON_PROPERTY_CONNECTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConnectionId() {
    return connectionId;
  }


  public void setConnectionId(String connectionId) {
    this.connectionId = connectionId;
  }


  public Fax direction(DirectionEnum direction) {
    this.direction = direction;
    return this;
  }

   /**
   * The direction of the fax.
   * @return direction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "outbound", value = "The direction of the fax.")
  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DirectionEnum getDirection() {
    return direction;
  }


  public void setDirection(DirectionEnum direction) {
    this.direction = direction;
  }


  public Fax mediaUrl(String mediaUrl) {
    this.mediaUrl = mediaUrl;
    return this;
  }

   /**
   * The URL to the PDF used for the fax&#39;s media.
   * @return mediaUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf", value = "The URL to the PDF used for the fax's media.")
  @JsonProperty(JSON_PROPERTY_MEDIA_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMediaUrl() {
    return mediaUrl;
  }


  public void setMediaUrl(String mediaUrl) {
    this.mediaUrl = mediaUrl;
  }


  public Fax to(String to) {
    this.to = to;
    return this;
  }

   /**
   * The phone number, in E.164 format, the fax will be sent to or SIP URI
   * @return to
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+13127367276", value = "The phone number, in E.164 format, the fax will be sent to or SIP URI")
  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTo() {
    return to;
  }


  public void setTo(String to) {
    this.to = to;
  }


  public Fax from(String from) {
    this.from = from;
    return this;
  }

   /**
   * The phone number, in E.164 format, the fax will be sent from.
   * @return from
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+13125790015", value = "The phone number, in E.164 format, the fax will be sent from.")
  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFrom() {
    return from;
  }


  public void setFrom(String from) {
    this.from = from;
  }


  public Fax quality(String quality) {
    this.quality = quality;
    return this;
  }

   /**
   * The quality of the fax. Can be normal, high, very_high
   * @return quality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "high", value = "The quality of the fax. Can be normal, high, very_high")
  @JsonProperty(JSON_PROPERTY_QUALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getQuality() {
    return quality;
  }


  public void setQuality(String quality) {
    this.quality = quality;
  }


  public Fax status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the fax
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "queued", value = "Status of the fax")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Fax webhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
    return this;
  }

   /**
   * URL that will receive fax webhooks
   * @return webhookUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL that will receive fax webhooks")
  @JsonProperty(JSON_PROPERTY_WEBHOOK_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebhookUrl() {
    return webhookUrl;
  }


  public void setWebhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
  }


  public Fax webhookFailoverUrl(String webhookFailoverUrl) {
    this.webhookFailoverUrl = webhookFailoverUrl;
    return this;
  }

   /**
   * Optional failover URL that will receive fax webhooks if &#x60;webhook_url&#x60; doesn&#39;t return a 2XX response
   * @return webhookFailoverUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional failover URL that will receive fax webhooks if `webhook_url` doesn't return a 2XX response")
  @JsonProperty(JSON_PROPERTY_WEBHOOK_FAILOVER_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebhookFailoverUrl() {
    return webhookFailoverUrl;
  }


  public void setWebhookFailoverUrl(String webhookFailoverUrl) {
    this.webhookFailoverUrl = webhookFailoverUrl;
  }


  public Fax storeMedia(Boolean storeMedia) {
    this.storeMedia = storeMedia;
    return this;
  }

   /**
   * Should fax media be stored on temporary URL
   * @return storeMedia
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Should fax media be stored on temporary URL")
  @JsonProperty(JSON_PROPERTY_STORE_MEDIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getStoreMedia() {
    return storeMedia;
  }


  public void setStoreMedia(Boolean storeMedia) {
    this.storeMedia = storeMedia;
  }


  public Fax storedMediaUrl(String storedMediaUrl) {
    this.storedMediaUrl = storedMediaUrl;
    return this;
  }

   /**
   * If store_media was set to true, this is a link to temporary location. Link expires after 7 days.
   * @return storedMediaUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If store_media was set to true, this is a link to temporary location. Link expires after 7 days.")
  @JsonProperty(JSON_PROPERTY_STORED_MEDIA_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStoredMediaUrl() {
    return storedMediaUrl;
  }


  public void setStoredMediaUrl(String storedMediaUrl) {
    this.storedMediaUrl = storedMediaUrl;
  }


  public Fax createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * ISO 8601 timestamp when resource was created
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO 8601 timestamp when resource was created")
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public Fax updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * ISO 8601 timestamp when resource was updated
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO 8601 timestamp when resource was updated")
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  /**
   * Return true if this Fax object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Fax fax = (Fax) o;
    return Objects.equals(this.recordType, fax.recordType) &&
        Objects.equals(this.id, fax.id) &&
        Objects.equals(this.connectionId, fax.connectionId) &&
        Objects.equals(this.direction, fax.direction) &&
        Objects.equals(this.mediaUrl, fax.mediaUrl) &&
        Objects.equals(this.to, fax.to) &&
        Objects.equals(this.from, fax.from) &&
        Objects.equals(this.quality, fax.quality) &&
        Objects.equals(this.status, fax.status) &&
        Objects.equals(this.webhookUrl, fax.webhookUrl) &&
        Objects.equals(this.webhookFailoverUrl, fax.webhookFailoverUrl) &&
        Objects.equals(this.storeMedia, fax.storeMedia) &&
        Objects.equals(this.storedMediaUrl, fax.storedMediaUrl) &&
        Objects.equals(this.createdAt, fax.createdAt) &&
        Objects.equals(this.updatedAt, fax.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recordType, id, connectionId, direction, mediaUrl, to, from, quality, status, webhookUrl, webhookFailoverUrl, storeMedia, storedMediaUrl, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Fax {\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    connectionId: ").append(toIndentedString(connectionId)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    mediaUrl: ").append(toIndentedString(mediaUrl)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("    webhookFailoverUrl: ").append(toIndentedString(webhookFailoverUrl)).append("\n");
    sb.append("    storeMedia: ").append(toIndentedString(storeMedia)).append("\n");
    sb.append("    storedMediaUrl: ").append(toIndentedString(storedMediaUrl)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

