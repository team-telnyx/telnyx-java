/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * GlobalIpHealthCheckType
 */
@JsonPropertyOrder({
  GlobalIpHealthCheckType.JSON_PROPERTY_RECORD_TYPE,
  GlobalIpHealthCheckType.JSON_PROPERTY_HEALTH_CHECK_TYPE,
  GlobalIpHealthCheckType.JSON_PROPERTY_HEALTH_CHECK_PARAMS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class GlobalIpHealthCheckType {
  public static final String JSON_PROPERTY_RECORD_TYPE = "record_type";
  private String recordType;

  public static final String JSON_PROPERTY_HEALTH_CHECK_TYPE = "health_check_type";
  private String healthCheckType;

  public static final String JSON_PROPERTY_HEALTH_CHECK_PARAMS = "health_check_params";
  private Object healthCheckParams;

  public GlobalIpHealthCheckType() { 
  }

  @JsonCreator
  public GlobalIpHealthCheckType(
    @JsonProperty(JSON_PROPERTY_RECORD_TYPE) String recordType
  ) {
    this();
    this.recordType = recordType;
  }

   /**
   * Identifies the type of the resource.
   * @return recordType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "global_ip_health_check_type", value = "Identifies the type of the resource.")
  @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecordType() {
    return recordType;
  }




  public GlobalIpHealthCheckType healthCheckType(String healthCheckType) {
    this.healthCheckType = healthCheckType;
    return this;
  }

   /**
   * Global IP Health check type.
   * @return healthCheckType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "http_status_2xx", value = "Global IP Health check type.")
  @JsonProperty(JSON_PROPERTY_HEALTH_CHECK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHealthCheckType() {
    return healthCheckType;
  }


  @JsonProperty(JSON_PROPERTY_HEALTH_CHECK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHealthCheckType(String healthCheckType) {
    this.healthCheckType = healthCheckType;
  }


  public GlobalIpHealthCheckType healthCheckParams(Object healthCheckParams) {
    this.healthCheckParams = healthCheckParams;
    return this;
  }

   /**
   * Global IP Health check params.
   * @return healthCheckParams
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "{\"health_check_params\":{\"path\":\"str\",\"port\":\"int\"}}", value = "Global IP Health check params.")
  @JsonProperty(JSON_PROPERTY_HEALTH_CHECK_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getHealthCheckParams() {
    return healthCheckParams;
  }


  @JsonProperty(JSON_PROPERTY_HEALTH_CHECK_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHealthCheckParams(Object healthCheckParams) {
    this.healthCheckParams = healthCheckParams;
  }


  /**
   * Return true if this GlobalIpHealthCheckType object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalIpHealthCheckType globalIpHealthCheckType = (GlobalIpHealthCheckType) o;
    return Objects.equals(this.recordType, globalIpHealthCheckType.recordType) &&
        Objects.equals(this.healthCheckType, globalIpHealthCheckType.healthCheckType) &&
        Objects.equals(this.healthCheckParams, globalIpHealthCheckType.healthCheckParams);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recordType, healthCheckType, healthCheckParams);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalIpHealthCheckType {\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    healthCheckType: ").append(toIndentedString(healthCheckType)).append("\n");
    sb.append("    healthCheckParams: ").append(toIndentedString(healthCheckParams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

