/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * SpeakRequest
 */
@JsonPropertyOrder({
  SpeakRequest.JSON_PROPERTY_PAYLOAD,
  SpeakRequest.JSON_PROPERTY_PAYLOAD_TYPE,
  SpeakRequest.JSON_PROPERTY_SERVICE_LEVEL,
  SpeakRequest.JSON_PROPERTY_STOP,
  SpeakRequest.JSON_PROPERTY_VOICE,
  SpeakRequest.JSON_PROPERTY_LANGUAGE,
  SpeakRequest.JSON_PROPERTY_CLIENT_STATE,
  SpeakRequest.JSON_PROPERTY_COMMAND_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SpeakRequest {
  public static final String JSON_PROPERTY_PAYLOAD = "payload";
  private String payload;

  /**
   * The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).
   */
  public enum PayloadTypeEnum {
    TEXT("text"),
    
    SSML("ssml");

    private String value;

    PayloadTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PayloadTypeEnum fromValue(String value) {
      for (PayloadTypeEnum b : PayloadTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PAYLOAD_TYPE = "payload_type";
  private PayloadTypeEnum payloadType = PayloadTypeEnum.TEXT;

  /**
   * This parameter impacts speech quality, language options and payload types. When using &#x60;basic&#x60;, only the &#x60;en-US&#x60; language and payload type &#x60;text&#x60; are allowed.
   */
  public enum ServiceLevelEnum {
    BASIC("basic"),
    
    PREMIUM("premium");

    private String value;

    ServiceLevelEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ServiceLevelEnum fromValue(String value) {
      for (ServiceLevelEnum b : ServiceLevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SERVICE_LEVEL = "service_level";
  private ServiceLevelEnum serviceLevel = ServiceLevelEnum.PREMIUM;

  public static final String JSON_PROPERTY_STOP = "stop";
  private String stop = "null";

  /**
   * The gender of the voice used to speak back the text.
   */
  public enum VoiceEnum {
    MALE("male"),
    
    FEMALE("female");

    private String value;

    VoiceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VoiceEnum fromValue(String value) {
      for (VoiceEnum b : VoiceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VOICE = "voice";
  private VoiceEnum voice;

  /**
   * The language you want spoken.
   */
  public enum LanguageEnum {
    ARB("arb"),
    
    CMN_CN("cmn-CN"),
    
    CY_GB("cy-GB"),
    
    DA_DK("da-DK"),
    
    DE_DE("de-DE"),
    
    EN_AU("en-AU"),
    
    EN_GB("en-GB"),
    
    EN_GB_WLS("en-GB-WLS"),
    
    EN_IN("en-IN"),
    
    EN_US("en-US"),
    
    ES_ES("es-ES"),
    
    ES_MX("es-MX"),
    
    ES_US("es-US"),
    
    FR_CA("fr-CA"),
    
    FR_FR("fr-FR"),
    
    HI_IN("hi-IN"),
    
    IS_IS("is-IS"),
    
    IT_IT("it-IT"),
    
    JA_JP("ja-JP"),
    
    KO_KR("ko-KR"),
    
    NB_NO("nb-NO"),
    
    NL_NL("nl-NL"),
    
    PL_PL("pl-PL"),
    
    PT_BR("pt-BR"),
    
    PT_PT("pt-PT"),
    
    RO_RO("ro-RO"),
    
    RU_RU("ru-RU"),
    
    SV_SE("sv-SE"),
    
    TR_TR("tr-TR");

    private String value;

    LanguageEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LanguageEnum fromValue(String value) {
      for (LanguageEnum b : LanguageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LANGUAGE = "language";
  private LanguageEnum language;

  public static final String JSON_PROPERTY_CLIENT_STATE = "client_state";
  private String clientState;

  public static final String JSON_PROPERTY_COMMAND_ID = "command_id";
  private String commandId;


  public SpeakRequest payload(String payload) {
    this.payload = payload;
    return this;
  }

   /**
   * The text or SSML to be converted into speech. There is a 5,000 character limit.
   * @return payload
  **/
  @ApiModelProperty(example = "Say this on the call", required = true, value = "The text or SSML to be converted into speech. There is a 5,000 character limit.")
  @JsonProperty(JSON_PROPERTY_PAYLOAD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPayload() {
    return payload;
  }


  public void setPayload(String payload) {
    this.payload = payload;
  }


  public SpeakRequest payloadType(PayloadTypeEnum payloadType) {
    this.payloadType = payloadType;
    return this;
  }

   /**
   * The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).
   * @return payloadType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ssml", value = "The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).")
  @JsonProperty(JSON_PROPERTY_PAYLOAD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PayloadTypeEnum getPayloadType() {
    return payloadType;
  }


  public void setPayloadType(PayloadTypeEnum payloadType) {
    this.payloadType = payloadType;
  }


  public SpeakRequest serviceLevel(ServiceLevelEnum serviceLevel) {
    this.serviceLevel = serviceLevel;
    return this;
  }

   /**
   * This parameter impacts speech quality, language options and payload types. When using &#x60;basic&#x60;, only the &#x60;en-US&#x60; language and payload type &#x60;text&#x60; are allowed.
   * @return serviceLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "premium", value = "This parameter impacts speech quality, language options and payload types. When using `basic`, only the `en-US` language and payload type `text` are allowed.")
  @JsonProperty(JSON_PROPERTY_SERVICE_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ServiceLevelEnum getServiceLevel() {
    return serviceLevel;
  }


  public void setServiceLevel(ServiceLevelEnum serviceLevel) {
    this.serviceLevel = serviceLevel;
  }


  public SpeakRequest stop(String stop) {
    this.stop = stop;
    return this;
  }

   /**
   * When specified, it stops the current audio being played.  Specify &#x60;current&#x60; to stop the current audio being played, and to play the next file in the queue. Specify &#x60;all&#x60; to stop the current audio file being played and to also clear all audio files from the queue.
   * @return stop
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "current", value = "When specified, it stops the current audio being played.  Specify `current` to stop the current audio being played, and to play the next file in the queue. Specify `all` to stop the current audio file being played and to also clear all audio files from the queue.")
  @JsonProperty(JSON_PROPERTY_STOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStop() {
    return stop;
  }


  public void setStop(String stop) {
    this.stop = stop;
  }


  public SpeakRequest voice(VoiceEnum voice) {
    this.voice = voice;
    return this;
  }

   /**
   * The gender of the voice used to speak back the text.
   * @return voice
  **/
  @ApiModelProperty(example = "female", required = true, value = "The gender of the voice used to speak back the text.")
  @JsonProperty(JSON_PROPERTY_VOICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VoiceEnum getVoice() {
    return voice;
  }


  public void setVoice(VoiceEnum voice) {
    this.voice = voice;
  }


  public SpeakRequest language(LanguageEnum language) {
    this.language = language;
    return this;
  }

   /**
   * The language you want spoken.
   * @return language
  **/
  @ApiModelProperty(example = "en-US", required = true, value = "The language you want spoken.")
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LanguageEnum getLanguage() {
    return language;
  }


  public void setLanguage(LanguageEnum language) {
    this.language = language;
  }


  public SpeakRequest clientState(String clientState) {
    this.clientState = clientState;
    return this;
  }

   /**
   * Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.
   * @return clientState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "aGF2ZSBhIG5pY2UgZGF5ID1d", value = "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.")
  @JsonProperty(JSON_PROPERTY_CLIENT_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientState() {
    return clientState;
  }


  public void setClientState(String clientState) {
    this.clientState = clientState;
  }


  public SpeakRequest commandId(String commandId) {
    this.commandId = commandId;
    return this;
  }

   /**
   * Use this field to avoid duplicate commands. Telnyx will ignore commands with the same &#x60;command_id&#x60;.
   * @return commandId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "891510ac-f3e4-11e8-af5b-de00688a4901", value = "Use this field to avoid duplicate commands. Telnyx will ignore commands with the same `command_id`.")
  @JsonProperty(JSON_PROPERTY_COMMAND_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCommandId() {
    return commandId;
  }


  public void setCommandId(String commandId) {
    this.commandId = commandId;
  }


  /**
   * Return true if this SpeakRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpeakRequest speakRequest = (SpeakRequest) o;
    return Objects.equals(this.payload, speakRequest.payload) &&
        Objects.equals(this.payloadType, speakRequest.payloadType) &&
        Objects.equals(this.serviceLevel, speakRequest.serviceLevel) &&
        Objects.equals(this.stop, speakRequest.stop) &&
        Objects.equals(this.voice, speakRequest.voice) &&
        Objects.equals(this.language, speakRequest.language) &&
        Objects.equals(this.clientState, speakRequest.clientState) &&
        Objects.equals(this.commandId, speakRequest.commandId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(payload, payloadType, serviceLevel, stop, voice, language, clientState, commandId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpeakRequest {\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    payloadType: ").append(toIndentedString(payloadType)).append("\n");
    sb.append("    serviceLevel: ").append(toIndentedString(serviceLevel)).append("\n");
    sb.append("    stop: ").append(toIndentedString(stop)).append("\n");
    sb.append("    voice: ").append(toIndentedString(voice)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    clientState: ").append(toIndentedString(clientState)).append("\n");
    sb.append("    commandId: ").append(toIndentedString(commandId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

