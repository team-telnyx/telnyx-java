/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * The messaging portability status of the porting order.
 */
@ApiModel(description = "The messaging portability status of the porting order.")
@JsonPropertyOrder({
  WebhookPortingOrderMessagingChangedPayloadMessaging.JSON_PROPERTY_MESSAGING_CAPABLE,
  WebhookPortingOrderMessagingChangedPayloadMessaging.JSON_PROPERTY_ENABLE_MESSAGING,
  WebhookPortingOrderMessagingChangedPayloadMessaging.JSON_PROPERTY_MESSAGING_PORT_STATUS,
  WebhookPortingOrderMessagingChangedPayloadMessaging.JSON_PROPERTY_MESSAGING_PORT_COMPLETED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class WebhookPortingOrderMessagingChangedPayloadMessaging {
  public static final String JSON_PROPERTY_MESSAGING_CAPABLE = "messaging_capable";
  private Boolean messagingCapable;

  public static final String JSON_PROPERTY_ENABLE_MESSAGING = "enable_messaging";
  private Boolean enableMessaging;

  /**
   * Indicates the messaging port status of the porting order.
   */
  public enum MessagingPortStatusEnum {
    NOT_APPLICABLE(String.valueOf("not_applicable")),
    
    PENDING(String.valueOf("pending")),
    
    ACTIVATING(String.valueOf("activating")),
    
    EXCEPTION(String.valueOf("exception")),
    
    CANCELED(String.valueOf("canceled")),
    
    PARTIAL_PORT_COMPLETE(String.valueOf("partial_port_complete")),
    
    PORTED(String.valueOf("ported"));

    private String value;

    MessagingPortStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MessagingPortStatusEnum fromValue(String value) {
      for (MessagingPortStatusEnum b : MessagingPortStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_MESSAGING_PORT_STATUS = "messaging_port_status";
  private MessagingPortStatusEnum messagingPortStatus;

  public static final String JSON_PROPERTY_MESSAGING_PORT_COMPLETED = "messaging_port_completed";
  private Boolean messagingPortCompleted;

  public WebhookPortingOrderMessagingChangedPayloadMessaging() { 
  }

  public WebhookPortingOrderMessagingChangedPayloadMessaging messagingCapable(Boolean messagingCapable) {
    this.messagingCapable = messagingCapable;
    return this;
  }

   /**
   * Indicates whether the porting order is messaging capable.
   * @return messagingCapable
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates whether the porting order is messaging capable.")
  @JsonProperty(JSON_PROPERTY_MESSAGING_CAPABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMessagingCapable() {
    return messagingCapable;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGING_CAPABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessagingCapable(Boolean messagingCapable) {
    this.messagingCapable = messagingCapable;
  }


  public WebhookPortingOrderMessagingChangedPayloadMessaging enableMessaging(Boolean enableMessaging) {
    this.enableMessaging = enableMessaging;
    return this;
  }

   /**
   * Indicates whether Telnyx will port messaging capabilities from the losing carrier. If false, any messaging capabilities will stay with their current provider.
   * @return enableMessaging
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates whether Telnyx will port messaging capabilities from the losing carrier. If false, any messaging capabilities will stay with their current provider.")
  @JsonProperty(JSON_PROPERTY_ENABLE_MESSAGING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableMessaging() {
    return enableMessaging;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_MESSAGING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableMessaging(Boolean enableMessaging) {
    this.enableMessaging = enableMessaging;
  }


  public WebhookPortingOrderMessagingChangedPayloadMessaging messagingPortStatus(MessagingPortStatusEnum messagingPortStatus) {
    this.messagingPortStatus = messagingPortStatus;
    return this;
  }

   /**
   * Indicates the messaging port status of the porting order.
   * @return messagingPortStatus
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "ported", value = "Indicates the messaging port status of the porting order.")
  @JsonProperty(JSON_PROPERTY_MESSAGING_PORT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MessagingPortStatusEnum getMessagingPortStatus() {
    return messagingPortStatus;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGING_PORT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessagingPortStatus(MessagingPortStatusEnum messagingPortStatus) {
    this.messagingPortStatus = messagingPortStatus;
  }


  public WebhookPortingOrderMessagingChangedPayloadMessaging messagingPortCompleted(Boolean messagingPortCompleted) {
    this.messagingPortCompleted = messagingPortCompleted;
    return this;
  }

   /**
   * Indicates whether the messaging port is completed.
   * @return messagingPortCompleted
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates whether the messaging port is completed.")
  @JsonProperty(JSON_PROPERTY_MESSAGING_PORT_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMessagingPortCompleted() {
    return messagingPortCompleted;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGING_PORT_COMPLETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessagingPortCompleted(Boolean messagingPortCompleted) {
    this.messagingPortCompleted = messagingPortCompleted;
  }


  /**
   * Return true if this WebhookPortingOrderMessagingChangedPayload_messaging object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookPortingOrderMessagingChangedPayloadMessaging webhookPortingOrderMessagingChangedPayloadMessaging = (WebhookPortingOrderMessagingChangedPayloadMessaging) o;
    return Objects.equals(this.messagingCapable, webhookPortingOrderMessagingChangedPayloadMessaging.messagingCapable) &&
        Objects.equals(this.enableMessaging, webhookPortingOrderMessagingChangedPayloadMessaging.enableMessaging) &&
        Objects.equals(this.messagingPortStatus, webhookPortingOrderMessagingChangedPayloadMessaging.messagingPortStatus) &&
        Objects.equals(this.messagingPortCompleted, webhookPortingOrderMessagingChangedPayloadMessaging.messagingPortCompleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messagingCapable, enableMessaging, messagingPortStatus, messagingPortCompleted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookPortingOrderMessagingChangedPayloadMessaging {\n");
    sb.append("    messagingCapable: ").append(toIndentedString(messagingCapable)).append("\n");
    sb.append("    enableMessaging: ").append(toIndentedString(enableMessaging)).append("\n");
    sb.append("    messagingPortStatus: ").append(toIndentedString(messagingPortStatus)).append("\n");
    sb.append("    messagingPortCompleted: ").append(toIndentedString(messagingPortCompleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

