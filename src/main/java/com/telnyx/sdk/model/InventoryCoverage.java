/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.telnyx.sdk.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.JSON;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Arrays;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * InventoryCoverage
 */
@JsonPropertyOrder(
    {
        InventoryCoverage.JSON_PROPERTY_GROUP,
        InventoryCoverage.JSON_PROPERTY_GROUP_TYPE,
        InventoryCoverage.JSON_PROPERTY_NUMBER_RANGE,
        InventoryCoverage.JSON_PROPERTY_NUMBER_TYPE,
        InventoryCoverage.JSON_PROPERTY_PHONE_NUMBER_TYPE,
        InventoryCoverage.JSON_PROPERTY_COVERAGE_TYPE,
        InventoryCoverage.JSON_PROPERTY_RECORD_TYPE,
        InventoryCoverage.JSON_PROPERTY_ADMINISTRATIVE_AREA,
        InventoryCoverage.JSON_PROPERTY_COUNT,
        InventoryCoverage.JSON_PROPERTY_ADVANCE_REQUIREMENTS,
    }
)
@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.11.0"
)
public class InventoryCoverage {

    public static final String JSON_PROPERTY_GROUP = "group";
    private String group;

    public static final String JSON_PROPERTY_GROUP_TYPE = "group_type";
    private String groupType;

    public static final String JSON_PROPERTY_NUMBER_RANGE = "number_range";
    private Integer numberRange;

    /**
     * Gets or Sets numberType
     */
    public enum NumberTypeEnum {
        DID(String.valueOf("did")),

        TOLL_FREE(String.valueOf("toll-free"));

        private String value;

        NumberTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static NumberTypeEnum fromValue(String value) {
            for (NumberTypeEnum b : NumberTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException(
                "Unexpected value '" + value + "'"
            );
        }
    }

    public static final String JSON_PROPERTY_NUMBER_TYPE = "number_type";
    private NumberTypeEnum numberType;

    /**
     * Gets or Sets phoneNumberType
     */
    public enum PhoneNumberTypeEnum {
        LOCAL(String.valueOf("local")),

        TOLL_FREE(String.valueOf("toll_free")),

        NATIONAL(String.valueOf("national")),

        LANDLINE(String.valueOf("landline")),

        SHARED_COST(String.valueOf("shared_cost")),

        MOBILE(String.valueOf("mobile"));

        private String value;

        PhoneNumberTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static PhoneNumberTypeEnum fromValue(String value) {
            for (PhoneNumberTypeEnum b : PhoneNumberTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException(
                "Unexpected value '" + value + "'"
            );
        }
    }

    public static final String JSON_PROPERTY_PHONE_NUMBER_TYPE =
        "phone_number_type";
    private PhoneNumberTypeEnum phoneNumberType;

    /**
     * Gets or Sets coverageType
     */
    public enum CoverageTypeEnum {
        NUMBER(String.valueOf("number")),

        BLOCK(String.valueOf("block"));

        private String value;

        CoverageTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static CoverageTypeEnum fromValue(String value) {
            for (CoverageTypeEnum b : CoverageTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException(
                "Unexpected value '" + value + "'"
            );
        }
    }

    public static final String JSON_PROPERTY_COVERAGE_TYPE = "coverage_type";
    private CoverageTypeEnum coverageType;

    public static final String JSON_PROPERTY_RECORD_TYPE = "record_type";
    private String recordType;

    public static final String JSON_PROPERTY_ADMINISTRATIVE_AREA =
        "administrative_area";
    private String administrativeArea;

    public static final String JSON_PROPERTY_COUNT = "count";
    private Integer count;

    public static final String JSON_PROPERTY_ADVANCE_REQUIREMENTS =
        "advance_requirements";
    private Boolean advanceRequirements;

    public InventoryCoverage() {}

    public InventoryCoverage group(String group) {
        this.group = group;
        return this;
    }

    /**
     * Get group
     * @return group
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "318", value = "")
    @JsonProperty(JSON_PROPERTY_GROUP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getGroup() {
        return group;
    }

    @JsonProperty(JSON_PROPERTY_GROUP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGroup(String group) {
        this.group = group;
    }

    public InventoryCoverage groupType(String groupType) {
        this.groupType = groupType;
        return this;
    }

    /**
     * Get groupType
     * @return groupType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "npa", value = "")
    @JsonProperty(JSON_PROPERTY_GROUP_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getGroupType() {
        return groupType;
    }

    @JsonProperty(JSON_PROPERTY_GROUP_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGroupType(String groupType) {
        this.groupType = groupType;
    }

    public InventoryCoverage numberRange(Integer numberRange) {
        this.numberRange = numberRange;
        return this;
    }

    /**
     * Get numberRange
     * @return numberRange
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "1", value = "")
    @JsonProperty(JSON_PROPERTY_NUMBER_RANGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getNumberRange() {
        return numberRange;
    }

    @JsonProperty(JSON_PROPERTY_NUMBER_RANGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNumberRange(Integer numberRange) {
        this.numberRange = numberRange;
    }

    public InventoryCoverage numberType(NumberTypeEnum numberType) {
        this.numberType = numberType;
        return this;
    }

    /**
     * Get numberType
     * @return numberType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "did", value = "")
    @JsonProperty(JSON_PROPERTY_NUMBER_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public NumberTypeEnum getNumberType() {
        return numberType;
    }

    @JsonProperty(JSON_PROPERTY_NUMBER_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNumberType(NumberTypeEnum numberType) {
        this.numberType = numberType;
    }

    public InventoryCoverage phoneNumberType(
        PhoneNumberTypeEnum phoneNumberType
    ) {
        this.phoneNumberType = phoneNumberType;
        return this;
    }

    /**
     * Get phoneNumberType
     * @return phoneNumberType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "local", value = "")
    @JsonProperty(JSON_PROPERTY_PHONE_NUMBER_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public PhoneNumberTypeEnum getPhoneNumberType() {
        return phoneNumberType;
    }

    @JsonProperty(JSON_PROPERTY_PHONE_NUMBER_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPhoneNumberType(PhoneNumberTypeEnum phoneNumberType) {
        this.phoneNumberType = phoneNumberType;
    }

    public InventoryCoverage coverageType(CoverageTypeEnum coverageType) {
        this.coverageType = coverageType;
        return this;
    }

    /**
     * Get coverageType
     * @return coverageType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "number", value = "")
    @JsonProperty(JSON_PROPERTY_COVERAGE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public CoverageTypeEnum getCoverageType() {
        return coverageType;
    }

    @JsonProperty(JSON_PROPERTY_COVERAGE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCoverageType(CoverageTypeEnum coverageType) {
        this.coverageType = coverageType;
    }

    public InventoryCoverage recordType(String recordType) {
        this.recordType = recordType;
        return this;
    }

    /**
     * Get recordType
     * @return recordType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "inventory_coverage_group", value = "")
    @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRecordType() {
        return recordType;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordType(String recordType) {
        this.recordType = recordType;
    }

    public InventoryCoverage administrativeArea(String administrativeArea) {
        this.administrativeArea = administrativeArea;
        return this;
    }

    /**
     * Get administrativeArea
     * @return administrativeArea
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "NJ", value = "")
    @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getAdministrativeArea() {
        return administrativeArea;
    }

    @JsonProperty(JSON_PROPERTY_ADMINISTRATIVE_AREA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdministrativeArea(String administrativeArea) {
        this.administrativeArea = administrativeArea;
    }

    public InventoryCoverage count(Integer count) {
        this.count = count;
        return this;
    }

    /**
     * Get count
     * @return count
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "3", value = "")
    @JsonProperty(JSON_PROPERTY_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getCount() {
        return count;
    }

    @JsonProperty(JSON_PROPERTY_COUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCount(Integer count) {
        this.count = count;
    }

    public InventoryCoverage advanceRequirements(Boolean advanceRequirements) {
        this.advanceRequirements = advanceRequirements;
        return this;
    }

    /**
     * Indicates if the phone number requires advance requirements.
     * @return advanceRequirements
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(
        example = "true",
        value = "Indicates if the phone number requires advance requirements."
    )
    @JsonProperty(JSON_PROPERTY_ADVANCE_REQUIREMENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getAdvanceRequirements() {
        return advanceRequirements;
    }

    @JsonProperty(JSON_PROPERTY_ADVANCE_REQUIREMENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdvanceRequirements(Boolean advanceRequirements) {
        this.advanceRequirements = advanceRequirements;
    }

    /**
     * Return true if this InventoryCoverage object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        InventoryCoverage inventoryCoverage = (InventoryCoverage) o;
        return (
            Objects.equals(this.group, inventoryCoverage.group) &&
            Objects.equals(this.groupType, inventoryCoverage.groupType) &&
            Objects.equals(this.numberRange, inventoryCoverage.numberRange) &&
            Objects.equals(this.numberType, inventoryCoverage.numberType) &&
            Objects.equals(
                this.phoneNumberType,
                inventoryCoverage.phoneNumberType
            ) &&
            Objects.equals(this.coverageType, inventoryCoverage.coverageType) &&
            Objects.equals(this.recordType, inventoryCoverage.recordType) &&
            Objects.equals(
                this.administrativeArea,
                inventoryCoverage.administrativeArea
            ) &&
            Objects.equals(this.count, inventoryCoverage.count) &&
            Objects.equals(
                this.advanceRequirements,
                inventoryCoverage.advanceRequirements
            )
        );
    }

    @Override
    public int hashCode() {
        return Objects.hash(
            group,
            groupType,
            numberRange,
            numberType,
            phoneNumberType,
            coverageType,
            recordType,
            administrativeArea,
            count,
            advanceRequirements
        );
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class InventoryCoverage {\n");
        sb.append("    group: ").append(toIndentedString(group)).append("\n");
        sb
            .append("    groupType: ")
            .append(toIndentedString(groupType))
            .append("\n");
        sb
            .append("    numberRange: ")
            .append(toIndentedString(numberRange))
            .append("\n");
        sb
            .append("    numberType: ")
            .append(toIndentedString(numberType))
            .append("\n");
        sb
            .append("    phoneNumberType: ")
            .append(toIndentedString(phoneNumberType))
            .append("\n");
        sb
            .append("    coverageType: ")
            .append(toIndentedString(coverageType))
            .append("\n");
        sb
            .append("    recordType: ")
            .append(toIndentedString(recordType))
            .append("\n");
        sb
            .append("    administrativeArea: ")
            .append(toIndentedString(administrativeArea))
            .append("\n");
        sb.append("    count: ").append(toIndentedString(count)).append("\n");
        sb
            .append("    advanceRequirements: ")
            .append(toIndentedString(advanceRequirements))
            .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
