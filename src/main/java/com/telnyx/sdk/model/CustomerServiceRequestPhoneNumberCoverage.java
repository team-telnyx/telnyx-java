/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * CustomerServiceRequestPhoneNumberCoverage
 */
@JsonPropertyOrder({
  CustomerServiceRequestPhoneNumberCoverage.JSON_PROPERTY_PHONE_NUMBER,
  CustomerServiceRequestPhoneNumberCoverage.JSON_PROPERTY_HAS_CSR_COVERAGE,
  CustomerServiceRequestPhoneNumberCoverage.JSON_PROPERTY_REASON,
  CustomerServiceRequestPhoneNumberCoverage.JSON_PROPERTY_RECORD_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CustomerServiceRequestPhoneNumberCoverage {
  public static final String JSON_PROPERTY_PHONE_NUMBER = "phone_number";
  private String phoneNumber;

  public static final String JSON_PROPERTY_HAS_CSR_COVERAGE = "has_csr_coverage";
  private Boolean hasCsrCoverage;

  public static final String JSON_PROPERTY_REASON = "reason";
  private String reason;

  public static final String JSON_PROPERTY_RECORD_TYPE = "record_type";
  private String recordType;

  public CustomerServiceRequestPhoneNumberCoverage() { 
  }

  public CustomerServiceRequestPhoneNumberCoverage phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * The phone number that is being verified.
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+12223334444", value = "The phone number that is being verified.")
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public CustomerServiceRequestPhoneNumberCoverage hasCsrCoverage(Boolean hasCsrCoverage) {
    this.hasCsrCoverage = hasCsrCoverage;
    return this;
  }

   /**
   * Indicates whether the phone number is covered or not.
   * @return hasCsrCoverage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates whether the phone number is covered or not.")
  @JsonProperty(JSON_PROPERTY_HAS_CSR_COVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getHasCsrCoverage() {
    return hasCsrCoverage;
  }


  @JsonProperty(JSON_PROPERTY_HAS_CSR_COVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHasCsrCoverage(Boolean hasCsrCoverage) {
    this.hasCsrCoverage = hasCsrCoverage;
  }


  public CustomerServiceRequestPhoneNumberCoverage reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * The reason why the phone number is not covered. Only returned if &#x60;has_csr_coverage&#x60; is false.
   * @return reason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "The phone number '+19999999999' is invalid.", value = "The reason why the phone number is not covered. Only returned if `has_csr_coverage` is false.")
  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReason() {
    return reason;
  }


  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReason(String reason) {
    this.reason = reason;
  }


  public CustomerServiceRequestPhoneNumberCoverage recordType(String recordType) {
    this.recordType = recordType;
    return this;
  }

   /**
   * Identifies the type of the resource.
   * @return recordType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "customer_service_request_phone_number_coverage", value = "Identifies the type of the resource.")
  @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecordType() {
    return recordType;
  }


  @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecordType(String recordType) {
    this.recordType = recordType;
  }


  /**
   * Return true if this CustomerServiceRequestPhoneNumberCoverage object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerServiceRequestPhoneNumberCoverage customerServiceRequestPhoneNumberCoverage = (CustomerServiceRequestPhoneNumberCoverage) o;
    return Objects.equals(this.phoneNumber, customerServiceRequestPhoneNumberCoverage.phoneNumber) &&
        Objects.equals(this.hasCsrCoverage, customerServiceRequestPhoneNumberCoverage.hasCsrCoverage) &&
        Objects.equals(this.reason, customerServiceRequestPhoneNumberCoverage.reason) &&
        Objects.equals(this.recordType, customerServiceRequestPhoneNumberCoverage.recordType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(phoneNumber, hasCsrCoverage, reason, recordType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerServiceRequestPhoneNumberCoverage {\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    hasCsrCoverage: ").append(toIndentedString(hasCsrCoverage)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

