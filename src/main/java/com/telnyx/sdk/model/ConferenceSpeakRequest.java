/*
 * Telnyx API
 * Notifications and Notification Settings.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * ConferenceSpeakRequest
 */
@JsonPropertyOrder({
  ConferenceSpeakRequest.JSON_PROPERTY_CALL_CONTROL_IDS,
  ConferenceSpeakRequest.JSON_PROPERTY_PAYLOAD,
  ConferenceSpeakRequest.JSON_PROPERTY_PAYLOAD_TYPE,
  ConferenceSpeakRequest.JSON_PROPERTY_VOICE,
  ConferenceSpeakRequest.JSON_PROPERTY_LANGUAGE,
  ConferenceSpeakRequest.JSON_PROPERTY_COMMAND_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class ConferenceSpeakRequest {
  public static final String JSON_PROPERTY_CALL_CONTROL_IDS = "call_control_ids";
  private List<String> callControlIds = null;

  public static final String JSON_PROPERTY_PAYLOAD = "payload";
  private String payload;

  /**
   * The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).
   */
  public enum PayloadTypeEnum {
    TEXT(String.valueOf("text")),
    
    SSML(String.valueOf("ssml"));

    private String value;

    PayloadTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PayloadTypeEnum fromValue(String value) {
      for (PayloadTypeEnum b : PayloadTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PAYLOAD_TYPE = "payload_type";
  private PayloadTypeEnum payloadType = PayloadTypeEnum.TEXT;

  /**
   * The gender of the voice used to speak back the text or the specific Amazon Polly voice to be used in the form of &#x60;Polly.&lt;voice&gt;&#x60;, e.g. &#x60;Polly.Brian&#x60;. All standard Amazon Polly voices are supported.
   */
  public enum VoiceEnum {
    MALE(String.valueOf("male")),
    
    FEMALE(String.valueOf("female"));

    private String value;

    VoiceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VoiceEnum fromValue(String value) {
      for (VoiceEnum b : VoiceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VOICE = "voice";
  private VoiceEnum voice;

  /**
   * The language you want spoken. This parameter is ignored when a &#x60;Polly.*&#x60; voice is specified.
   */
  public enum LanguageEnum {
    ARB(String.valueOf("arb")),
    
    CMN_CN(String.valueOf("cmn-CN")),
    
    CY_GB(String.valueOf("cy-GB")),
    
    DA_DK(String.valueOf("da-DK")),
    
    DE_DE(String.valueOf("de-DE")),
    
    EN_AU(String.valueOf("en-AU")),
    
    EN_GB(String.valueOf("en-GB")),
    
    EN_GB_WLS(String.valueOf("en-GB-WLS")),
    
    EN_IN(String.valueOf("en-IN")),
    
    EN_US(String.valueOf("en-US")),
    
    ES_ES(String.valueOf("es-ES")),
    
    ES_MX(String.valueOf("es-MX")),
    
    ES_US(String.valueOf("es-US")),
    
    FR_CA(String.valueOf("fr-CA")),
    
    FR_FR(String.valueOf("fr-FR")),
    
    HI_IN(String.valueOf("hi-IN")),
    
    IS_IS(String.valueOf("is-IS")),
    
    IT_IT(String.valueOf("it-IT")),
    
    JA_JP(String.valueOf("ja-JP")),
    
    KO_KR(String.valueOf("ko-KR")),
    
    NB_NO(String.valueOf("nb-NO")),
    
    NL_NL(String.valueOf("nl-NL")),
    
    PL_PL(String.valueOf("pl-PL")),
    
    PT_BR(String.valueOf("pt-BR")),
    
    PT_PT(String.valueOf("pt-PT")),
    
    RO_RO(String.valueOf("ro-RO")),
    
    RU_RU(String.valueOf("ru-RU")),
    
    SV_SE(String.valueOf("sv-SE")),
    
    TR_TR(String.valueOf("tr-TR"));

    private String value;

    LanguageEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LanguageEnum fromValue(String value) {
      for (LanguageEnum b : LanguageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LANGUAGE = "language";
  private LanguageEnum language;

  public static final String JSON_PROPERTY_COMMAND_ID = "command_id";
  private String commandId;

  public ConferenceSpeakRequest() { 
  }

  public ConferenceSpeakRequest callControlIds(List<String> callControlIds) {
    this.callControlIds = callControlIds;
    return this;
  }

  public ConferenceSpeakRequest addcallControlIdsItem(String callControlIdsItem) {
    if (this.callControlIds == null) {
      this.callControlIds = new ArrayList<>();
    }
    this.callControlIds.add(callControlIdsItem);
    return this;
  }

   /**
   * Call Control IDs of participants who will hear the spoken text. When empty all participants will hear the spoken text.
   * @return callControlIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Call Control IDs of participants who will hear the spoken text. When empty all participants will hear the spoken text.")
  @JsonProperty(JSON_PROPERTY_CALL_CONTROL_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getCallControlIds() {
    return callControlIds;
  }


  @JsonProperty(JSON_PROPERTY_CALL_CONTROL_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCallControlIds(List<String> callControlIds) {
    this.callControlIds = callControlIds;
  }


  public ConferenceSpeakRequest payload(String payload) {
    this.payload = payload;
    return this;
  }

   /**
   * The text or SSML to be converted into speech. There is a 3,000 character limit.
   * @return payload
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Say this to participants", required = true, value = "The text or SSML to be converted into speech. There is a 3,000 character limit.")
  @JsonProperty(JSON_PROPERTY_PAYLOAD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPayload() {
    return payload;
  }


  @JsonProperty(JSON_PROPERTY_PAYLOAD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPayload(String payload) {
    this.payload = payload;
  }


  public ConferenceSpeakRequest payloadType(PayloadTypeEnum payloadType) {
    this.payloadType = payloadType;
    return this;
  }

   /**
   * The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).
   * @return payloadType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ssml", value = "The type of the provided payload. The payload can either be plain text, or Speech Synthesis Markup Language (SSML).")
  @JsonProperty(JSON_PROPERTY_PAYLOAD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PayloadTypeEnum getPayloadType() {
    return payloadType;
  }


  @JsonProperty(JSON_PROPERTY_PAYLOAD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayloadType(PayloadTypeEnum payloadType) {
    this.payloadType = payloadType;
  }


  public ConferenceSpeakRequest voice(VoiceEnum voice) {
    this.voice = voice;
    return this;
  }

   /**
   * The gender of the voice used to speak back the text or the specific Amazon Polly voice to be used in the form of &#x60;Polly.&lt;voice&gt;&#x60;, e.g. &#x60;Polly.Brian&#x60;. All standard Amazon Polly voices are supported.
   * @return voice
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "female", required = true, value = "The gender of the voice used to speak back the text or the specific Amazon Polly voice to be used in the form of `Polly.<voice>`, e.g. `Polly.Brian`. All standard Amazon Polly voices are supported.")
  @JsonProperty(JSON_PROPERTY_VOICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VoiceEnum getVoice() {
    return voice;
  }


  @JsonProperty(JSON_PROPERTY_VOICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVoice(VoiceEnum voice) {
    this.voice = voice;
  }


  public ConferenceSpeakRequest language(LanguageEnum language) {
    this.language = language;
    return this;
  }

   /**
   * The language you want spoken. This parameter is ignored when a &#x60;Polly.*&#x60; voice is specified.
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "en-US", value = "The language you want spoken. This parameter is ignored when a `Polly.*` voice is specified.")
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LanguageEnum getLanguage() {
    return language;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanguage(LanguageEnum language) {
    this.language = language;
  }


  public ConferenceSpeakRequest commandId(String commandId) {
    this.commandId = commandId;
    return this;
  }

   /**
   * Use this field to avoid execution of duplicate commands. Telnyx will ignore subsequent commands with the same &#x60;command_id&#x60; as one that has already been executed.
   * @return commandId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "891510ac-f3e4-11e8-af5b-de00688a4901", value = "Use this field to avoid execution of duplicate commands. Telnyx will ignore subsequent commands with the same `command_id` as one that has already been executed.")
  @JsonProperty(JSON_PROPERTY_COMMAND_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCommandId() {
    return commandId;
  }


  @JsonProperty(JSON_PROPERTY_COMMAND_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommandId(String commandId) {
    this.commandId = commandId;
  }


  /**
   * Return true if this ConferenceSpeakRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConferenceSpeakRequest conferenceSpeakRequest = (ConferenceSpeakRequest) o;
    return Objects.equals(this.callControlIds, conferenceSpeakRequest.callControlIds) &&
        Objects.equals(this.payload, conferenceSpeakRequest.payload) &&
        Objects.equals(this.payloadType, conferenceSpeakRequest.payloadType) &&
        Objects.equals(this.voice, conferenceSpeakRequest.voice) &&
        Objects.equals(this.language, conferenceSpeakRequest.language) &&
        Objects.equals(this.commandId, conferenceSpeakRequest.commandId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callControlIds, payload, payloadType, voice, language, commandId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConferenceSpeakRequest {\n");
    sb.append("    callControlIds: ").append(toIndentedString(callControlIds)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    payloadType: ").append(toIndentedString(payloadType)).append("\n");
    sb.append("    voice: ").append(toIndentedString(voice)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    commandId: ").append(toIndentedString(commandId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

