/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * SIMCardDeviceDetails
 */
@JsonPropertyOrder({
  SIMCardDeviceDetails.JSON_PROPERTY_RECORD_TYPE,
  SIMCardDeviceDetails.JSON_PROPERTY_IMEI,
  SIMCardDeviceDetails.JSON_PROPERTY_MODEL_NAME,
  SIMCardDeviceDetails.JSON_PROPERTY_BRAND_NAME,
  SIMCardDeviceDetails.JSON_PROPERTY_DEVICE_TYPE,
  SIMCardDeviceDetails.JSON_PROPERTY_OPERATING_SYSTEM
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SIMCardDeviceDetails {
  public static final String JSON_PROPERTY_RECORD_TYPE = "record_type";
  private String recordType;

  public static final String JSON_PROPERTY_IMEI = "imei";
  private String imei;

  public static final String JSON_PROPERTY_MODEL_NAME = "model_name";
  private String modelName;

  public static final String JSON_PROPERTY_BRAND_NAME = "brand_name";
  private String brandName;

  public static final String JSON_PROPERTY_DEVICE_TYPE = "device_type";
  private String deviceType;

  public static final String JSON_PROPERTY_OPERATING_SYSTEM = "operating_system";
  private String operatingSystem;

  public SIMCardDeviceDetails() { 
  }

  @JsonCreator
  public SIMCardDeviceDetails(
    @JsonProperty(JSON_PROPERTY_RECORD_TYPE) String recordType, 
    @JsonProperty(JSON_PROPERTY_IMEI) String imei, 
    @JsonProperty(JSON_PROPERTY_MODEL_NAME) String modelName, 
    @JsonProperty(JSON_PROPERTY_BRAND_NAME) String brandName, 
    @JsonProperty(JSON_PROPERTY_DEVICE_TYPE) String deviceType, 
    @JsonProperty(JSON_PROPERTY_OPERATING_SYSTEM) String operatingSystem
  ) {
    this();
    this.recordType = recordType;
    this.imei = imei;
    this.modelName = modelName;
    this.brandName = brandName;
    this.deviceType = deviceType;
    this.operatingSystem = operatingSystem;
  }

   /**
   * Get recordType
   * @return recordType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "device_details", value = "")
  @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecordType() {
    return recordType;
  }




   /**
   * IMEI of the device where the SIM card is being used in.
   * @return imei
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "457032284023794", value = "IMEI of the device where the SIM card is being used in.")
  @JsonProperty(JSON_PROPERTY_IMEI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImei() {
    return imei;
  }




   /**
   * Brand of the device where the SIM card is being used in.
   * @return modelName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "iPad Pro 11 2020 Cellular", value = "Brand of the device where the SIM card is being used in.")
  @JsonProperty(JSON_PROPERTY_MODEL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getModelName() {
    return modelName;
  }




   /**
   * Brand of the device where the SIM card is being used in.
   * @return brandName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Apple", value = "Brand of the device where the SIM card is being used in.")
  @JsonProperty(JSON_PROPERTY_BRAND_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrandName() {
    return brandName;
  }




   /**
   * Type of the device where the SIM card is being used in.
   * @return deviceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Tablet", value = "Type of the device where the SIM card is being used in.")
  @JsonProperty(JSON_PROPERTY_DEVICE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeviceType() {
    return deviceType;
  }




   /**
   * Operating system of the device where the SIM card is being used in.
   * @return operatingSystem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "iOS 12", value = "Operating system of the device where the SIM card is being used in.")
  @JsonProperty(JSON_PROPERTY_OPERATING_SYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOperatingSystem() {
    return operatingSystem;
  }




  /**
   * Return true if this SIMCardDeviceDetails object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SIMCardDeviceDetails siMCardDeviceDetails = (SIMCardDeviceDetails) o;
    return Objects.equals(this.recordType, siMCardDeviceDetails.recordType) &&
        Objects.equals(this.imei, siMCardDeviceDetails.imei) &&
        Objects.equals(this.modelName, siMCardDeviceDetails.modelName) &&
        Objects.equals(this.brandName, siMCardDeviceDetails.brandName) &&
        Objects.equals(this.deviceType, siMCardDeviceDetails.deviceType) &&
        Objects.equals(this.operatingSystem, siMCardDeviceDetails.operatingSystem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recordType, imei, modelName, brandName, deviceType, operatingSystem);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SIMCardDeviceDetails {\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    imei: ").append(toIndentedString(imei)).append("\n");
    sb.append("    modelName: ").append(toIndentedString(modelName)).append("\n");
    sb.append("    brandName: ").append(toIndentedString(brandName)).append("\n");
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    operatingSystem: ").append(toIndentedString(operatingSystem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

