/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.telnyx.sdk.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.JSON;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.UUID;

/**
 * The comment that was added to the porting order.
 */
@ApiModel(description = "The comment that was added to the porting order.")
@JsonPropertyOrder(
    {
        WebhookPortingOrderNewCommentPayloadComment.JSON_PROPERTY_ID,
        WebhookPortingOrderNewCommentPayloadComment.JSON_PROPERTY_BODY,
        WebhookPortingOrderNewCommentPayloadComment.JSON_PROPERTY_USER_ID,
        WebhookPortingOrderNewCommentPayloadComment.JSON_PROPERTY_USER_TYPE,
        WebhookPortingOrderNewCommentPayloadComment.JSON_PROPERTY_INSERTED_AT,
    }
)
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.11.0"
)
public class WebhookPortingOrderNewCommentPayloadComment {

    public static final String JSON_PROPERTY_ID = "id";
    private UUID id;

    public static final String JSON_PROPERTY_BODY = "body";
    private String body;

    public static final String JSON_PROPERTY_USER_ID = "user_id";
    private UUID userId;

    /**
     * Identifies the type of the user that created the comment.
     */
    public enum UserTypeEnum {
        USER(String.valueOf("user")),

        ADMIN(String.valueOf("admin")),

        SYSTEM(String.valueOf("system"));

        private String value;

        UserTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static UserTypeEnum fromValue(String value) {
            for (UserTypeEnum b : UserTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException(
                "Unexpected value '" + value + "'"
            );
        }
    }

    public static final String JSON_PROPERTY_USER_TYPE = "user_type";
    private UserTypeEnum userType;

    public static final String JSON_PROPERTY_INSERTED_AT = "inserted_at";
    private OffsetDateTime insertedAt;

    public WebhookPortingOrderNewCommentPayloadComment() {}

    public WebhookPortingOrderNewCommentPayloadComment id(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Identifies the comment.
     * @return id
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "96dfa9e4-c753-4fd3-97cd-42d66f26cf0c",
        value = "Identifies the comment."
    )
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public UUID getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(UUID id) {
        this.id = id;
    }

    public WebhookPortingOrderNewCommentPayloadComment body(String body) {
        this.body = body;
        return this;
    }

    /**
     * The body of the comment.
     * @return body
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "This is a comment.",
        value = "The body of the comment."
    )
    @JsonProperty(JSON_PROPERTY_BODY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getBody() {
        return body;
    }

    @JsonProperty(JSON_PROPERTY_BODY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBody(String body) {
        this.body = body;
    }

    public WebhookPortingOrderNewCommentPayloadComment userId(UUID userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Identifies the user that create the comment.
     * @return userId
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "96dfa9e4-c753-4fd3-97cd-42d66f26cf0c",
        value = "Identifies the user that create the comment."
    )
    @JsonProperty(JSON_PROPERTY_USER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public UUID getUserId() {
        return userId;
    }

    @JsonProperty(JSON_PROPERTY_USER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUserId(UUID userId) {
        this.userId = userId;
    }

    public WebhookPortingOrderNewCommentPayloadComment userType(
        UserTypeEnum userType
    ) {
        this.userType = userType;
        return this;
    }

    /**
     * Identifies the type of the user that created the comment.
     * @return userType
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "user",
        value = "Identifies the type of the user that created the comment."
    )
    @JsonProperty(JSON_PROPERTY_USER_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public UserTypeEnum getUserType() {
        return userType;
    }

    @JsonProperty(JSON_PROPERTY_USER_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUserType(UserTypeEnum userType) {
        this.userType = userType;
    }

    public WebhookPortingOrderNewCommentPayloadComment insertedAt(
        OffsetDateTime insertedAt
    ) {
        this.insertedAt = insertedAt;
        return this;
    }

    /**
     * ISO 8601 formatted date indicating when the comment was created.
     * @return insertedAt
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "2021-03-19T10:07:15.527Z",
        value = "ISO 8601 formatted date indicating when the comment was created."
    )
    @JsonProperty(JSON_PROPERTY_INSERTED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OffsetDateTime getInsertedAt() {
        return insertedAt;
    }

    @JsonProperty(JSON_PROPERTY_INSERTED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInsertedAt(OffsetDateTime insertedAt) {
        this.insertedAt = insertedAt;
    }

    /**
     * Return true if this WebhookPortingOrderNewCommentPayload_comment object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        WebhookPortingOrderNewCommentPayloadComment webhookPortingOrderNewCommentPayloadComment =
            (WebhookPortingOrderNewCommentPayloadComment) o;
        return (
            Objects.equals(
                this.id,
                webhookPortingOrderNewCommentPayloadComment.id
            ) &&
            Objects.equals(
                this.body,
                webhookPortingOrderNewCommentPayloadComment.body
            ) &&
            Objects.equals(
                this.userId,
                webhookPortingOrderNewCommentPayloadComment.userId
            ) &&
            Objects.equals(
                this.userType,
                webhookPortingOrderNewCommentPayloadComment.userType
            ) &&
            Objects.equals(
                this.insertedAt,
                webhookPortingOrderNewCommentPayloadComment.insertedAt
            )
        );
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, body, userId, userType, insertedAt);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class WebhookPortingOrderNewCommentPayloadComment {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    body: ").append(toIndentedString(body)).append("\n");
        sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
        sb
            .append("    userType: ")
            .append(toIndentedString(userType))
            .append("\n");
        sb
            .append("    insertedAt: ")
            .append(toIndentedString(insertedAt))
            .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
