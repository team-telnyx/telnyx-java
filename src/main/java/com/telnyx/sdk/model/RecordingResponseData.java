/*
 * Telnyx API
 * Notifications and Notification Settings.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.RecordingResponseDataDownloadUrls;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * RecordingResponseData
 */
@JsonPropertyOrder({
  RecordingResponseData.JSON_PROPERTY_CALL_CONTROL_ID,
  RecordingResponseData.JSON_PROPERTY_CALL_LEG_ID,
  RecordingResponseData.JSON_PROPERTY_CALL_SESSION_ID,
  RecordingResponseData.JSON_PROPERTY_CHANNELS,
  RecordingResponseData.JSON_PROPERTY_CONFERENCE_ID,
  RecordingResponseData.JSON_PROPERTY_CREATED_AT,
  RecordingResponseData.JSON_PROPERTY_DOWNLOAD_URLS,
  RecordingResponseData.JSON_PROPERTY_DURATION_MILLIS,
  RecordingResponseData.JSON_PROPERTY_ID,
  RecordingResponseData.JSON_PROPERTY_RECORD_TYPE,
  RecordingResponseData.JSON_PROPERTY_RECORDING_STARTED_AT,
  RecordingResponseData.JSON_PROPERTY_RECORDING_ENDED_AT,
  RecordingResponseData.JSON_PROPERTY_SOURCE,
  RecordingResponseData.JSON_PROPERTY_STATUS,
  RecordingResponseData.JSON_PROPERTY_UPDATED_AT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class RecordingResponseData {
  public static final String JSON_PROPERTY_CALL_CONTROL_ID = "call_control_id";
  private String callControlId;

  public static final String JSON_PROPERTY_CALL_LEG_ID = "call_leg_id";
  private String callLegId;

  public static final String JSON_PROPERTY_CALL_SESSION_ID = "call_session_id";
  private String callSessionId;

  /**
   * When &#x60;dual&#x60;, final audio file has the first leg on channel A, and the rest on channel B.
   */
  public enum ChannelsEnum {
    SINGLE(String.valueOf("single")),
    
    DUAL(String.valueOf("dual"));

    private String value;

    ChannelsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChannelsEnum fromValue(String value) {
      for (ChannelsEnum b : ChannelsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHANNELS = "channels";
  private ChannelsEnum channels;

  public static final String JSON_PROPERTY_CONFERENCE_ID = "conference_id";
  private String conferenceId;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private String createdAt;

  public static final String JSON_PROPERTY_DOWNLOAD_URLS = "download_urls";
  private RecordingResponseDataDownloadUrls downloadUrls;

  public static final String JSON_PROPERTY_DURATION_MILLIS = "duration_millis";
  private Integer durationMillis;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  /**
   * Gets or Sets recordType
   */
  public enum RecordTypeEnum {
    RECORDING(String.valueOf("recording"));

    private String value;

    RecordTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RecordTypeEnum fromValue(String value) {
      for (RecordTypeEnum b : RecordTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RECORD_TYPE = "record_type";
  private RecordTypeEnum recordType;

  public static final String JSON_PROPERTY_RECORDING_STARTED_AT = "recording_started_at";
  private String recordingStartedAt;

  public static final String JSON_PROPERTY_RECORDING_ENDED_AT = "recording_ended_at";
  private String recordingEndedAt;

  /**
   * The kind of event that led to this recording being created.
   */
  public enum SourceEnum {
    CONFERENCE(String.valueOf("conference")),
    
    CALL(String.valueOf("call"));

    private String value;

    SourceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SourceEnum fromValue(String value) {
      for (SourceEnum b : SourceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SOURCE = "source";
  private SourceEnum source;

  /**
   * The status of the recording. Only resources for &#x60;completed&#x60; recordings are currently supported.
   */
  public enum StatusEnum {
    COMPLETED(String.valueOf("completed"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private String updatedAt;

  public RecordingResponseData() { 
  }

  public RecordingResponseData callControlId(String callControlId) {
    this.callControlId = callControlId;
    return this;
  }

   /**
   * Unique identifier and token for controlling the call.
   * @return callControlId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "v3:e-31OnvjEM7Y4wvxr3TKNk8M3QyLcGZPiUIzCGtwQtOtEjY-B0urkw", value = "Unique identifier and token for controlling the call.")
  @JsonProperty(JSON_PROPERTY_CALL_CONTROL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCallControlId() {
    return callControlId;
  }


  @JsonProperty(JSON_PROPERTY_CALL_CONTROL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCallControlId(String callControlId) {
    this.callControlId = callControlId;
  }


  public RecordingResponseData callLegId(String callLegId) {
    this.callLegId = callLegId;
    return this;
  }

   /**
   * ID that is unique to the call and can be used to correlate webhook events.
   * @return callLegId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "84a97d76-e40f-11ed-9074-02420a0daa69", value = "ID that is unique to the call and can be used to correlate webhook events.")
  @JsonProperty(JSON_PROPERTY_CALL_LEG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCallLegId() {
    return callLegId;
  }


  @JsonProperty(JSON_PROPERTY_CALL_LEG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCallLegId(String callLegId) {
    this.callLegId = callLegId;
  }


  public RecordingResponseData callSessionId(String callSessionId) {
    this.callSessionId = callSessionId;
    return this;
  }

   /**
   * ID that is unique to the call session and can be used to correlate webhook events. Call session is a group of related call legs that logically belong to the same phone call, e.g. an inbound and outbound leg of a transferred call.
   * @return callSessionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "84a97d76-e40f-11ed-9074-02420a0daa69", value = "ID that is unique to the call session and can be used to correlate webhook events. Call session is a group of related call legs that logically belong to the same phone call, e.g. an inbound and outbound leg of a transferred call.")
  @JsonProperty(JSON_PROPERTY_CALL_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCallSessionId() {
    return callSessionId;
  }


  @JsonProperty(JSON_PROPERTY_CALL_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCallSessionId(String callSessionId) {
    this.callSessionId = callSessionId;
  }


  public RecordingResponseData channels(ChannelsEnum channels) {
    this.channels = channels;
    return this;
  }

   /**
   * When &#x60;dual&#x60;, final audio file has the first leg on channel A, and the rest on channel B.
   * @return channels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "dual", value = "When `dual`, final audio file has the first leg on channel A, and the rest on channel B.")
  @JsonProperty(JSON_PROPERTY_CHANNELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChannelsEnum getChannels() {
    return channels;
  }


  @JsonProperty(JSON_PROPERTY_CHANNELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChannels(ChannelsEnum channels) {
    this.channels = channels;
  }


  public RecordingResponseData conferenceId(String conferenceId) {
    this.conferenceId = conferenceId;
    return this;
  }

   /**
   * Uniquely identifies the conference.
   * @return conferenceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "84a97d76-e40f-11ed-9074-02420a0daa69", value = "Uniquely identifies the conference.")
  @JsonProperty(JSON_PROPERTY_CONFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConferenceId() {
    return conferenceId;
  }


  @JsonProperty(JSON_PROPERTY_CONFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConferenceId(String conferenceId) {
    this.conferenceId = conferenceId;
  }


  public RecordingResponseData createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * ISO 8601 formatted date indicating when the resource was created.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-02-02T22:25:27.521Z", value = "ISO 8601 formatted date indicating when the resource was created.")
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public RecordingResponseData downloadUrls(RecordingResponseDataDownloadUrls downloadUrls) {
    this.downloadUrls = downloadUrls;
    return this;
  }

   /**
   * Get downloadUrls
   * @return downloadUrls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOWNLOAD_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RecordingResponseDataDownloadUrls getDownloadUrls() {
    return downloadUrls;
  }


  @JsonProperty(JSON_PROPERTY_DOWNLOAD_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDownloadUrls(RecordingResponseDataDownloadUrls downloadUrls) {
    this.downloadUrls = downloadUrls;
  }


  public RecordingResponseData durationMillis(Integer durationMillis) {
    this.durationMillis = durationMillis;
    return this;
  }

   /**
   * The duration of the recording in milliseconds.
   * @return durationMillis
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "60000", value = "The duration of the recording in milliseconds.")
  @JsonProperty(JSON_PROPERTY_DURATION_MILLIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDurationMillis() {
    return durationMillis;
  }


  @JsonProperty(JSON_PROPERTY_DURATION_MILLIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDurationMillis(Integer durationMillis) {
    this.durationMillis = durationMillis;
  }


  public RecordingResponseData id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Uniquely identifies the recording.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3fa85f64-5717-4562-b3fc-2c963f66afa6", value = "Uniquely identifies the recording.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public RecordingResponseData recordType(RecordTypeEnum recordType) {
    this.recordType = recordType;
    return this;
  }

   /**
   * Get recordType
   * @return recordType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "recording", value = "")
  @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RecordTypeEnum getRecordType() {
    return recordType;
  }


  @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecordType(RecordTypeEnum recordType) {
    this.recordType = recordType;
  }


  public RecordingResponseData recordingStartedAt(String recordingStartedAt) {
    this.recordingStartedAt = recordingStartedAt;
    return this;
  }

   /**
   * ISO 8601 formatted date of when the recording started.
   * @return recordingStartedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-01-23T18:10:02.574Z", value = "ISO 8601 formatted date of when the recording started.")
  @JsonProperty(JSON_PROPERTY_RECORDING_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecordingStartedAt() {
    return recordingStartedAt;
  }


  @JsonProperty(JSON_PROPERTY_RECORDING_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecordingStartedAt(String recordingStartedAt) {
    this.recordingStartedAt = recordingStartedAt;
  }


  public RecordingResponseData recordingEndedAt(String recordingEndedAt) {
    this.recordingEndedAt = recordingEndedAt;
    return this;
  }

   /**
   * ISO 8601 formatted date of when the recording ended.
   * @return recordingEndedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-01-23T18:10:02.574Z", value = "ISO 8601 formatted date of when the recording ended.")
  @JsonProperty(JSON_PROPERTY_RECORDING_ENDED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecordingEndedAt() {
    return recordingEndedAt;
  }


  @JsonProperty(JSON_PROPERTY_RECORDING_ENDED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecordingEndedAt(String recordingEndedAt) {
    this.recordingEndedAt = recordingEndedAt;
  }


  public RecordingResponseData source(SourceEnum source) {
    this.source = source;
    return this;
  }

   /**
   * The kind of event that led to this recording being created.
   * @return source
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "conference", value = "The kind of event that led to this recording being created.")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SourceEnum getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(SourceEnum source) {
    this.source = source;
  }


  public RecordingResponseData status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the recording. Only resources for &#x60;completed&#x60; recordings are currently supported.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "completed", value = "The status of the recording. Only resources for `completed` recordings are currently supported.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public RecordingResponseData updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * ISO 8601 formatted date indicating when the resource was updated.
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-02-02T22:25:27.521Z", value = "ISO 8601 formatted date indicating when the resource was updated.")
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  /**
   * Return true if this RecordingResponseData object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecordingResponseData recordingResponseData = (RecordingResponseData) o;
    return Objects.equals(this.callControlId, recordingResponseData.callControlId) &&
        Objects.equals(this.callLegId, recordingResponseData.callLegId) &&
        Objects.equals(this.callSessionId, recordingResponseData.callSessionId) &&
        Objects.equals(this.channels, recordingResponseData.channels) &&
        Objects.equals(this.conferenceId, recordingResponseData.conferenceId) &&
        Objects.equals(this.createdAt, recordingResponseData.createdAt) &&
        Objects.equals(this.downloadUrls, recordingResponseData.downloadUrls) &&
        Objects.equals(this.durationMillis, recordingResponseData.durationMillis) &&
        Objects.equals(this.id, recordingResponseData.id) &&
        Objects.equals(this.recordType, recordingResponseData.recordType) &&
        Objects.equals(this.recordingStartedAt, recordingResponseData.recordingStartedAt) &&
        Objects.equals(this.recordingEndedAt, recordingResponseData.recordingEndedAt) &&
        Objects.equals(this.source, recordingResponseData.source) &&
        Objects.equals(this.status, recordingResponseData.status) &&
        Objects.equals(this.updatedAt, recordingResponseData.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callControlId, callLegId, callSessionId, channels, conferenceId, createdAt, downloadUrls, durationMillis, id, recordType, recordingStartedAt, recordingEndedAt, source, status, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecordingResponseData {\n");
    sb.append("    callControlId: ").append(toIndentedString(callControlId)).append("\n");
    sb.append("    callLegId: ").append(toIndentedString(callLegId)).append("\n");
    sb.append("    callSessionId: ").append(toIndentedString(callSessionId)).append("\n");
    sb.append("    channels: ").append(toIndentedString(channels)).append("\n");
    sb.append("    conferenceId: ").append(toIndentedString(conferenceId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    downloadUrls: ").append(toIndentedString(downloadUrls)).append("\n");
    sb.append("    durationMillis: ").append(toIndentedString(durationMillis)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    recordingStartedAt: ").append(toIndentedString(recordingStartedAt)).append("\n");
    sb.append("    recordingEndedAt: ").append(toIndentedString(recordingEndedAt)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

