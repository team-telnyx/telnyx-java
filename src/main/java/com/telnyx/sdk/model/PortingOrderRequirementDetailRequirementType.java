/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * Identifies the requirement type that meets this requirement
 */
@ApiModel(description = "Identifies the requirement type that meets this requirement")
@JsonPropertyOrder({
  PortingOrderRequirementDetailRequirementType.JSON_PROPERTY_ACCEPTANCE_CRITERIA,
  PortingOrderRequirementDetailRequirementType.JSON_PROPERTY_DESCRIPTION,
  PortingOrderRequirementDetailRequirementType.JSON_PROPERTY_EXAMPLE,
  PortingOrderRequirementDetailRequirementType.JSON_PROPERTY_ID,
  PortingOrderRequirementDetailRequirementType.JSON_PROPERTY_NAME,
  PortingOrderRequirementDetailRequirementType.JSON_PROPERTY_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PortingOrderRequirementDetailRequirementType {
  public static final String JSON_PROPERTY_ACCEPTANCE_CRITERIA = "acceptance_criteria";
  private Object acceptanceCriteria;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_EXAMPLE = "example";
  private String example;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public PortingOrderRequirementDetailRequirementType() { 
  }

  public PortingOrderRequirementDetailRequirementType acceptanceCriteria(Object acceptanceCriteria) {
    this.acceptanceCriteria = acceptanceCriteria;
    return this;
  }

   /**
   * The acceptance criteria for the requirement type
   * @return acceptanceCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"acceptable_values\":[]}", value = "The acceptance criteria for the requirement type")
  @JsonProperty(JSON_PROPERTY_ACCEPTANCE_CRITERIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getAcceptanceCriteria() {
    return acceptanceCriteria;
  }


  @JsonProperty(JSON_PROPERTY_ACCEPTANCE_CRITERIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcceptanceCriteria(Object acceptanceCriteria) {
    this.acceptanceCriteria = acceptanceCriteria;
  }


  public PortingOrderRequirementDetailRequirementType description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A description of the requirement type
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "A copy of the latest phone bill from the current provider", value = "A description of the requirement type")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public PortingOrderRequirementDetailRequirementType example(String example) {
    this.example = example;
    return this;
  }

   /**
   * An example of the requirement type
   * @return example
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Most recent phone bill", value = "An example of the requirement type")
  @JsonProperty(JSON_PROPERTY_EXAMPLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExample() {
    return example;
  }


  @JsonProperty(JSON_PROPERTY_EXAMPLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExample(String example) {
    this.example = example;
  }


  public PortingOrderRequirementDetailRequirementType id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifies the requirement type
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "53970723-fbff-4f46-a975-f62be6c1a585", value = "Identifies the requirement type")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public PortingOrderRequirementDetailRequirementType name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the requirement type
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Latest Invoice", value = "The name of the requirement type")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public PortingOrderRequirementDetailRequirementType type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the requirement type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "document", value = "The type of the requirement type")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  /**
   * Return true if this PortingOrderRequirementDetail_requirement_type object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortingOrderRequirementDetailRequirementType portingOrderRequirementDetailRequirementType = (PortingOrderRequirementDetailRequirementType) o;
    return Objects.equals(this.acceptanceCriteria, portingOrderRequirementDetailRequirementType.acceptanceCriteria) &&
        Objects.equals(this.description, portingOrderRequirementDetailRequirementType.description) &&
        Objects.equals(this.example, portingOrderRequirementDetailRequirementType.example) &&
        Objects.equals(this.id, portingOrderRequirementDetailRequirementType.id) &&
        Objects.equals(this.name, portingOrderRequirementDetailRequirementType.name) &&
        Objects.equals(this.type, portingOrderRequirementDetailRequirementType.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptanceCriteria, description, example, id, name, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortingOrderRequirementDetailRequirementType {\n");
    sb.append("    acceptanceCriteria: ").append(toIndentedString(acceptanceCriteria)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    example: ").append(toIndentedString(example)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

