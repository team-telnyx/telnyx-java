/*
 * Telnyx API
 * Notifications and Notification Settings.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.TnUploadEntry;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * Upload
 */
@JsonPropertyOrder({
  Upload.JSON_PROPERTY_TICKET_ID,
  Upload.JSON_PROPERTY_TENANT_ID,
  Upload.JSON_PROPERTY_LOCATION_ID,
  Upload.JSON_PROPERTY_STATUS,
  Upload.JSON_PROPERTY_AVAILABLE_USAGES,
  Upload.JSON_PROPERTY_ERROR_CODE,
  Upload.JSON_PROPERTY_ERROR_MESSAGE,
  Upload.JSON_PROPERTY_TN_UPLOAD_ENTRIES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class Upload {
  public static final String JSON_PROPERTY_TICKET_ID = "ticket_id";
  private UUID ticketId;

  public static final String JSON_PROPERTY_TENANT_ID = "tenant_id";
  private UUID tenantId;

  public static final String JSON_PROPERTY_LOCATION_ID = "location_id";
  private UUID locationId;

  /**
   * Represents the status of the upload on Microsoft Teams.
   */
  public enum StatusEnum {
    PENDING_UPLOAD(String.valueOf("pending_upload")),
    
    PENDING(String.valueOf("pending")),
    
    IN_PROGRESS(String.valueOf("in_progress")),
    
    PARTIAL_SUCCESS(String.valueOf("partial_success")),
    
    SUCCESS(String.valueOf("success")),
    
    ERROR(String.valueOf("error"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status = StatusEnum.PENDING_UPLOAD;

  /**
   * Available usages for the numbers in the upload on Microsoft Teams.
   */
  public enum AvailableUsagesEnum {
    CALLING_USER_ASSIGNMENT(String.valueOf("calling_user_assignment")),
    
    FIRST_PARTY_APP_ASSIGNMENT(String.valueOf("first_party_app_assignment"));

    private String value;

    AvailableUsagesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AvailableUsagesEnum fromValue(String value) {
      for (AvailableUsagesEnum b : AvailableUsagesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AVAILABLE_USAGES = "available_usages";
  private List<AvailableUsagesEnum> availableUsages = null;

  public static final String JSON_PROPERTY_ERROR_CODE = "error_code";
  private String errorCode;

  public static final String JSON_PROPERTY_ERROR_MESSAGE = "error_message";
  private String errorMessage;

  public static final String JSON_PROPERTY_TN_UPLOAD_ENTRIES = "tn_upload_entries";
  private List<TnUploadEntry> tnUploadEntries = null;

  public Upload() { 
  }

  public Upload ticketId(UUID ticketId) {
    this.ticketId = ticketId;
    return this;
  }

   /**
   * Uniquely identifies the resource.
   * @return ticketId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "542c3bca-d247-42bc-8fe7-e01d16ecd761", value = "Uniquely identifies the resource.")
  @JsonProperty(JSON_PROPERTY_TICKET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getTicketId() {
    return ticketId;
  }


  @JsonProperty(JSON_PROPERTY_TICKET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTicketId(UUID ticketId) {
    this.ticketId = ticketId;
  }


  public Upload tenantId(UUID tenantId) {
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Get tenantId
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ea175aba-f47c-4702-9400-efaa42688048", value = "")
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantId(UUID tenantId) {
    this.tenantId = tenantId;
  }


  public Upload locationId(UUID locationId) {
    this.locationId = locationId;
    return this;
  }

   /**
   * Get locationId
   * @return locationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "c37e5036-1e87-42e6-86a2-b3e8dd39a2ad", value = "")
  @JsonProperty(JSON_PROPERTY_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getLocationId() {
    return locationId;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocationId(UUID locationId) {
    this.locationId = locationId;
  }


  public Upload status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Represents the status of the upload on Microsoft Teams.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "error", value = "Represents the status of the upload on Microsoft Teams.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Upload availableUsages(List<AvailableUsagesEnum> availableUsages) {
    this.availableUsages = availableUsages;
    return this;
  }

  public Upload addavailableUsagesItem(AvailableUsagesEnum availableUsagesItem) {
    if (this.availableUsages == null) {
      this.availableUsages = new ArrayList<>();
    }
    this.availableUsages.add(availableUsagesItem);
    return this;
  }

   /**
   * Get availableUsages
   * @return availableUsages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AVAILABLE_USAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AvailableUsagesEnum> getAvailableUsages() {
    return availableUsages;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_USAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableUsages(List<AvailableUsagesEnum> availableUsages) {
    this.availableUsages = availableUsages;
  }


  public Upload errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

   /**
   * A code returned by Microsoft Teams if there is an error with the upload process.
   * @return errorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A code returned by Microsoft Teams if there is an error with the upload process.")
  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorCode() {
    return errorCode;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }


  public Upload errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * A message set if there is an error with the upload process.
   * @return errorMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A message set if there is an error with the upload process.")
  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorMessage() {
    return errorMessage;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public Upload tnUploadEntries(List<TnUploadEntry> tnUploadEntries) {
    this.tnUploadEntries = tnUploadEntries;
    return this;
  }

  public Upload addtnUploadEntriesItem(TnUploadEntry tnUploadEntriesItem) {
    if (this.tnUploadEntries == null) {
      this.tnUploadEntries = new ArrayList<>();
    }
    this.tnUploadEntries.add(tnUploadEntriesItem);
    return this;
  }

   /**
   * Get tnUploadEntries
   * @return tnUploadEntries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TN_UPLOAD_ENTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TnUploadEntry> getTnUploadEntries() {
    return tnUploadEntries;
  }


  @JsonProperty(JSON_PROPERTY_TN_UPLOAD_ENTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTnUploadEntries(List<TnUploadEntry> tnUploadEntries) {
    this.tnUploadEntries = tnUploadEntries;
  }


  /**
   * Return true if this Upload object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Upload upload = (Upload) o;
    return Objects.equals(this.ticketId, upload.ticketId) &&
        Objects.equals(this.tenantId, upload.tenantId) &&
        Objects.equals(this.locationId, upload.locationId) &&
        Objects.equals(this.status, upload.status) &&
        Objects.equals(this.availableUsages, upload.availableUsages) &&
        Objects.equals(this.errorCode, upload.errorCode) &&
        Objects.equals(this.errorMessage, upload.errorMessage) &&
        Objects.equals(this.tnUploadEntries, upload.tnUploadEntries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ticketId, tenantId, locationId, status, availableUsages, errorCode, errorMessage, tnUploadEntries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Upload {\n");
    sb.append("    ticketId: ").append(toIndentedString(ticketId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    availableUsages: ").append(toIndentedString(availableUsages)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    tnUploadEntries: ").append(toIndentedString(tnUploadEntries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

