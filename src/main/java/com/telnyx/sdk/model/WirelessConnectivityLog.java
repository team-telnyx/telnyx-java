/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * This object represents a wireless connectivity session log that happened through a SIM card. It aids in finding out potential problems when the SIM is not able to attach properly.
 */
@ApiModel(description = "This object represents a wireless connectivity session log that happened through a SIM card. It aids in finding out potential problems when the SIM is not able to attach properly.")
@JsonPropertyOrder({
  WirelessConnectivityLog.JSON_PROPERTY_RECORD_TYPE,
  WirelessConnectivityLog.JSON_PROPERTY_ID,
  WirelessConnectivityLog.JSON_PROPERTY_SIM_CARD_ID,
  WirelessConnectivityLog.JSON_PROPERTY_LOG_TYPE,
  WirelessConnectivityLog.JSON_PROPERTY_IMSI,
  WirelessConnectivityLog.JSON_PROPERTY_IMEI,
  WirelessConnectivityLog.JSON_PROPERTY_MOBILE_COUNTRY_CODE,
  WirelessConnectivityLog.JSON_PROPERTY_MOBILE_NETWORK_CODE,
  WirelessConnectivityLog.JSON_PROPERTY_START_TIME,
  WirelessConnectivityLog.JSON_PROPERTY_STOP_TIME,
  WirelessConnectivityLog.JSON_PROPERTY_CREATED_AT,
  WirelessConnectivityLog.JSON_PROPERTY_LAST_SEEN,
  WirelessConnectivityLog.JSON_PROPERTY_APN,
  WirelessConnectivityLog.JSON_PROPERTY_IPV4,
  WirelessConnectivityLog.JSON_PROPERTY_IPV6,
  WirelessConnectivityLog.JSON_PROPERTY_RADIO_ACCESS_TECHNOLOGY,
  WirelessConnectivityLog.JSON_PROPERTY_STATE,
  WirelessConnectivityLog.JSON_PROPERTY_CELL_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class WirelessConnectivityLog {
  public static final String JSON_PROPERTY_RECORD_TYPE = "record_type";
  private String recordType;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_SIM_CARD_ID = "sim_card_id";
  private UUID simCardId;

  /**
   * The type of the session, &#39;registration&#39; being the initial authentication session and &#39;data&#39; the actual data transfer sessions.
   */
  public enum LogTypeEnum {
    REGISTRATION("registration"),
    
    DATA("data");

    private String value;

    LogTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LogTypeEnum fromValue(String value) {
      for (LogTypeEnum b : LogTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LOG_TYPE = "log_type";
  private LogTypeEnum logType;

  public static final String JSON_PROPERTY_IMSI = "imsi";
  private String imsi;

  public static final String JSON_PROPERTY_IMEI = "imei";
  private String imei;

  public static final String JSON_PROPERTY_MOBILE_COUNTRY_CODE = "mobile_country_code";
  private String mobileCountryCode;

  public static final String JSON_PROPERTY_MOBILE_NETWORK_CODE = "mobile_network_code";
  private String mobileNetworkCode;

  public static final String JSON_PROPERTY_START_TIME = "start_time";
  private String startTime;

  public static final String JSON_PROPERTY_STOP_TIME = "stop_time";
  private String stopTime;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private String createdAt;

  public static final String JSON_PROPERTY_LAST_SEEN = "last_seen";
  private String lastSeen;

  public static final String JSON_PROPERTY_APN = "apn";
  private String apn;

  public static final String JSON_PROPERTY_IPV4 = "ipv4";
  private String ipv4;

  public static final String JSON_PROPERTY_IPV6 = "ipv6";
  private String ipv6;

  public static final String JSON_PROPERTY_RADIO_ACCESS_TECHNOLOGY = "radio_access_technology";
  private String radioAccessTechnology;

  public static final String JSON_PROPERTY_STATE = "state";
  private String state;

  public static final String JSON_PROPERTY_CELL_ID = "cell_id";
  private String cellId;

  public WirelessConnectivityLog() { 
  }

  @JsonCreator
  public WirelessConnectivityLog(
    @JsonProperty(JSON_PROPERTY_RECORD_TYPE) String recordType, 
    @JsonProperty(JSON_PROPERTY_ID) Integer id, 
    @JsonProperty(JSON_PROPERTY_LOG_TYPE) LogTypeEnum logType, 
    @JsonProperty(JSON_PROPERTY_IMSI) String imsi, 
    @JsonProperty(JSON_PROPERTY_IMEI) String imei, 
    @JsonProperty(JSON_PROPERTY_MOBILE_COUNTRY_CODE) String mobileCountryCode, 
    @JsonProperty(JSON_PROPERTY_MOBILE_NETWORK_CODE) String mobileNetworkCode, 
    @JsonProperty(JSON_PROPERTY_START_TIME) String startTime, 
    @JsonProperty(JSON_PROPERTY_STOP_TIME) String stopTime, 
    @JsonProperty(JSON_PROPERTY_CREATED_AT) String createdAt, 
    @JsonProperty(JSON_PROPERTY_LAST_SEEN) String lastSeen, 
    @JsonProperty(JSON_PROPERTY_APN) String apn, 
    @JsonProperty(JSON_PROPERTY_IPV4) String ipv4, 
    @JsonProperty(JSON_PROPERTY_IPV6) String ipv6, 
    @JsonProperty(JSON_PROPERTY_RADIO_ACCESS_TECHNOLOGY) String radioAccessTechnology, 
    @JsonProperty(JSON_PROPERTY_STATE) String state, 
    @JsonProperty(JSON_PROPERTY_CELL_ID) String cellId
  ) {
    this();
    this.recordType = recordType;
    this.id = id;
    this.logType = logType;
    this.imsi = imsi;
    this.imei = imei;
    this.mobileCountryCode = mobileCountryCode;
    this.mobileNetworkCode = mobileNetworkCode;
    this.startTime = startTime;
    this.stopTime = stopTime;
    this.createdAt = createdAt;
    this.lastSeen = lastSeen;
    this.apn = apn;
    this.ipv4 = ipv4;
    this.ipv6 = ipv6;
    this.radioAccessTechnology = radioAccessTechnology;
    this.state = state;
    this.cellId = cellId;
  }

   /**
   * Get recordType
   * @return recordType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "wireless_connectivity_log", value = "")
  @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecordType() {
    return recordType;
  }




   /**
   * Uniquely identifies the session.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "137509451", value = "Uniquely identifies the session.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }




  public WirelessConnectivityLog simCardId(UUID simCardId) {
    this.simCardId = simCardId;
    return this;
  }

   /**
   * The identification UUID of the related SIM card resource.
   * @return simCardId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "6a09cdc3-8948-47f0-aa62-74ac943d6c58", value = "The identification UUID of the related SIM card resource.")
  @JsonProperty(JSON_PROPERTY_SIM_CARD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getSimCardId() {
    return simCardId;
  }


  @JsonProperty(JSON_PROPERTY_SIM_CARD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSimCardId(UUID simCardId) {
    this.simCardId = simCardId;
  }


   /**
   * The type of the session, &#39;registration&#39; being the initial authentication session and &#39;data&#39; the actual data transfer sessions.
   * @return logType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "registration", value = "The type of the session, 'registration' being the initial authentication session and 'data' the actual data transfer sessions.")
  @JsonProperty(JSON_PROPERTY_LOG_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LogTypeEnum getLogType() {
    return logType;
  }




   /**
   * SIM cards are identified on their individual operator networks by a unique International Mobile Subscriber Identity (IMSI). &lt;br/&gt; Mobile network operators connect mobile phone calls and communicate with their market SIM cards using their IMSIs. The IMSI is stored in the Subscriber  Identity Module (SIM) inside the device and is sent by the device to the appropriate network. It is used to acquire the details of the device in the Home  Location Register (HLR) or the Visitor Location Register (VLR). 
   * @return imsi
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "081932214823362973", value = "SIM cards are identified on their individual operator networks by a unique International Mobile Subscriber Identity (IMSI). <br/> Mobile network operators connect mobile phone calls and communicate with their market SIM cards using their IMSIs. The IMSI is stored in the Subscriber  Identity Module (SIM) inside the device and is sent by the device to the appropriate network. It is used to acquire the details of the device in the Home  Location Register (HLR) or the Visitor Location Register (VLR). ")
  @JsonProperty(JSON_PROPERTY_IMSI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImsi() {
    return imsi;
  }




   /**
   * The International Mobile Equipment Identity (or IMEI) is a number, usually unique, that identifies the device currently being used connect to the network.
   * @return imei
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "490154203237518", value = "The International Mobile Equipment Identity (or IMEI) is a number, usually unique, that identifies the device currently being used connect to the network.")
  @JsonProperty(JSON_PROPERTY_IMEI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImei() {
    return imei;
  }




   /**
   * It&#39;s a three decimal digit that identifies a country.&lt;br/&gt;&lt;br/&gt; This code is commonly seen joined with a Mobile Network Code (MNC) in a tuple that allows identifying a carrier known as PLMN (Public Land Mobile Network) code.
   * @return mobileCountryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "310", value = "It's a three decimal digit that identifies a country.<br/><br/> This code is commonly seen joined with a Mobile Network Code (MNC) in a tuple that allows identifying a carrier known as PLMN (Public Land Mobile Network) code.")
  @JsonProperty(JSON_PROPERTY_MOBILE_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMobileCountryCode() {
    return mobileCountryCode;
  }




   /**
   * It&#39;s a two to three decimal digits that identify a network.&lt;br/&gt;&lt;br/&gt;  This code is commonly seen joined with a Mobile Country Code (MCC) in a tuple that allows identifying a carrier known as PLMN (Public Land Mobile Network) code.
   * @return mobileNetworkCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "410", value = "It's a two to three decimal digits that identify a network.<br/><br/>  This code is commonly seen joined with a Mobile Country Code (MCC) in a tuple that allows identifying a carrier known as PLMN (Public Land Mobile Network) code.")
  @JsonProperty(JSON_PROPERTY_MOBILE_NETWORK_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMobileNetworkCode() {
    return mobileNetworkCode;
  }




   /**
   * ISO 8601 formatted date-time indicating when the session started.
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-02-02T22:25:27.521Z", value = "ISO 8601 formatted date-time indicating when the session started.")
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartTime() {
    return startTime;
  }




   /**
   * ISO 8601 formatted date-time indicating when the session ended.
   * @return stopTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-02-02T22:25:27.521Z", value = "ISO 8601 formatted date-time indicating when the session ended.")
  @JsonProperty(JSON_PROPERTY_STOP_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStopTime() {
    return stopTime;
  }




   /**
   * ISO 8601 formatted date-time indicating when the record was created.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-02-02T22:25:27.521Z", value = "ISO 8601 formatted date-time indicating when the record was created.")
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatedAt() {
    return createdAt;
  }




   /**
   * ISO 8601 formatted date-time indicating when the last heartbeat to the device was successfully recorded.
   * @return lastSeen
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018-02-02T22:25:27.521Z", value = "ISO 8601 formatted date-time indicating when the last heartbeat to the device was successfully recorded.")
  @JsonProperty(JSON_PROPERTY_LAST_SEEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastSeen() {
    return lastSeen;
  }




   /**
   * The Access Point Name (APN) identifies the packet data network that a mobile data user wants to communicate with.
   * @return apn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "data00.telnyx", value = "The Access Point Name (APN) identifies the packet data network that a mobile data user wants to communicate with.")
  @JsonProperty(JSON_PROPERTY_APN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApn() {
    return apn;
  }




   /**
   * The SIM&#39;s address in the currently connected network. This IPv4 address is usually obtained dynamically, so it may vary according to the location or new connections. 
   * @return ipv4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "192.168.0.0", value = "The SIM's address in the currently connected network. This IPv4 address is usually obtained dynamically, so it may vary according to the location or new connections. ")
  @JsonProperty(JSON_PROPERTY_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIpv4() {
    return ipv4;
  }




   /**
   * The SIM&#39;s address in the currently connected network. This IPv6 address is usually obtained dynamically, so it may vary according to the location or new connections. 
   * @return ipv6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2001:cdba:0000:0000:0000:0000:3257:9652", value = "The SIM's address in the currently connected network. This IPv6 address is usually obtained dynamically, so it may vary according to the location or new connections. ")
  @JsonProperty(JSON_PROPERTY_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIpv6() {
    return ipv6;
  }




   /**
   * The radio technology the SIM card used during the session.
   * @return radioAccessTechnology
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "LTE", value = "The radio technology the SIM card used during the session.")
  @JsonProperty(JSON_PROPERTY_RADIO_ACCESS_TECHNOLOGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRadioAccessTechnology() {
    return radioAccessTechnology;
  }




   /**
   * The state of the SIM card after when the session happened.
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "provisioned", value = "The state of the SIM card after when the session happened.")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getState() {
    return state;
  }




   /**
   * The cell ID to which the SIM connected.
   * @return cellId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "311210-6813", value = "The cell ID to which the SIM connected.")
  @JsonProperty(JSON_PROPERTY_CELL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCellId() {
    return cellId;
  }




  /**
   * Return true if this WirelessConnectivityLog object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WirelessConnectivityLog wirelessConnectivityLog = (WirelessConnectivityLog) o;
    return Objects.equals(this.recordType, wirelessConnectivityLog.recordType) &&
        Objects.equals(this.id, wirelessConnectivityLog.id) &&
        Objects.equals(this.simCardId, wirelessConnectivityLog.simCardId) &&
        Objects.equals(this.logType, wirelessConnectivityLog.logType) &&
        Objects.equals(this.imsi, wirelessConnectivityLog.imsi) &&
        Objects.equals(this.imei, wirelessConnectivityLog.imei) &&
        Objects.equals(this.mobileCountryCode, wirelessConnectivityLog.mobileCountryCode) &&
        Objects.equals(this.mobileNetworkCode, wirelessConnectivityLog.mobileNetworkCode) &&
        Objects.equals(this.startTime, wirelessConnectivityLog.startTime) &&
        Objects.equals(this.stopTime, wirelessConnectivityLog.stopTime) &&
        Objects.equals(this.createdAt, wirelessConnectivityLog.createdAt) &&
        Objects.equals(this.lastSeen, wirelessConnectivityLog.lastSeen) &&
        Objects.equals(this.apn, wirelessConnectivityLog.apn) &&
        Objects.equals(this.ipv4, wirelessConnectivityLog.ipv4) &&
        Objects.equals(this.ipv6, wirelessConnectivityLog.ipv6) &&
        Objects.equals(this.radioAccessTechnology, wirelessConnectivityLog.radioAccessTechnology) &&
        Objects.equals(this.state, wirelessConnectivityLog.state) &&
        Objects.equals(this.cellId, wirelessConnectivityLog.cellId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recordType, id, simCardId, logType, imsi, imei, mobileCountryCode, mobileNetworkCode, startTime, stopTime, createdAt, lastSeen, apn, ipv4, ipv6, radioAccessTechnology, state, cellId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WirelessConnectivityLog {\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    simCardId: ").append(toIndentedString(simCardId)).append("\n");
    sb.append("    logType: ").append(toIndentedString(logType)).append("\n");
    sb.append("    imsi: ").append(toIndentedString(imsi)).append("\n");
    sb.append("    imei: ").append(toIndentedString(imei)).append("\n");
    sb.append("    mobileCountryCode: ").append(toIndentedString(mobileCountryCode)).append("\n");
    sb.append("    mobileNetworkCode: ").append(toIndentedString(mobileNetworkCode)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    stopTime: ").append(toIndentedString(stopTime)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastSeen: ").append(toIndentedString(lastSeen)).append("\n");
    sb.append("    apn: ").append(toIndentedString(apn)).append("\n");
    sb.append("    ipv4: ").append(toIndentedString(ipv4)).append("\n");
    sb.append("    ipv6: ").append(toIndentedString(ipv6)).append("\n");
    sb.append("    radioAccessTechnology: ").append(toIndentedString(radioAccessTechnology)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    cellId: ").append(toIndentedString(cellId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

