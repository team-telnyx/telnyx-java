/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.telnyx.sdk.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.JSON;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.UUID;

/**
 * ESimPurchase
 */
@JsonPropertyOrder(
    {
        ESimPurchase.JSON_PROPERTY_SIM_CARD_GROUP_ID,
        ESimPurchase.JSON_PROPERTY_TAGS,
        ESimPurchase.JSON_PROPERTY_PRODUCT,
        ESimPurchase.JSON_PROPERTY_WHITELABEL_NAME,
        ESimPurchase.JSON_PROPERTY_AMOUNT,
        ESimPurchase.JSON_PROPERTY_STATUS,
    }
)
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.11.0"
)
public class ESimPurchase {

    public static final String JSON_PROPERTY_SIM_CARD_GROUP_ID =
        "sim_card_group_id";
    private UUID simCardGroupId;

    public static final String JSON_PROPERTY_TAGS = "tags";
    private List<String> tags = null;

    public static final String JSON_PROPERTY_PRODUCT = "product";
    private String product;

    public static final String JSON_PROPERTY_WHITELABEL_NAME =
        "whitelabel_name";
    private String whitelabelName;

    public static final String JSON_PROPERTY_AMOUNT = "amount";
    private Integer amount;

    /**
     * Status on which the SIM cards will be set after being successfully registered.
     */
    public enum StatusEnum {
        ENABLED(String.valueOf("enabled")),

        DISABLED(String.valueOf("disabled")),

        STANDBY(String.valueOf("standby"));

        private String value;

        StatusEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static StatusEnum fromValue(String value) {
            for (StatusEnum b : StatusEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException(
                "Unexpected value '" + value + "'"
            );
        }
    }

    public static final String JSON_PROPERTY_STATUS = "status";
    private StatusEnum status = StatusEnum.ENABLED;

    public ESimPurchase() {}

    public ESimPurchase simCardGroupId(UUID simCardGroupId) {
        this.simCardGroupId = simCardGroupId;
        return this;
    }

    /**
     * The group SIMCardGroup identification. This attribute can be &lt;code&gt;null&lt;/code&gt; when it&#39;s present in an associated resource.
     * @return simCardGroupId
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "6a09cdc3-8948-47f0-aa62-74ac943d6c58",
        value = "The group SIMCardGroup identification. This attribute can be <code>null</code> when it's present in an associated resource."
    )
    @JsonProperty(JSON_PROPERTY_SIM_CARD_GROUP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public UUID getSimCardGroupId() {
        return simCardGroupId;
    }

    @JsonProperty(JSON_PROPERTY_SIM_CARD_GROUP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSimCardGroupId(UUID simCardGroupId) {
        this.simCardGroupId = simCardGroupId;
    }

    public ESimPurchase tags(List<String> tags) {
        this.tags = tags;
        return this;
    }

    public ESimPurchase addtagsItem(String tagsItem) {
        if (this.tags == null) {
            this.tags = new ArrayList<>();
        }
        this.tags.add(tagsItem);
        return this;
    }

    /**
     * Searchable tags associated with the SIM cards
     * @return tags
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "[\"personal\",\"customers\",\"active-customers\"]",
        value = "Searchable tags associated with the SIM cards"
    )
    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getTags() {
        return tags;
    }

    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTags(List<String> tags) {
        this.tags = tags;
    }

    public ESimPurchase product(String product) {
        this.product = product;
        return this;
    }

    /**
     * Type of product to be purchased, specify \&quot;whitelabel\&quot; to use a custom SPN
     * @return product
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "whitelabel",
        value = "Type of product to be purchased, specify \"whitelabel\" to use a custom SPN"
    )
    @JsonProperty(JSON_PROPERTY_PRODUCT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getProduct() {
        return product;
    }

    @JsonProperty(JSON_PROPERTY_PRODUCT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProduct(String product) {
        this.product = product;
    }

    public ESimPurchase whitelabelName(String whitelabelName) {
        this.whitelabelName = whitelabelName;
        return this;
    }

    /**
     * Service Provider Name (SPN) for the Whitelabel eSIM product. It will be displayed as the mobile service name by operating systems of smartphones. This parameter must only contain letters, numbers and whitespaces.
     * @return whitelabelName
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "Custom SPN",
        value = "Service Provider Name (SPN) for the Whitelabel eSIM product. It will be displayed as the mobile service name by operating systems of smartphones. This parameter must only contain letters, numbers and whitespaces."
    )
    @JsonProperty(JSON_PROPERTY_WHITELABEL_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getWhitelabelName() {
        return whitelabelName;
    }

    @JsonProperty(JSON_PROPERTY_WHITELABEL_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWhitelabelName(String whitelabelName) {
        this.whitelabelName = whitelabelName;
    }

    public ESimPurchase amount(Integer amount) {
        this.amount = amount;
        return this;
    }

    /**
     * The amount of eSIMs to be purchased.
     * minimum: 1
     * @return amount
     **/
    @jakarta.annotation.Nonnull
    @ApiModelProperty(
        example = "10",
        required = true,
        value = "The amount of eSIMs to be purchased."
    )
    @JsonProperty(JSON_PROPERTY_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getAmount() {
        return amount;
    }

    @JsonProperty(JSON_PROPERTY_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAmount(Integer amount) {
        this.amount = amount;
    }

    public ESimPurchase status(StatusEnum status) {
        this.status = status;
        return this;
    }

    /**
     * Status on which the SIM cards will be set after being successfully registered.
     * @return status
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "standby",
        value = "Status on which the SIM cards will be set after being successfully registered."
    )
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public StatusEnum getStatus() {
        return status;
    }

    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    /**
     * Return true if this ESimPurchase object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ESimPurchase esimPurchase = (ESimPurchase) o;
        return (
            Objects.equals(this.simCardGroupId, esimPurchase.simCardGroupId) &&
            Objects.equals(this.tags, esimPurchase.tags) &&
            Objects.equals(this.product, esimPurchase.product) &&
            Objects.equals(this.whitelabelName, esimPurchase.whitelabelName) &&
            Objects.equals(this.amount, esimPurchase.amount) &&
            Objects.equals(this.status, esimPurchase.status)
        );
    }

    @Override
    public int hashCode() {
        return Objects.hash(
            simCardGroupId,
            tags,
            product,
            whitelabelName,
            amount,
            status
        );
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ESimPurchase {\n");
        sb
            .append("    simCardGroupId: ")
            .append(toIndentedString(simCardGroupId))
            .append("\n");
        sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
        sb
            .append("    product: ")
            .append(toIndentedString(product))
            .append("\n");
        sb
            .append("    whitelabelName: ")
            .append(toIndentedString(whitelabelName))
            .append("\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
