/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.telnyx.sdk.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.JSON;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/**
 * The filters to apply to the export port-out CSV report.
 */
@ApiModel(
    description = "The filters to apply to the export port-out CSV report."
)
@JsonPropertyOrder(
    {
        ExportPortoutsCSVReportFilters.JSON_PROPERTY_STATUS_IN,
        ExportPortoutsCSVReportFilters.JSON_PROPERTY_CUSTOMER_REFERENCE_IN,
        ExportPortoutsCSVReportFilters.JSON_PROPERTY_END_USER_NAME,
        ExportPortoutsCSVReportFilters.JSON_PROPERTY_PHONE_NUMBERS_OVERLAPS,
        ExportPortoutsCSVReportFilters.JSON_PROPERTY_CREATED_AT_LT,
        ExportPortoutsCSVReportFilters.JSON_PROPERTY_CREATED_AT_GT,
    }
)
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.11.0"
)
public class ExportPortoutsCSVReportFilters {

    /**
     * Gets or Sets statusIn
     */
    public enum StatusInEnum {
        PENDING(String.valueOf("pending")),

        AUTHORIZED(String.valueOf("authorized")),

        PORTED(String.valueOf("ported")),

        REJECTED(String.valueOf("rejected")),

        REJECTED_PENDING(String.valueOf("rejected-pending")),

        CANCELED(String.valueOf("canceled"));

        private String value;

        StatusInEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static StatusInEnum fromValue(String value) {
            for (StatusInEnum b : StatusInEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException(
                "Unexpected value '" + value + "'"
            );
        }
    }

    public static final String JSON_PROPERTY_STATUS_IN = "status__in";
    private List<StatusInEnum> statusIn = null;

    public static final String JSON_PROPERTY_CUSTOMER_REFERENCE_IN =
        "customer_reference__in";
    private List<String> customerReferenceIn = null;

    public static final String JSON_PROPERTY_END_USER_NAME = "end_user_name";
    private String endUserName;

    public static final String JSON_PROPERTY_PHONE_NUMBERS_OVERLAPS =
        "phone_numbers__overlaps";
    private List<String> phoneNumbersOverlaps = null;

    public static final String JSON_PROPERTY_CREATED_AT_LT = "created_at__lt";
    private OffsetDateTime createdAtLt;

    public static final String JSON_PROPERTY_CREATED_AT_GT = "created_at__gt";
    private OffsetDateTime createdAtGt;

    public ExportPortoutsCSVReportFilters() {}

    public ExportPortoutsCSVReportFilters statusIn(
        List<StatusInEnum> statusIn
    ) {
        this.statusIn = statusIn;
        return this;
    }

    public ExportPortoutsCSVReportFilters addstatusInItem(
        StatusInEnum statusInItem
    ) {
        if (this.statusIn == null) {
            this.statusIn = new ArrayList<>();
        }
        this.statusIn.add(statusInItem);
        return this;
    }

    /**
     * The status of the port-outs to include in the report.
     * @return statusIn
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        value = "The status of the port-outs to include in the report."
    )
    @JsonProperty(JSON_PROPERTY_STATUS_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<StatusInEnum> getStatusIn() {
        return statusIn;
    }

    @JsonProperty(JSON_PROPERTY_STATUS_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStatusIn(List<StatusInEnum> statusIn) {
        this.statusIn = statusIn;
    }

    public ExportPortoutsCSVReportFilters customerReferenceIn(
        List<String> customerReferenceIn
    ) {
        this.customerReferenceIn = customerReferenceIn;
        return this;
    }

    public ExportPortoutsCSVReportFilters addcustomerReferenceInItem(
        String customerReferenceInItem
    ) {
        if (this.customerReferenceIn == null) {
            this.customerReferenceIn = new ArrayList<>();
        }
        this.customerReferenceIn.add(customerReferenceInItem);
        return this;
    }

    /**
     * The customer reference of the port-outs to include in the report.
     * @return customerReferenceIn
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        value = "The customer reference of the port-outs to include in the report."
    )
    @JsonProperty(JSON_PROPERTY_CUSTOMER_REFERENCE_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getCustomerReferenceIn() {
        return customerReferenceIn;
    }

    @JsonProperty(JSON_PROPERTY_CUSTOMER_REFERENCE_IN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCustomerReferenceIn(List<String> customerReferenceIn) {
        this.customerReferenceIn = customerReferenceIn;
    }

    public ExportPortoutsCSVReportFilters endUserName(String endUserName) {
        this.endUserName = endUserName;
        return this;
    }

    /**
     * The end user name of the port-outs to include in the report.
     * @return endUserName
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "McPortersen",
        value = "The end user name of the port-outs to include in the report."
    )
    @JsonProperty(JSON_PROPERTY_END_USER_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getEndUserName() {
        return endUserName;
    }

    @JsonProperty(JSON_PROPERTY_END_USER_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEndUserName(String endUserName) {
        this.endUserName = endUserName;
    }

    public ExportPortoutsCSVReportFilters phoneNumbersOverlaps(
        List<String> phoneNumbersOverlaps
    ) {
        this.phoneNumbersOverlaps = phoneNumbersOverlaps;
        return this;
    }

    public ExportPortoutsCSVReportFilters addphoneNumbersOverlapsItem(
        String phoneNumbersOverlapsItem
    ) {
        if (this.phoneNumbersOverlaps == null) {
            this.phoneNumbersOverlaps = new ArrayList<>();
        }
        this.phoneNumbersOverlaps.add(phoneNumbersOverlapsItem);
        return this;
    }

    /**
     * A list of phone numbers that the port-outs phone numbers must overlap with.
     * @return phoneNumbersOverlaps
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        value = "A list of phone numbers that the port-outs phone numbers must overlap with."
    )
    @JsonProperty(JSON_PROPERTY_PHONE_NUMBERS_OVERLAPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getPhoneNumbersOverlaps() {
        return phoneNumbersOverlaps;
    }

    @JsonProperty(JSON_PROPERTY_PHONE_NUMBERS_OVERLAPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPhoneNumbersOverlaps(List<String> phoneNumbersOverlaps) {
        this.phoneNumbersOverlaps = phoneNumbersOverlaps;
    }

    public ExportPortoutsCSVReportFilters createdAtLt(
        OffsetDateTime createdAtLt
    ) {
        this.createdAtLt = createdAtLt;
        return this;
    }

    /**
     * The date and time the port-out was created before.
     * @return createdAtLt
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        value = "The date and time the port-out was created before."
    )
    @JsonProperty(JSON_PROPERTY_CREATED_AT_LT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OffsetDateTime getCreatedAtLt() {
        return createdAtLt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT_LT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreatedAtLt(OffsetDateTime createdAtLt) {
        this.createdAtLt = createdAtLt;
    }

    public ExportPortoutsCSVReportFilters createdAtGt(
        OffsetDateTime createdAtGt
    ) {
        this.createdAtGt = createdAtGt;
        return this;
    }

    /**
     * The date and time the port-out was created after.
     * @return createdAtGt
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        value = "The date and time the port-out was created after."
    )
    @JsonProperty(JSON_PROPERTY_CREATED_AT_GT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OffsetDateTime getCreatedAtGt() {
        return createdAtGt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT_GT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreatedAtGt(OffsetDateTime createdAtGt) {
        this.createdAtGt = createdAtGt;
    }

    /**
     * Return true if this ExportPortoutsCSVReport_filters object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExportPortoutsCSVReportFilters exportPortoutsCSVReportFilters =
            (ExportPortoutsCSVReportFilters) o;
        return (
            Objects.equals(
                this.statusIn,
                exportPortoutsCSVReportFilters.statusIn
            ) &&
            Objects.equals(
                this.customerReferenceIn,
                exportPortoutsCSVReportFilters.customerReferenceIn
            ) &&
            Objects.equals(
                this.endUserName,
                exportPortoutsCSVReportFilters.endUserName
            ) &&
            Objects.equals(
                this.phoneNumbersOverlaps,
                exportPortoutsCSVReportFilters.phoneNumbersOverlaps
            ) &&
            Objects.equals(
                this.createdAtLt,
                exportPortoutsCSVReportFilters.createdAtLt
            ) &&
            Objects.equals(
                this.createdAtGt,
                exportPortoutsCSVReportFilters.createdAtGt
            )
        );
    }

    @Override
    public int hashCode() {
        return Objects.hash(
            statusIn,
            customerReferenceIn,
            endUserName,
            phoneNumbersOverlaps,
            createdAtLt,
            createdAtGt
        );
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ExportPortoutsCSVReportFilters {\n");
        sb
            .append("    statusIn: ")
            .append(toIndentedString(statusIn))
            .append("\n");
        sb
            .append("    customerReferenceIn: ")
            .append(toIndentedString(customerReferenceIn))
            .append("\n");
        sb
            .append("    endUserName: ")
            .append(toIndentedString(endUserName))
            .append("\n");
        sb
            .append("    phoneNumbersOverlaps: ")
            .append(toIndentedString(phoneNumbersOverlaps))
            .append("\n");
        sb
            .append("    createdAtLt: ")
            .append(toIndentedString(createdAtLt))
            .append("\n");
        sb
            .append("    createdAtGt: ")
            .append(toIndentedString(createdAtGt))
            .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
