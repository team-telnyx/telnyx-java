/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.telnyx.sdk.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.JSON;
import com.telnyx.sdk.model.SSLCertificateIssuedBy;
import com.telnyx.sdk.model.SSLCertificateIssuedTo;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * SSLCertificate
 */
@JsonPropertyOrder(
    {
        SSLCertificate.JSON_PROPERTY_ID,
        SSLCertificate.JSON_PROPERTY_ISSUED_TO,
        SSLCertificate.JSON_PROPERTY_ISSUED_BY,
        SSLCertificate.JSON_PROPERTY_VALID_FROM,
        SSLCertificate.JSON_PROPERTY_VALID_TO,
        SSLCertificate.JSON_PROPERTY_CREATED_AT,
    }
)
@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.11.0"
)
public class SSLCertificate {

    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_ISSUED_TO = "issued_to";
    private SSLCertificateIssuedTo issuedTo;

    public static final String JSON_PROPERTY_ISSUED_BY = "issued_by";
    private SSLCertificateIssuedBy issuedBy;

    public static final String JSON_PROPERTY_VALID_FROM = "valid_from";
    private OffsetDateTime validFrom;

    public static final String JSON_PROPERTY_VALID_TO = "valid_to";
    private OffsetDateTime validTo;

    public static final String JSON_PROPERTY_CREATED_AT = "created_at";
    private OffsetDateTime createdAt;

    public SSLCertificate() {}

    public SSLCertificate id(String id) {
        this.id = id;
        return this;
    }

    /**
     * Unique identifier for the SSL certificate
     * @return id
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unique identifier for the SSL certificate")
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }

    public SSLCertificate issuedTo(SSLCertificateIssuedTo issuedTo) {
        this.issuedTo = issuedTo;
        return this;
    }

    /**
     * Get issuedTo
     * @return issuedTo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ISSUED_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public SSLCertificateIssuedTo getIssuedTo() {
        return issuedTo;
    }

    @JsonProperty(JSON_PROPERTY_ISSUED_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIssuedTo(SSLCertificateIssuedTo issuedTo) {
        this.issuedTo = issuedTo;
    }

    public SSLCertificate issuedBy(SSLCertificateIssuedBy issuedBy) {
        this.issuedBy = issuedBy;
        return this;
    }

    /**
     * Get issuedBy
     * @return issuedBy
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ISSUED_BY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public SSLCertificateIssuedBy getIssuedBy() {
        return issuedBy;
    }

    @JsonProperty(JSON_PROPERTY_ISSUED_BY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIssuedBy(SSLCertificateIssuedBy issuedBy) {
        this.issuedBy = issuedBy;
    }

    public SSLCertificate validFrom(OffsetDateTime validFrom) {
        this.validFrom = validFrom;
        return this;
    }

    /**
     * The time the certificate is valid from
     * @return validFrom
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(
        example = "2020-01-01T00:00Z",
        value = "The time the certificate is valid from"
    )
    @JsonProperty(JSON_PROPERTY_VALID_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OffsetDateTime getValidFrom() {
        return validFrom;
    }

    @JsonProperty(JSON_PROPERTY_VALID_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setValidFrom(OffsetDateTime validFrom) {
        this.validFrom = validFrom;
    }

    public SSLCertificate validTo(OffsetDateTime validTo) {
        this.validTo = validTo;
        return this;
    }

    /**
     * The time the certificate is valid to
     * @return validTo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(
        example = "2020-01-01T00:00Z",
        value = "The time the certificate is valid to"
    )
    @JsonProperty(JSON_PROPERTY_VALID_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OffsetDateTime getValidTo() {
        return validTo;
    }

    @JsonProperty(JSON_PROPERTY_VALID_TO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setValidTo(OffsetDateTime validTo) {
        this.validTo = validTo;
    }

    public SSLCertificate createdAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Time when SSL certificate was uploaded
     * @return createdAt
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(
        example = "2020-01-01T00:00Z",
        value = "Time when SSL certificate was uploaded"
    )
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Return true if this SSLCertificate object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SSLCertificate ssLCertificate = (SSLCertificate) o;
        return (
            Objects.equals(this.id, ssLCertificate.id) &&
            Objects.equals(this.issuedTo, ssLCertificate.issuedTo) &&
            Objects.equals(this.issuedBy, ssLCertificate.issuedBy) &&
            Objects.equals(this.validFrom, ssLCertificate.validFrom) &&
            Objects.equals(this.validTo, ssLCertificate.validTo) &&
            Objects.equals(this.createdAt, ssLCertificate.createdAt)
        );
    }

    @Override
    public int hashCode() {
        return Objects.hash(
            id,
            issuedTo,
            issuedBy,
            validFrom,
            validTo,
            createdAt
        );
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SSLCertificate {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb
            .append("    issuedTo: ")
            .append(toIndentedString(issuedTo))
            .append("\n");
        sb
            .append("    issuedBy: ")
            .append(toIndentedString(issuedBy))
            .append("\n");
        sb
            .append("    validFrom: ")
            .append(toIndentedString(validFrom))
            .append("\n");
        sb
            .append("    validTo: ")
            .append(toIndentedString(validTo))
            .append("\n");
        sb
            .append("    createdAt: ")
            .append(toIndentedString(createdAt))
            .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
