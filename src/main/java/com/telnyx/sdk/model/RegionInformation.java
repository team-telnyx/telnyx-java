/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * RegionInformation
 */
@JsonPropertyOrder({
  RegionInformation.JSON_PROPERTY_REGION_TYPE,
  RegionInformation.JSON_PROPERTY_REGION_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RegionInformation {
  /**
   * Gets or Sets regionType
   */
  public enum RegionTypeEnum {
    COUNTRY_CODE("country_code"),
    
    RATE_CENTER("rate_center"),
    
    STATE("state"),
    
    LOCATION("location");

    private String value;

    RegionTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RegionTypeEnum fromValue(String value) {
      for (RegionTypeEnum b : RegionTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REGION_TYPE = "region_type";
  private RegionTypeEnum regionType;

  public static final String JSON_PROPERTY_REGION_NAME = "region_name";
  private String regionName;


  public RegionInformation regionType(RegionTypeEnum regionType) {
    this.regionType = regionType;
    return this;
  }

   /**
   * Get regionType
   * @return regionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "country_code", value = "")
  @JsonProperty(JSON_PROPERTY_REGION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RegionTypeEnum getRegionType() {
    return regionType;
  }


  public void setRegionType(RegionTypeEnum regionType) {
    this.regionType = regionType;
  }


  public RegionInformation regionName(String regionName) {
    this.regionName = regionName;
    return this;
  }

   /**
   * Get regionName
   * @return regionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "US", value = "")
  @JsonProperty(JSON_PROPERTY_REGION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRegionName() {
    return regionName;
  }


  public void setRegionName(String regionName) {
    this.regionName = regionName;
  }


  /**
   * Return true if this RegionInformation object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegionInformation regionInformation = (RegionInformation) o;
    return Objects.equals(this.regionType, regionInformation.regionType) &&
        Objects.equals(this.regionName, regionInformation.regionName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(regionType, regionName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegionInformation {\n");
    sb.append("    regionType: ").append(toIndentedString(regionType)).append("\n");
    sb.append("    regionName: ").append(toIndentedString(regionName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

