/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.telnyx.sdk.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.JSON;
import com.telnyx.sdk.model.AuditEventChangesInner;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Objects;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * AuditLog
 */
@JsonPropertyOrder(
    {
        AuditLog.JSON_PROPERTY_ID,
        AuditLog.JSON_PROPERTY_USER_ID,
        AuditLog.JSON_PROPERTY_RECORD_TYPE,
        AuditLog.JSON_PROPERTY_RESOURCE_ID,
        AuditLog.JSON_PROPERTY_ALTERNATE_RESOURCE_ID,
        AuditLog.JSON_PROPERTY_CHANGE_MADE_BY,
        AuditLog.JSON_PROPERTY_CHANGES,
        AuditLog.JSON_PROPERTY_ORGANIZATION_ID,
        AuditLog.JSON_PROPERTY_CHANGE_TYPE,
        AuditLog.JSON_PROPERTY_CREATED_AT,
    }
)
@jakarta.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.11.0"
)
public class AuditLog {

    public static final String JSON_PROPERTY_ID = "id";
    private UUID id;

    public static final String JSON_PROPERTY_USER_ID = "user_id";
    private UUID userId;

    public static final String JSON_PROPERTY_RECORD_TYPE = "record_type";
    private String recordType;

    public static final String JSON_PROPERTY_RESOURCE_ID = "resource_id";
    private String resourceId;

    public static final String JSON_PROPERTY_ALTERNATE_RESOURCE_ID =
        "alternate_resource_id";
    private JsonNullable<String> alternateResourceId = JsonNullable.<
            String
        >undefined();

    /**
     * Indicates if the change was made by Telnyx on your behalf, the organization owner, a member of your organization, or in the case of managed accounts, the account manager.
     */
    public enum ChangeMadeByEnum {
        TELNYX(String.valueOf("telnyx")),

        ACCOUNT_MANAGER(String.valueOf("account_manager")),

        ACCOUNT_OWNER(String.valueOf("account_owner")),

        ORGANIZATION_MEMBER(String.valueOf("organization_member"));

        private String value;

        ChangeMadeByEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ChangeMadeByEnum fromValue(String value) {
            for (ChangeMadeByEnum b : ChangeMadeByEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException(
                "Unexpected value '" + value + "'"
            );
        }
    }

    public static final String JSON_PROPERTY_CHANGE_MADE_BY = "change_made_by";
    private ChangeMadeByEnum changeMadeBy;

    public static final String JSON_PROPERTY_CHANGES = "changes";
    private JsonNullable<List<List<AuditEventChangesInner>>> changes =
        JsonNullable.<List<List<AuditEventChangesInner>>>undefined();

    public static final String JSON_PROPERTY_ORGANIZATION_ID =
        "organization_id";
    private UUID organizationId;

    public static final String JSON_PROPERTY_CHANGE_TYPE = "change_type";
    private String changeType;

    public static final String JSON_PROPERTY_CREATED_AT = "created_at";
    private OffsetDateTime createdAt;

    public AuditLog() {}

    public AuditLog id(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Unique identifier for the audit log entry.
     * @return id
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "550e8400-e29b-41d4-a716-446655440000",
        value = "Unique identifier for the audit log entry."
    )
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public UUID getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(UUID id) {
        this.id = id;
    }

    public AuditLog userId(UUID userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Unique identifier for the user who made the change.
     * @return userId
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "550e8400-e29b-41d4-a716-446655440001",
        value = "Unique identifier for the user who made the change."
    )
    @JsonProperty(JSON_PROPERTY_USER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public UUID getUserId() {
        return userId;
    }

    @JsonProperty(JSON_PROPERTY_USER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUserId(UUID userId) {
        this.userId = userId;
    }

    public AuditLog recordType(String recordType) {
        this.recordType = recordType;
        return this;
    }

    /**
     * The type of the resource being audited.
     * @return recordType
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "audit_event",
        value = "The type of the resource being audited."
    )
    @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getRecordType() {
        return recordType;
    }

    @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecordType(String recordType) {
        this.recordType = recordType;
    }

    public AuditLog resourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Unique identifier for the resource that was changed.
     * @return resourceId
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "550e8400-e29b-41d4-a716-446655440002",
        value = "Unique identifier for the resource that was changed."
    )
    @JsonProperty(JSON_PROPERTY_RESOURCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getResourceId() {
        return resourceId;
    }

    @JsonProperty(JSON_PROPERTY_RESOURCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResourceId(String resourceId) {
        this.resourceId = resourceId;
    }

    public AuditLog alternateResourceId(String alternateResourceId) {
        this.alternateResourceId = JsonNullable.<String>of(alternateResourceId);
        return this;
    }

    /**
     * An alternate identifier for a resource which may be considered unique enough to identify the resource but is not the primary identifier for the resource. For example, this field could be used to store the phone number value for a phone number when the primary database identifier is a separate distinct value.
     * @return alternateResourceId
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "+14155551234",
        value = "An alternate identifier for a resource which may be considered unique enough to identify the resource but is not the primary identifier for the resource. For example, this field could be used to store the phone number value for a phone number when the primary database identifier is a separate distinct value."
    )
    @JsonIgnore
    public String getAlternateResourceId() {
        return alternateResourceId.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_ALTERNATE_RESOURCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<String> getAlternateResourceId_JsonNullable() {
        return alternateResourceId;
    }

    @JsonProperty(JSON_PROPERTY_ALTERNATE_RESOURCE_ID)
    public void setAlternateResourceId_JsonNullable(
        JsonNullable<String> alternateResourceId
    ) {
        this.alternateResourceId = alternateResourceId;
    }

    public void setAlternateResourceId(String alternateResourceId) {
        this.alternateResourceId = JsonNullable.<String>of(alternateResourceId);
    }

    public AuditLog changeMadeBy(ChangeMadeByEnum changeMadeBy) {
        this.changeMadeBy = changeMadeBy;
        return this;
    }

    /**
     * Indicates if the change was made by Telnyx on your behalf, the organization owner, a member of your organization, or in the case of managed accounts, the account manager.
     * @return changeMadeBy
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "organization_owner",
        value = "Indicates if the change was made by Telnyx on your behalf, the organization owner, a member of your organization, or in the case of managed accounts, the account manager."
    )
    @JsonProperty(JSON_PROPERTY_CHANGE_MADE_BY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ChangeMadeByEnum getChangeMadeBy() {
        return changeMadeBy;
    }

    @JsonProperty(JSON_PROPERTY_CHANGE_MADE_BY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setChangeMadeBy(ChangeMadeByEnum changeMadeBy) {
        this.changeMadeBy = changeMadeBy;
    }

    public AuditLog changes(List<List<AuditEventChangesInner>> changes) {
        this.changes = JsonNullable.<List<List<AuditEventChangesInner>>>of(
            changes
        );
        return this;
    }

    public AuditLog addchangesItem(List<AuditEventChangesInner> changesItem) {
        if (this.changes == null || !this.changes.isPresent()) {
            this.changes = JsonNullable.<List<List<AuditEventChangesInner>>>of(
                new ArrayList<>()
            );
        }
        try {
            this.changes.get().add(changesItem);
        } catch (java.util.NoSuchElementException e) {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Details of the changes made to the resource.
     * @return changes
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "[{\"field\":\"field.name\",\"to\":\"old value\",\"from\":\"new value\"}]",
        value = "Details of the changes made to the resource."
    )
    @JsonIgnore
    public List<List<AuditEventChangesInner>> getChanges() {
        return changes.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_CHANGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<
        List<List<AuditEventChangesInner>>
    > getChanges_JsonNullable() {
        return changes;
    }

    @JsonProperty(JSON_PROPERTY_CHANGES)
    public void setChanges_JsonNullable(
        JsonNullable<List<List<AuditEventChangesInner>>> changes
    ) {
        this.changes = changes;
    }

    public void setChanges(List<List<AuditEventChangesInner>> changes) {
        this.changes = JsonNullable.<List<List<AuditEventChangesInner>>>of(
            changes
        );
    }

    public AuditLog organizationId(UUID organizationId) {
        this.organizationId = organizationId;
        return this;
    }

    /**
     * Unique identifier for the organization that owns the resource.
     * @return organizationId
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "550e8400-e29b-41d4-a716-446655440003",
        value = "Unique identifier for the organization that owns the resource."
    )
    @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public UUID getOrganizationId() {
        return organizationId;
    }

    @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOrganizationId(UUID organizationId) {
        this.organizationId = organizationId;
    }

    public AuditLog changeType(String changeType) {
        this.changeType = changeType;
        return this;
    }

    /**
     * The type of change that occurred.
     * @return changeType
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "update",
        value = "The type of change that occurred."
    )
    @JsonProperty(JSON_PROPERTY_CHANGE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getChangeType() {
        return changeType;
    }

    @JsonProperty(JSON_PROPERTY_CHANGE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setChangeType(String changeType) {
        this.changeType = changeType;
    }

    public AuditLog createdAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * ISO 8601 formatted date indicating when the change occurred.
     * @return createdAt
     **/
    @jakarta.annotation.Nullable
    @ApiModelProperty(
        example = "2023-01-01T00:00Z",
        value = "ISO 8601 formatted date indicating when the change occurred."
    )
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Return true if this AuditLog object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AuditLog auditLog = (AuditLog) o;
        return (
            Objects.equals(this.id, auditLog.id) &&
            Objects.equals(this.userId, auditLog.userId) &&
            Objects.equals(this.recordType, auditLog.recordType) &&
            Objects.equals(this.resourceId, auditLog.resourceId) &&
            equalsNullable(
                this.alternateResourceId,
                auditLog.alternateResourceId
            ) &&
            Objects.equals(this.changeMadeBy, auditLog.changeMadeBy) &&
            equalsNullable(this.changes, auditLog.changes) &&
            Objects.equals(this.organizationId, auditLog.organizationId) &&
            Objects.equals(this.changeType, auditLog.changeType) &&
            Objects.equals(this.createdAt, auditLog.createdAt)
        );
    }

    private static <T> boolean equalsNullable(
        JsonNullable<T> a,
        JsonNullable<T> b
    ) {
        return (
            a == b ||
            (a != null &&
                b != null &&
                a.isPresent() &&
                b.isPresent() &&
                Objects.deepEquals(a.get(), b.get()))
        );
    }

    @Override
    public int hashCode() {
        return Objects.hash(
            id,
            userId,
            recordType,
            resourceId,
            hashCodeNullable(alternateResourceId),
            changeMadeBy,
            hashCodeNullable(changes),
            organizationId,
            changeType,
            createdAt
        );
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a) {
        if (a == null) {
            return 1;
        }
        return a.isPresent()
            ? Arrays.deepHashCode(new Object[] { a.get() })
            : 31;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AuditLog {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
        sb
            .append("    recordType: ")
            .append(toIndentedString(recordType))
            .append("\n");
        sb
            .append("    resourceId: ")
            .append(toIndentedString(resourceId))
            .append("\n");
        sb
            .append("    alternateResourceId: ")
            .append(toIndentedString(alternateResourceId))
            .append("\n");
        sb
            .append("    changeMadeBy: ")
            .append(toIndentedString(changeMadeBy))
            .append("\n");
        sb
            .append("    changes: ")
            .append(toIndentedString(changes))
            .append("\n");
        sb
            .append("    organizationId: ")
            .append(toIndentedString(organizationId))
            .append("\n");
        sb
            .append("    changeType: ")
            .append(toIndentedString(changeType))
            .append("\n");
        sb
            .append("    createdAt: ")
            .append(toIndentedString(createdAt))
            .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
