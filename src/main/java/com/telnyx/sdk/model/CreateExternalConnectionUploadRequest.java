/*
 * Telnyx API
 * Notifications and Notification Settings.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * CreateExternalConnectionUploadRequest
 */
@JsonPropertyOrder({
  CreateExternalConnectionUploadRequest.JSON_PROPERTY_NUMBER_IDS,
  CreateExternalConnectionUploadRequest.JSON_PROPERTY_USAGE,
  CreateExternalConnectionUploadRequest.JSON_PROPERTY_ADDITIONAL_USAGES,
  CreateExternalConnectionUploadRequest.JSON_PROPERTY_LOCATION_ID,
  CreateExternalConnectionUploadRequest.JSON_PROPERTY_CIVIC_ADDRESS_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class CreateExternalConnectionUploadRequest {
  public static final String JSON_PROPERTY_NUMBER_IDS = "number_ids";
  private List<String> numberIds = null;

  /**
   * The use case of the upload request. NOTE: &#x60;calling_user_assignment&#x60; is not supported for toll free numbers.
   */
  public enum UsageEnum {
    CALLING_USER_ASSIGNMENT(String.valueOf("calling_user_assignment")),
    
    FIRST_PARTY_APP_ASSIGNMENT(String.valueOf("first_party_app_assignment"));

    private String value;

    UsageEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UsageEnum fromValue(String value) {
      for (UsageEnum b : UsageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_USAGE = "usage";
  private UsageEnum usage;

  /**
   * Additional use cases of the upload request. If not provided, all supported usages will be used.
   */
  public enum AdditionalUsagesEnum {
    CALLING_USER_ASSIGNMENT(String.valueOf("calling_user_assignment")),
    
    FIRST_PARTY_APP_ASSIGNMENT(String.valueOf("first_party_app_assignment"));

    private String value;

    AdditionalUsagesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AdditionalUsagesEnum fromValue(String value) {
      for (AdditionalUsagesEnum b : AdditionalUsagesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ADDITIONAL_USAGES = "additional_usages";
  private List<AdditionalUsagesEnum> additionalUsages = null;

  public static final String JSON_PROPERTY_LOCATION_ID = "location_id";
  private UUID locationId;

  public static final String JSON_PROPERTY_CIVIC_ADDRESS_ID = "civic_address_id";
  private UUID civicAddressId;

  public CreateExternalConnectionUploadRequest() { 
  }

  public CreateExternalConnectionUploadRequest numberIds(List<String> numberIds) {
    this.numberIds = numberIds;
    return this;
  }

  public CreateExternalConnectionUploadRequest addnumberIdsItem(String numberIdsItem) {
    if (this.numberIds == null) {
      this.numberIds = new ArrayList<>();
    }
    this.numberIds.add(numberIdsItem);
    return this;
  }

   /**
   * Get numberIds
   * @return numberIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NUMBER_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getNumberIds() {
    return numberIds;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberIds(List<String> numberIds) {
    this.numberIds = numberIds;
  }


  public CreateExternalConnectionUploadRequest usage(UsageEnum usage) {
    this.usage = usage;
    return this;
  }

   /**
   * The use case of the upload request. NOTE: &#x60;calling_user_assignment&#x60; is not supported for toll free numbers.
   * @return usage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The use case of the upload request. NOTE: `calling_user_assignment` is not supported for toll free numbers.")
  @JsonProperty(JSON_PROPERTY_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UsageEnum getUsage() {
    return usage;
  }


  @JsonProperty(JSON_PROPERTY_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsage(UsageEnum usage) {
    this.usage = usage;
  }


  public CreateExternalConnectionUploadRequest additionalUsages(List<AdditionalUsagesEnum> additionalUsages) {
    this.additionalUsages = additionalUsages;
    return this;
  }

  public CreateExternalConnectionUploadRequest addadditionalUsagesItem(AdditionalUsagesEnum additionalUsagesItem) {
    if (this.additionalUsages == null) {
      this.additionalUsages = new ArrayList<>();
    }
    this.additionalUsages.add(additionalUsagesItem);
    return this;
  }

   /**
   * Get additionalUsages
   * @return additionalUsages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_USAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AdditionalUsagesEnum> getAdditionalUsages() {
    return additionalUsages;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_USAGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalUsages(List<AdditionalUsagesEnum> additionalUsages) {
    this.additionalUsages = additionalUsages;
  }


  public CreateExternalConnectionUploadRequest locationId(UUID locationId) {
    this.locationId = locationId;
    return this;
  }

   /**
   * Identifies the location to assign all phone numbers to.
   * @return locationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the location to assign all phone numbers to.")
  @JsonProperty(JSON_PROPERTY_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getLocationId() {
    return locationId;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocationId(UUID locationId) {
    this.locationId = locationId;
  }


  public CreateExternalConnectionUploadRequest civicAddressId(UUID civicAddressId) {
    this.civicAddressId = civicAddressId;
    return this;
  }

   /**
   * Identifies the civic address to assign all phone numbers to.
   * @return civicAddressId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the civic address to assign all phone numbers to.")
  @JsonProperty(JSON_PROPERTY_CIVIC_ADDRESS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getCivicAddressId() {
    return civicAddressId;
  }


  @JsonProperty(JSON_PROPERTY_CIVIC_ADDRESS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCivicAddressId(UUID civicAddressId) {
    this.civicAddressId = civicAddressId;
  }


  /**
   * Return true if this CreateExternalConnectionUploadRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateExternalConnectionUploadRequest createExternalConnectionUploadRequest = (CreateExternalConnectionUploadRequest) o;
    return Objects.equals(this.numberIds, createExternalConnectionUploadRequest.numberIds) &&
        Objects.equals(this.usage, createExternalConnectionUploadRequest.usage) &&
        Objects.equals(this.additionalUsages, createExternalConnectionUploadRequest.additionalUsages) &&
        Objects.equals(this.locationId, createExternalConnectionUploadRequest.locationId) &&
        Objects.equals(this.civicAddressId, createExternalConnectionUploadRequest.civicAddressId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numberIds, usage, additionalUsages, locationId, civicAddressId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateExternalConnectionUploadRequest {\n");
    sb.append("    numberIds: ").append(toIndentedString(numberIds)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("    additionalUsages: ").append(toIndentedString(additionalUsages)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    civicAddressId: ").append(toIndentedString(civicAddressId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

