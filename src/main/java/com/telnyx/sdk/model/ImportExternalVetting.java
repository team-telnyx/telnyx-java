/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * ImportExternalVetting
 */
@JsonPropertyOrder({
  ImportExternalVetting.JSON_PROPERTY_EVP_ID,
  ImportExternalVetting.JSON_PROPERTY_VETTING_ID,
  ImportExternalVetting.JSON_PROPERTY_VETTING_TOKEN
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class ImportExternalVetting {
  public static final String JSON_PROPERTY_EVP_ID = "evpId";
  private String evpId;

  public static final String JSON_PROPERTY_VETTING_ID = "vettingId";
  private String vettingId;

  public static final String JSON_PROPERTY_VETTING_TOKEN = "vettingToken";
  private String vettingToken;

  public ImportExternalVetting() { 
  }

  public ImportExternalVetting evpId(String evpId) {
    this.evpId = evpId;
    return this;
  }

   /**
   * External vetting provider ID for the brand.
   * @return evpId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "External vetting provider ID for the brand.")
  @JsonProperty(JSON_PROPERTY_EVP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEvpId() {
    return evpId;
  }


  @JsonProperty(JSON_PROPERTY_EVP_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEvpId(String evpId) {
    this.evpId = evpId;
  }


  public ImportExternalVetting vettingId(String vettingId) {
    this.vettingId = vettingId;
    return this;
  }

   /**
   * Unique ID that identifies a vetting transaction performed by a vetting provider. This ID is provided by the vetting provider at time of vetting.
   * @return vettingId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Unique ID that identifies a vetting transaction performed by a vetting provider. This ID is provided by the vetting provider at time of vetting.")
  @JsonProperty(JSON_PROPERTY_VETTING_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVettingId() {
    return vettingId;
  }


  @JsonProperty(JSON_PROPERTY_VETTING_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVettingId(String vettingId) {
    this.vettingId = vettingId;
  }


  public ImportExternalVetting vettingToken(String vettingToken) {
    this.vettingToken = vettingToken;
    return this;
  }

   /**
   * Required by some providers for vetting record confirmation.
   * @return vettingToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Required by some providers for vetting record confirmation.")
  @JsonProperty(JSON_PROPERTY_VETTING_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVettingToken() {
    return vettingToken;
  }


  @JsonProperty(JSON_PROPERTY_VETTING_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVettingToken(String vettingToken) {
    this.vettingToken = vettingToken;
  }


  /**
   * Return true if this ImportExternalVetting object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImportExternalVetting importExternalVetting = (ImportExternalVetting) o;
    return Objects.equals(this.evpId, importExternalVetting.evpId) &&
        Objects.equals(this.vettingId, importExternalVetting.vettingId) &&
        Objects.equals(this.vettingToken, importExternalVetting.vettingToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(evpId, vettingId, vettingToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImportExternalVetting {\n");
    sb.append("    evpId: ").append(toIndentedString(evpId)).append("\n");
    sb.append("    vettingId: ").append(toIndentedString(vettingId)).append("\n");
    sb.append("    vettingToken: ").append(toIndentedString(vettingToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

