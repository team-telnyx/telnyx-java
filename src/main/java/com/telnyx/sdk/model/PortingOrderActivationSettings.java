/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.PortingOrderActivationStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * PortingOrderActivationSettings
 */
@JsonPropertyOrder({
  PortingOrderActivationSettings.JSON_PROPERTY_FOC_DATETIME_REQUESTED,
  PortingOrderActivationSettings.JSON_PROPERTY_FOC_DATETIME_ACTUAL,
  PortingOrderActivationSettings.JSON_PROPERTY_FAST_PORT_ELIGIBLE,
  PortingOrderActivationSettings.JSON_PROPERTY_ACTIVATION_STATUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PortingOrderActivationSettings {
  public static final String JSON_PROPERTY_FOC_DATETIME_REQUESTED = "foc_datetime_requested";
  private OffsetDateTime focDatetimeRequested;

  public static final String JSON_PROPERTY_FOC_DATETIME_ACTUAL = "foc_datetime_actual";
  private OffsetDateTime focDatetimeActual;

  public static final String JSON_PROPERTY_FAST_PORT_ELIGIBLE = "fast_port_eligible";
  private Boolean fastPortEligible;

  public static final String JSON_PROPERTY_ACTIVATION_STATUS = "activation_status";
  private PortingOrderActivationStatus activationStatus;

  public PortingOrderActivationSettings() { 
  }

  @JsonCreator
  public PortingOrderActivationSettings(
    @JsonProperty(JSON_PROPERTY_FAST_PORT_ELIGIBLE) Boolean fastPortEligible
  ) {
    this();
    this.fastPortEligible = fastPortEligible;
  }

  public PortingOrderActivationSettings focDatetimeRequested(OffsetDateTime focDatetimeRequested) {
    this.focDatetimeRequested = focDatetimeRequested;
    return this;
  }

   /**
   * ISO 8601 formatted Date/Time requested for the FOC date
   * @return focDatetimeRequested
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-03-19T10:07:15.527Z", value = "ISO 8601 formatted Date/Time requested for the FOC date")
  @JsonProperty(JSON_PROPERTY_FOC_DATETIME_REQUESTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getFocDatetimeRequested() {
    return focDatetimeRequested;
  }


  @JsonProperty(JSON_PROPERTY_FOC_DATETIME_REQUESTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFocDatetimeRequested(OffsetDateTime focDatetimeRequested) {
    this.focDatetimeRequested = focDatetimeRequested;
  }


  public PortingOrderActivationSettings focDatetimeActual(OffsetDateTime focDatetimeActual) {
    this.focDatetimeActual = focDatetimeActual;
    return this;
  }

   /**
   * ISO 8601 formatted Date/Time of the FOC date
   * @return focDatetimeActual
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-03-19T10:07:15.527Z", value = "ISO 8601 formatted Date/Time of the FOC date")
  @JsonProperty(JSON_PROPERTY_FOC_DATETIME_ACTUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getFocDatetimeActual() {
    return focDatetimeActual;
  }


  @JsonProperty(JSON_PROPERTY_FOC_DATETIME_ACTUAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFocDatetimeActual(OffsetDateTime focDatetimeActual) {
    this.focDatetimeActual = focDatetimeActual;
  }


   /**
   * Indicates whether this porting order is eligible for FastPort
   * @return fastPortEligible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates whether this porting order is eligible for FastPort")
  @JsonProperty(JSON_PROPERTY_FAST_PORT_ELIGIBLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFastPortEligible() {
    return fastPortEligible;
  }




  public PortingOrderActivationSettings activationStatus(PortingOrderActivationStatus activationStatus) {
    this.activationStatus = activationStatus;
    return this;
  }

   /**
   * Get activationStatus
   * @return activationStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACTIVATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PortingOrderActivationStatus getActivationStatus() {
    return activationStatus;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActivationStatus(PortingOrderActivationStatus activationStatus) {
    this.activationStatus = activationStatus;
  }


  /**
   * Return true if this PortingOrderActivationSettings object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortingOrderActivationSettings portingOrderActivationSettings = (PortingOrderActivationSettings) o;
    return Objects.equals(this.focDatetimeRequested, portingOrderActivationSettings.focDatetimeRequested) &&
        Objects.equals(this.focDatetimeActual, portingOrderActivationSettings.focDatetimeActual) &&
        Objects.equals(this.fastPortEligible, portingOrderActivationSettings.fastPortEligible) &&
        Objects.equals(this.activationStatus, portingOrderActivationSettings.activationStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(focDatetimeRequested, focDatetimeActual, fastPortEligible, activationStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortingOrderActivationSettings {\n");
    sb.append("    focDatetimeRequested: ").append(toIndentedString(focDatetimeRequested)).append("\n");
    sb.append("    focDatetimeActual: ").append(toIndentedString(focDatetimeActual)).append("\n");
    sb.append("    fastPortEligible: ").append(toIndentedString(fastPortEligible)).append("\n");
    sb.append("    activationStatus: ").append(toIndentedString(activationStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

