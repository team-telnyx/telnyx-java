/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.Error;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * ValidateAddressResult
 */
@JsonPropertyOrder({
  ValidateAddressResult.JSON_PROPERTY_RESULT,
  ValidateAddressResult.JSON_PROPERTY_SUGGESTED,
  ValidateAddressResult.JSON_PROPERTY_RECORD_TYPE,
  ValidateAddressResult.JSON_PROPERTY_ERRORS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ValidateAddressResult {
  /**
   * Indicates whether an address is valid or invalid.
   */
  public enum ResultEnum {
    VALID("valid"),
    
    INVALID("invalid");

    private String value;

    ResultEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ResultEnum fromValue(String value) {
      for (ResultEnum b : ResultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RESULT = "result";
  private ResultEnum result;

  public static final String JSON_PROPERTY_SUGGESTED = "suggested";
  private String suggested;

  public static final String JSON_PROPERTY_RECORD_TYPE = "record_type";
  private String recordType;

  public static final String JSON_PROPERTY_ERRORS = "errors";
  private List<Error> errors = null;

  public ValidateAddressResult() { 
  }

  public ValidateAddressResult result(ResultEnum result) {
    this.result = result;
    return this;
  }

   /**
   * Indicates whether an address is valid or invalid.
   * @return result
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "valid", required = true, value = "Indicates whether an address is valid or invalid.")
  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ResultEnum getResult() {
    return result;
  }


  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResult(ResultEnum result) {
    this.result = result;
  }


  public ValidateAddressResult suggested(String suggested) {
    this.suggested = suggested;
    return this;
  }

   /**
   * Get suggested
   * @return suggested
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SUGGESTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSuggested() {
    return suggested;
  }


  @JsonProperty(JSON_PROPERTY_SUGGESTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSuggested(String suggested) {
    this.suggested = suggested;
  }


  public ValidateAddressResult recordType(String recordType) {
    this.recordType = recordType;
    return this;
  }

   /**
   * Identifies the type of the resource.
   * @return recordType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "address_validation", value = "Identifies the type of the resource.")
  @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecordType() {
    return recordType;
  }


  @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecordType(String recordType) {
    this.recordType = recordType;
  }


  public ValidateAddressResult errors(List<Error> errors) {
    this.errors = errors;
    return this;
  }

  public ValidateAddressResult addErrorsItem(Error errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Error> getErrors() {
    return errors;
  }


  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrors(List<Error> errors) {
    this.errors = errors;
  }


  /**
   * Return true if this ValidateAddressResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidateAddressResult validateAddressResult = (ValidateAddressResult) o;
    return Objects.equals(this.result, validateAddressResult.result) &&
        Objects.equals(this.suggested, validateAddressResult.suggested) &&
        Objects.equals(this.recordType, validateAddressResult.recordType) &&
        Objects.equals(this.errors, validateAddressResult.errors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(result, suggested, recordType, errors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidateAddressResult {\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    suggested: ").append(toIndentedString(suggested)).append("\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

