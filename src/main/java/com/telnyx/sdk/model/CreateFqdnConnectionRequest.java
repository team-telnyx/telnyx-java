/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.AnchorsiteOverride;
import com.telnyx.sdk.model.ConnectionRtcpSettings;
import com.telnyx.sdk.model.DtmfType;
import com.telnyx.sdk.model.EncryptedMedia;
import com.telnyx.sdk.model.FqdnConnectionTransportProtocol;
import com.telnyx.sdk.model.InboundFqdn;
import com.telnyx.sdk.model.OutboundFqdn;
import com.telnyx.sdk.model.WebhookApiVersion;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * CreateFqdnConnectionRequest
 */
@JsonPropertyOrder({
  CreateFqdnConnectionRequest.JSON_PROPERTY_ACTIVE,
  CreateFqdnConnectionRequest.JSON_PROPERTY_ANCHORSITE_OVERRIDE,
  CreateFqdnConnectionRequest.JSON_PROPERTY_CONNECTION_NAME,
  CreateFqdnConnectionRequest.JSON_PROPERTY_TRANSPORT_PROTOCOL,
  CreateFqdnConnectionRequest.JSON_PROPERTY_DEFAULT_ON_HOLD_COMFORT_NOISE_ENABLED,
  CreateFqdnConnectionRequest.JSON_PROPERTY_DTMF_TYPE,
  CreateFqdnConnectionRequest.JSON_PROPERTY_ENCODE_CONTACT_HEADER_ENABLED,
  CreateFqdnConnectionRequest.JSON_PROPERTY_ENCRYPTED_MEDIA,
  CreateFqdnConnectionRequest.JSON_PROPERTY_MICROSOFT_TEAMS_SBC,
  CreateFqdnConnectionRequest.JSON_PROPERTY_ONNET_T38_PASSTHROUGH_ENABLED,
  CreateFqdnConnectionRequest.JSON_PROPERTY_IOS_PUSH_CREDENTIAL_ID,
  CreateFqdnConnectionRequest.JSON_PROPERTY_ANDROID_PUSH_CREDENTIAL_ID,
  CreateFqdnConnectionRequest.JSON_PROPERTY_WEBHOOK_EVENT_URL,
  CreateFqdnConnectionRequest.JSON_PROPERTY_WEBHOOK_EVENT_FAILOVER_URL,
  CreateFqdnConnectionRequest.JSON_PROPERTY_WEBHOOK_API_VERSION,
  CreateFqdnConnectionRequest.JSON_PROPERTY_WEBHOOK_TIMEOUT_SECS,
  CreateFqdnConnectionRequest.JSON_PROPERTY_RTCP_SETTINGS,
  CreateFqdnConnectionRequest.JSON_PROPERTY_INBOUND,
  CreateFqdnConnectionRequest.JSON_PROPERTY_OUTBOUND
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class CreateFqdnConnectionRequest {
  public static final String JSON_PROPERTY_ACTIVE = "active";
  private Boolean active = true;

  public static final String JSON_PROPERTY_ANCHORSITE_OVERRIDE = "anchorsite_override";
  private AnchorsiteOverride anchorsiteOverride = AnchorsiteOverride.LATENCY;

  public static final String JSON_PROPERTY_CONNECTION_NAME = "connection_name";
  private String connectionName;

  public static final String JSON_PROPERTY_TRANSPORT_PROTOCOL = "transport_protocol";
  private FqdnConnectionTransportProtocol transportProtocol = FqdnConnectionTransportProtocol.UDP;

  public static final String JSON_PROPERTY_DEFAULT_ON_HOLD_COMFORT_NOISE_ENABLED = "default_on_hold_comfort_noise_enabled";
  private Boolean defaultOnHoldComfortNoiseEnabled = true;

  public static final String JSON_PROPERTY_DTMF_TYPE = "dtmf_type";
  private DtmfType dtmfType = DtmfType.RFC_2833;

  public static final String JSON_PROPERTY_ENCODE_CONTACT_HEADER_ENABLED = "encode_contact_header_enabled";
  private Boolean encodeContactHeaderEnabled = false;

  public static final String JSON_PROPERTY_ENCRYPTED_MEDIA = "encrypted_media";
  private JsonNullable<EncryptedMedia> encryptedMedia = JsonNullable.<EncryptedMedia>undefined();

  public static final String JSON_PROPERTY_MICROSOFT_TEAMS_SBC = "microsoft_teams_sbc";
  private Boolean microsoftTeamsSbc = false;

  public static final String JSON_PROPERTY_ONNET_T38_PASSTHROUGH_ENABLED = "onnet_t38_passthrough_enabled";
  private Boolean onnetT38PassthroughEnabled = false;

  public static final String JSON_PROPERTY_IOS_PUSH_CREDENTIAL_ID = "ios_push_credential_id";
  private JsonNullable<String> iosPushCredentialId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ANDROID_PUSH_CREDENTIAL_ID = "android_push_credential_id";
  private JsonNullable<String> androidPushCredentialId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_WEBHOOK_EVENT_URL = "webhook_event_url";
  private String webhookEventUrl;

  public static final String JSON_PROPERTY_WEBHOOK_EVENT_FAILOVER_URL = "webhook_event_failover_url";
  private JsonNullable<String> webhookEventFailoverUrl = JsonNullable.<String>of("");

  public static final String JSON_PROPERTY_WEBHOOK_API_VERSION = "webhook_api_version";
  private WebhookApiVersion webhookApiVersion = WebhookApiVersion._1;

  public static final String JSON_PROPERTY_WEBHOOK_TIMEOUT_SECS = "webhook_timeout_secs";
  private JsonNullable<Integer> webhookTimeoutSecs = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_RTCP_SETTINGS = "rtcp_settings";
  private ConnectionRtcpSettings rtcpSettings;

  public static final String JSON_PROPERTY_INBOUND = "inbound";
  private InboundFqdn inbound;

  public static final String JSON_PROPERTY_OUTBOUND = "outbound";
  private OutboundFqdn outbound;

  public CreateFqdnConnectionRequest() { 
  }

  public CreateFqdnConnectionRequest active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Defaults to true
   * @return active
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Defaults to true")
  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActive(Boolean active) {
    this.active = active;
  }


  public CreateFqdnConnectionRequest anchorsiteOverride(AnchorsiteOverride anchorsiteOverride) {
    this.anchorsiteOverride = anchorsiteOverride;
    return this;
  }

   /**
   * Get anchorsiteOverride
   * @return anchorsiteOverride
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ANCHORSITE_OVERRIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AnchorsiteOverride getAnchorsiteOverride() {
    return anchorsiteOverride;
  }


  @JsonProperty(JSON_PROPERTY_ANCHORSITE_OVERRIDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnchorsiteOverride(AnchorsiteOverride anchorsiteOverride) {
    this.anchorsiteOverride = anchorsiteOverride;
  }


  public CreateFqdnConnectionRequest connectionName(String connectionName) {
    this.connectionName = connectionName;
    return this;
  }

   /**
   * A user-assigned name to help manage the connection.
   * @return connectionName
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "office-connection", required = true, value = "A user-assigned name to help manage the connection.")
  @JsonProperty(JSON_PROPERTY_CONNECTION_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConnectionName() {
    return connectionName;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConnectionName(String connectionName) {
    this.connectionName = connectionName;
  }


  public CreateFqdnConnectionRequest transportProtocol(FqdnConnectionTransportProtocol transportProtocol) {
    this.transportProtocol = transportProtocol;
    return this;
  }

   /**
   * Get transportProtocol
   * @return transportProtocol
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRANSPORT_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FqdnConnectionTransportProtocol getTransportProtocol() {
    return transportProtocol;
  }


  @JsonProperty(JSON_PROPERTY_TRANSPORT_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransportProtocol(FqdnConnectionTransportProtocol transportProtocol) {
    this.transportProtocol = transportProtocol;
  }


  public CreateFqdnConnectionRequest defaultOnHoldComfortNoiseEnabled(Boolean defaultOnHoldComfortNoiseEnabled) {
    this.defaultOnHoldComfortNoiseEnabled = defaultOnHoldComfortNoiseEnabled;
    return this;
  }

   /**
   * When enabled, Telnyx will generate comfort noise when you place the call on hold. If disabled, you will need to generate comfort noise or on hold music to avoid RTP timeout.
   * @return defaultOnHoldComfortNoiseEnabled
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "When enabled, Telnyx will generate comfort noise when you place the call on hold. If disabled, you will need to generate comfort noise or on hold music to avoid RTP timeout.")
  @JsonProperty(JSON_PROPERTY_DEFAULT_ON_HOLD_COMFORT_NOISE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDefaultOnHoldComfortNoiseEnabled() {
    return defaultOnHoldComfortNoiseEnabled;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_ON_HOLD_COMFORT_NOISE_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultOnHoldComfortNoiseEnabled(Boolean defaultOnHoldComfortNoiseEnabled) {
    this.defaultOnHoldComfortNoiseEnabled = defaultOnHoldComfortNoiseEnabled;
  }


  public CreateFqdnConnectionRequest dtmfType(DtmfType dtmfType) {
    this.dtmfType = dtmfType;
    return this;
  }

   /**
   * Get dtmfType
   * @return dtmfType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DTMF_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DtmfType getDtmfType() {
    return dtmfType;
  }


  @JsonProperty(JSON_PROPERTY_DTMF_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDtmfType(DtmfType dtmfType) {
    this.dtmfType = dtmfType;
  }


  public CreateFqdnConnectionRequest encodeContactHeaderEnabled(Boolean encodeContactHeaderEnabled) {
    this.encodeContactHeaderEnabled = encodeContactHeaderEnabled;
    return this;
  }

   /**
   * Encode the SIP contact header sent by Telnyx to avoid issues for NAT or ALG scenarios.
   * @return encodeContactHeaderEnabled
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Encode the SIP contact header sent by Telnyx to avoid issues for NAT or ALG scenarios.")
  @JsonProperty(JSON_PROPERTY_ENCODE_CONTACT_HEADER_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEncodeContactHeaderEnabled() {
    return encodeContactHeaderEnabled;
  }


  @JsonProperty(JSON_PROPERTY_ENCODE_CONTACT_HEADER_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEncodeContactHeaderEnabled(Boolean encodeContactHeaderEnabled) {
    this.encodeContactHeaderEnabled = encodeContactHeaderEnabled;
  }


  public CreateFqdnConnectionRequest encryptedMedia(EncryptedMedia encryptedMedia) {
    this.encryptedMedia = JsonNullable.<EncryptedMedia>of(encryptedMedia);
    return this;
  }

   /**
   * Get encryptedMedia
   * @return encryptedMedia
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EncryptedMedia getEncryptedMedia() {
        return encryptedMedia.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENCRYPTED_MEDIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EncryptedMedia> getEncryptedMedia_JsonNullable() {
    return encryptedMedia;
  }
  
  @JsonProperty(JSON_PROPERTY_ENCRYPTED_MEDIA)
  public void setEncryptedMedia_JsonNullable(JsonNullable<EncryptedMedia> encryptedMedia) {
    this.encryptedMedia = encryptedMedia;
  }

  public void setEncryptedMedia(EncryptedMedia encryptedMedia) {
    this.encryptedMedia = JsonNullable.<EncryptedMedia>of(encryptedMedia);
  }


  public CreateFqdnConnectionRequest microsoftTeamsSbc(Boolean microsoftTeamsSbc) {
    this.microsoftTeamsSbc = microsoftTeamsSbc;
    return this;
  }

   /**
   * When enabled, the connection will be created for Microsoft Teams Direct Routing. A *.mstsbc.telnyx.tech FQDN will be created for the connection automatically.
   * @return microsoftTeamsSbc
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "When enabled, the connection will be created for Microsoft Teams Direct Routing. A *.mstsbc.telnyx.tech FQDN will be created for the connection automatically.")
  @JsonProperty(JSON_PROPERTY_MICROSOFT_TEAMS_SBC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getMicrosoftTeamsSbc() {
    return microsoftTeamsSbc;
  }


  @JsonProperty(JSON_PROPERTY_MICROSOFT_TEAMS_SBC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMicrosoftTeamsSbc(Boolean microsoftTeamsSbc) {
    this.microsoftTeamsSbc = microsoftTeamsSbc;
  }


  public CreateFqdnConnectionRequest onnetT38PassthroughEnabled(Boolean onnetT38PassthroughEnabled) {
    this.onnetT38PassthroughEnabled = onnetT38PassthroughEnabled;
    return this;
  }

   /**
   * Enable on-net T38 if you prefer the sender and receiver negotiating T38 directly if both are on the Telnyx network. If this is disabled, Telnyx will be able to use T38 on just one leg of the call depending on each leg&#39;s settings.
   * @return onnetT38PassthroughEnabled
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Enable on-net T38 if you prefer the sender and receiver negotiating T38 directly if both are on the Telnyx network. If this is disabled, Telnyx will be able to use T38 on just one leg of the call depending on each leg's settings.")
  @JsonProperty(JSON_PROPERTY_ONNET_T38_PASSTHROUGH_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOnnetT38PassthroughEnabled() {
    return onnetT38PassthroughEnabled;
  }


  @JsonProperty(JSON_PROPERTY_ONNET_T38_PASSTHROUGH_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOnnetT38PassthroughEnabled(Boolean onnetT38PassthroughEnabled) {
    this.onnetT38PassthroughEnabled = onnetT38PassthroughEnabled;
  }


  public CreateFqdnConnectionRequest iosPushCredentialId(String iosPushCredentialId) {
    this.iosPushCredentialId = JsonNullable.<String>of(iosPushCredentialId);
    return this;
  }

   /**
   * The uuid of the push credential for Ios
   * @return iosPushCredentialId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "ec0c8e5d-439e-4620-a0c1-9d9c8d02a836", value = "The uuid of the push credential for Ios")
  @JsonIgnore

  public String getIosPushCredentialId() {
        return iosPushCredentialId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IOS_PUSH_CREDENTIAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIosPushCredentialId_JsonNullable() {
    return iosPushCredentialId;
  }
  
  @JsonProperty(JSON_PROPERTY_IOS_PUSH_CREDENTIAL_ID)
  public void setIosPushCredentialId_JsonNullable(JsonNullable<String> iosPushCredentialId) {
    this.iosPushCredentialId = iosPushCredentialId;
  }

  public void setIosPushCredentialId(String iosPushCredentialId) {
    this.iosPushCredentialId = JsonNullable.<String>of(iosPushCredentialId);
  }


  public CreateFqdnConnectionRequest androidPushCredentialId(String androidPushCredentialId) {
    this.androidPushCredentialId = JsonNullable.<String>of(androidPushCredentialId);
    return this;
  }

   /**
   * The uuid of the push credential for Android
   * @return androidPushCredentialId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "06b09dfd-7154-4980-8b75-cebf7a9d4f8e", value = "The uuid of the push credential for Android")
  @JsonIgnore

  public String getAndroidPushCredentialId() {
        return androidPushCredentialId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ANDROID_PUSH_CREDENTIAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAndroidPushCredentialId_JsonNullable() {
    return androidPushCredentialId;
  }
  
  @JsonProperty(JSON_PROPERTY_ANDROID_PUSH_CREDENTIAL_ID)
  public void setAndroidPushCredentialId_JsonNullable(JsonNullable<String> androidPushCredentialId) {
    this.androidPushCredentialId = androidPushCredentialId;
  }

  public void setAndroidPushCredentialId(String androidPushCredentialId) {
    this.androidPushCredentialId = JsonNullable.<String>of(androidPushCredentialId);
  }


  public CreateFqdnConnectionRequest webhookEventUrl(String webhookEventUrl) {
    this.webhookEventUrl = webhookEventUrl;
    return this;
  }

   /**
   * The URL where webhooks related to this connection will be sent. Must include a scheme, such as &#39;https&#39;.
   * @return webhookEventUrl
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "https://example.com", value = "The URL where webhooks related to this connection will be sent. Must include a scheme, such as 'https'.")
  @JsonProperty(JSON_PROPERTY_WEBHOOK_EVENT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebhookEventUrl() {
    return webhookEventUrl;
  }


  @JsonProperty(JSON_PROPERTY_WEBHOOK_EVENT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebhookEventUrl(String webhookEventUrl) {
    this.webhookEventUrl = webhookEventUrl;
  }


  public CreateFqdnConnectionRequest webhookEventFailoverUrl(String webhookEventFailoverUrl) {
    this.webhookEventFailoverUrl = JsonNullable.<String>of(webhookEventFailoverUrl);
    return this;
  }

   /**
   * The failover URL where webhooks related to this connection will be sent if sending to the primary URL fails. Must include a scheme, such as &#39;https&#39;.
   * @return webhookEventFailoverUrl
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "https://failover.example.com", value = "The failover URL where webhooks related to this connection will be sent if sending to the primary URL fails. Must include a scheme, such as 'https'.")
  @JsonIgnore

  public String getWebhookEventFailoverUrl() {
        return webhookEventFailoverUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEBHOOK_EVENT_FAILOVER_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getWebhookEventFailoverUrl_JsonNullable() {
    return webhookEventFailoverUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_WEBHOOK_EVENT_FAILOVER_URL)
  public void setWebhookEventFailoverUrl_JsonNullable(JsonNullable<String> webhookEventFailoverUrl) {
    this.webhookEventFailoverUrl = webhookEventFailoverUrl;
  }

  public void setWebhookEventFailoverUrl(String webhookEventFailoverUrl) {
    this.webhookEventFailoverUrl = JsonNullable.<String>of(webhookEventFailoverUrl);
  }


  public CreateFqdnConnectionRequest webhookApiVersion(WebhookApiVersion webhookApiVersion) {
    this.webhookApiVersion = webhookApiVersion;
    return this;
  }

   /**
   * Get webhookApiVersion
   * @return webhookApiVersion
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WEBHOOK_API_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WebhookApiVersion getWebhookApiVersion() {
    return webhookApiVersion;
  }


  @JsonProperty(JSON_PROPERTY_WEBHOOK_API_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebhookApiVersion(WebhookApiVersion webhookApiVersion) {
    this.webhookApiVersion = webhookApiVersion;
  }


  public CreateFqdnConnectionRequest webhookTimeoutSecs(Integer webhookTimeoutSecs) {
    this.webhookTimeoutSecs = JsonNullable.<Integer>of(webhookTimeoutSecs);
    return this;
  }

   /**
   * Specifies how many seconds to wait before timing out a webhook.
   * minimum: 0
   * maximum: 30
   * @return webhookTimeoutSecs
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "25", value = "Specifies how many seconds to wait before timing out a webhook.")
  @JsonIgnore

  public Integer getWebhookTimeoutSecs() {
        return webhookTimeoutSecs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEBHOOK_TIMEOUT_SECS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getWebhookTimeoutSecs_JsonNullable() {
    return webhookTimeoutSecs;
  }
  
  @JsonProperty(JSON_PROPERTY_WEBHOOK_TIMEOUT_SECS)
  public void setWebhookTimeoutSecs_JsonNullable(JsonNullable<Integer> webhookTimeoutSecs) {
    this.webhookTimeoutSecs = webhookTimeoutSecs;
  }

  public void setWebhookTimeoutSecs(Integer webhookTimeoutSecs) {
    this.webhookTimeoutSecs = JsonNullable.<Integer>of(webhookTimeoutSecs);
  }


  public CreateFqdnConnectionRequest rtcpSettings(ConnectionRtcpSettings rtcpSettings) {
    this.rtcpSettings = rtcpSettings;
    return this;
  }

   /**
   * Get rtcpSettings
   * @return rtcpSettings
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RTCP_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConnectionRtcpSettings getRtcpSettings() {
    return rtcpSettings;
  }


  @JsonProperty(JSON_PROPERTY_RTCP_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRtcpSettings(ConnectionRtcpSettings rtcpSettings) {
    this.rtcpSettings = rtcpSettings;
  }


  public CreateFqdnConnectionRequest inbound(InboundFqdn inbound) {
    this.inbound = inbound;
    return this;
  }

   /**
   * Get inbound
   * @return inbound
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INBOUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InboundFqdn getInbound() {
    return inbound;
  }


  @JsonProperty(JSON_PROPERTY_INBOUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInbound(InboundFqdn inbound) {
    this.inbound = inbound;
  }


  public CreateFqdnConnectionRequest outbound(OutboundFqdn outbound) {
    this.outbound = outbound;
    return this;
  }

   /**
   * Get outbound
   * @return outbound
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OUTBOUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OutboundFqdn getOutbound() {
    return outbound;
  }


  @JsonProperty(JSON_PROPERTY_OUTBOUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutbound(OutboundFqdn outbound) {
    this.outbound = outbound;
  }


  /**
   * Return true if this CreateFqdnConnectionRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateFqdnConnectionRequest createFqdnConnectionRequest = (CreateFqdnConnectionRequest) o;
    return Objects.equals(this.active, createFqdnConnectionRequest.active) &&
        Objects.equals(this.anchorsiteOverride, createFqdnConnectionRequest.anchorsiteOverride) &&
        Objects.equals(this.connectionName, createFqdnConnectionRequest.connectionName) &&
        Objects.equals(this.transportProtocol, createFqdnConnectionRequest.transportProtocol) &&
        Objects.equals(this.defaultOnHoldComfortNoiseEnabled, createFqdnConnectionRequest.defaultOnHoldComfortNoiseEnabled) &&
        Objects.equals(this.dtmfType, createFqdnConnectionRequest.dtmfType) &&
        Objects.equals(this.encodeContactHeaderEnabled, createFqdnConnectionRequest.encodeContactHeaderEnabled) &&
        equalsNullable(this.encryptedMedia, createFqdnConnectionRequest.encryptedMedia) &&
        Objects.equals(this.microsoftTeamsSbc, createFqdnConnectionRequest.microsoftTeamsSbc) &&
        Objects.equals(this.onnetT38PassthroughEnabled, createFqdnConnectionRequest.onnetT38PassthroughEnabled) &&
        equalsNullable(this.iosPushCredentialId, createFqdnConnectionRequest.iosPushCredentialId) &&
        equalsNullable(this.androidPushCredentialId, createFqdnConnectionRequest.androidPushCredentialId) &&
        Objects.equals(this.webhookEventUrl, createFqdnConnectionRequest.webhookEventUrl) &&
        equalsNullable(this.webhookEventFailoverUrl, createFqdnConnectionRequest.webhookEventFailoverUrl) &&
        Objects.equals(this.webhookApiVersion, createFqdnConnectionRequest.webhookApiVersion) &&
        equalsNullable(this.webhookTimeoutSecs, createFqdnConnectionRequest.webhookTimeoutSecs) &&
        Objects.equals(this.rtcpSettings, createFqdnConnectionRequest.rtcpSettings) &&
        Objects.equals(this.inbound, createFqdnConnectionRequest.inbound) &&
        Objects.equals(this.outbound, createFqdnConnectionRequest.outbound);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, anchorsiteOverride, connectionName, transportProtocol, defaultOnHoldComfortNoiseEnabled, dtmfType, encodeContactHeaderEnabled, hashCodeNullable(encryptedMedia), microsoftTeamsSbc, onnetT38PassthroughEnabled, hashCodeNullable(iosPushCredentialId), hashCodeNullable(androidPushCredentialId), webhookEventUrl, hashCodeNullable(webhookEventFailoverUrl), webhookApiVersion, hashCodeNullable(webhookTimeoutSecs), rtcpSettings, inbound, outbound);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateFqdnConnectionRequest {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    anchorsiteOverride: ").append(toIndentedString(anchorsiteOverride)).append("\n");
    sb.append("    connectionName: ").append(toIndentedString(connectionName)).append("\n");
    sb.append("    transportProtocol: ").append(toIndentedString(transportProtocol)).append("\n");
    sb.append("    defaultOnHoldComfortNoiseEnabled: ").append(toIndentedString(defaultOnHoldComfortNoiseEnabled)).append("\n");
    sb.append("    dtmfType: ").append(toIndentedString(dtmfType)).append("\n");
    sb.append("    encodeContactHeaderEnabled: ").append(toIndentedString(encodeContactHeaderEnabled)).append("\n");
    sb.append("    encryptedMedia: ").append(toIndentedString(encryptedMedia)).append("\n");
    sb.append("    microsoftTeamsSbc: ").append(toIndentedString(microsoftTeamsSbc)).append("\n");
    sb.append("    onnetT38PassthroughEnabled: ").append(toIndentedString(onnetT38PassthroughEnabled)).append("\n");
    sb.append("    iosPushCredentialId: ").append(toIndentedString(iosPushCredentialId)).append("\n");
    sb.append("    androidPushCredentialId: ").append(toIndentedString(androidPushCredentialId)).append("\n");
    sb.append("    webhookEventUrl: ").append(toIndentedString(webhookEventUrl)).append("\n");
    sb.append("    webhookEventFailoverUrl: ").append(toIndentedString(webhookEventFailoverUrl)).append("\n");
    sb.append("    webhookApiVersion: ").append(toIndentedString(webhookApiVersion)).append("\n");
    sb.append("    webhookTimeoutSecs: ").append(toIndentedString(webhookTimeoutSecs)).append("\n");
    sb.append("    rtcpSettings: ").append(toIndentedString(rtcpSettings)).append("\n");
    sb.append("    inbound: ").append(toIndentedString(inbound)).append("\n");
    sb.append("    outbound: ").append(toIndentedString(outbound)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

