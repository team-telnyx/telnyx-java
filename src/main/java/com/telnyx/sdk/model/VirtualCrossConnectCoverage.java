/*
 * Telnyx API
 * Notifications and Notification Settings.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.Location;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * VirtualCrossConnectCoverage
 */
@JsonPropertyOrder({
  VirtualCrossConnectCoverage.JSON_PROPERTY_RECORD_TYPE,
  VirtualCrossConnectCoverage.JSON_PROPERTY_LOCATION,
  VirtualCrossConnectCoverage.JSON_PROPERTY_CLOUD_PROVIDER,
  VirtualCrossConnectCoverage.JSON_PROPERTY_CLOUD_PROVIDER_REGION,
  VirtualCrossConnectCoverage.JSON_PROPERTY_AVAILABLE_BANDWIDTH
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class VirtualCrossConnectCoverage {
  public static final String JSON_PROPERTY_RECORD_TYPE = "record_type";
  private String recordType;

  public static final String JSON_PROPERTY_LOCATION = "location";
  private Location location;

  /**
   * The Virtual Private Cloud with which you would like to establish a cross connect.
   */
  public enum CloudProviderEnum {
    AWS(String.valueOf("aws")),
    
    AZURE(String.valueOf("azure")),
    
    GCE(String.valueOf("gce"));

    private String value;

    CloudProviderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CloudProviderEnum fromValue(String value) {
      for (CloudProviderEnum b : CloudProviderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CLOUD_PROVIDER = "cloud_provider";
  private CloudProviderEnum cloudProvider;

  public static final String JSON_PROPERTY_CLOUD_PROVIDER_REGION = "cloud_provider_region";
  private String cloudProviderRegion;

  public static final String JSON_PROPERTY_AVAILABLE_BANDWIDTH = "available_bandwidth";
  private List<BigDecimal> availableBandwidth = null;

  public VirtualCrossConnectCoverage() { 
  }

  @JsonCreator
  public VirtualCrossConnectCoverage(
    @JsonProperty(JSON_PROPERTY_RECORD_TYPE) String recordType
  ) {
    this();
    this.recordType = recordType;
  }

   /**
   * Identifies the type of the resource.
   * @return recordType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "virtual_cross_connects_coverage", value = "Identifies the type of the resource.")
  @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecordType() {
    return recordType;
  }




  public VirtualCrossConnectCoverage location(Location location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Location getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(Location location) {
    this.location = location;
  }


  public VirtualCrossConnectCoverage cloudProvider(CloudProviderEnum cloudProvider) {
    this.cloudProvider = cloudProvider;
    return this;
  }

   /**
   * The Virtual Private Cloud with which you would like to establish a cross connect.
   * @return cloudProvider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "aws", value = "The Virtual Private Cloud with which you would like to establish a cross connect.")
  @JsonProperty(JSON_PROPERTY_CLOUD_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CloudProviderEnum getCloudProvider() {
    return cloudProvider;
  }


  @JsonProperty(JSON_PROPERTY_CLOUD_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCloudProvider(CloudProviderEnum cloudProvider) {
    this.cloudProvider = cloudProvider;
  }


  public VirtualCrossConnectCoverage cloudProviderRegion(String cloudProviderRegion) {
    this.cloudProviderRegion = cloudProviderRegion;
    return this;
  }

   /**
   * The region where your Virtual Private Cloud hosts are located. Should be identical to how the cloud provider names region, i.e. us-east-1 for AWS but Frankfurt for Azure
   * @return cloudProviderRegion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "us-east-1", value = "The region where your Virtual Private Cloud hosts are located. Should be identical to how the cloud provider names region, i.e. us-east-1 for AWS but Frankfurt for Azure")
  @JsonProperty(JSON_PROPERTY_CLOUD_PROVIDER_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCloudProviderRegion() {
    return cloudProviderRegion;
  }


  @JsonProperty(JSON_PROPERTY_CLOUD_PROVIDER_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCloudProviderRegion(String cloudProviderRegion) {
    this.cloudProviderRegion = cloudProviderRegion;
  }


  public VirtualCrossConnectCoverage availableBandwidth(List<BigDecimal> availableBandwidth) {
    this.availableBandwidth = availableBandwidth;
    return this;
  }

  public VirtualCrossConnectCoverage addavailableBandwidthItem(BigDecimal availableBandwidthItem) {
    if (this.availableBandwidth == null) {
      this.availableBandwidth = new ArrayList<>();
    }
    this.availableBandwidth.add(availableBandwidthItem);
    return this;
  }

   /**
   * The available throughput in Megabits per Second (Mbps) for your Virtual Cross Connect.
   * @return availableBandwidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[50,100,200,500]", value = "The available throughput in Megabits per Second (Mbps) for your Virtual Cross Connect.")
  @JsonProperty(JSON_PROPERTY_AVAILABLE_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<BigDecimal> getAvailableBandwidth() {
    return availableBandwidth;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_BANDWIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableBandwidth(List<BigDecimal> availableBandwidth) {
    this.availableBandwidth = availableBandwidth;
  }


  /**
   * Return true if this VirtualCrossConnectCoverage object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualCrossConnectCoverage virtualCrossConnectCoverage = (VirtualCrossConnectCoverage) o;
    return Objects.equals(this.recordType, virtualCrossConnectCoverage.recordType) &&
        Objects.equals(this.location, virtualCrossConnectCoverage.location) &&
        Objects.equals(this.cloudProvider, virtualCrossConnectCoverage.cloudProvider) &&
        Objects.equals(this.cloudProviderRegion, virtualCrossConnectCoverage.cloudProviderRegion) &&
        Objects.equals(this.availableBandwidth, virtualCrossConnectCoverage.availableBandwidth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recordType, location, cloudProvider, cloudProviderRegion, availableBandwidth);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualCrossConnectCoverage {\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    cloudProvider: ").append(toIndentedString(cloudProvider)).append("\n");
    sb.append("    cloudProviderRegion: ").append(toIndentedString(cloudProviderRegion)).append("\n");
    sb.append("    availableBandwidth: ").append(toIndentedString(availableBandwidth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

