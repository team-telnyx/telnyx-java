/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.telnyx.sdk.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.JSON;
import com.telnyx.sdk.model.EmbeddingMetadata;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.Arrays;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * Example document response from embedding service {   \&quot;document_chunk\&quot;: \&quot;your status? This is Vanessa Bloome...\&quot;,   \&quot;distance\&quot;: 0.18607724,   \&quot;metadata\&quot;: {     \&quot;source\&quot;: \&quot;https://us-central-1.telnyxstorage.com/scripts/bee_movie_script.txt\&quot;,     \&quot;checksum\&quot;: \&quot;343054dd19bab39bbf6761a3d20f1daa\&quot;,     \&quot;embedding\&quot;: \&quot;openai/text-embedding-ada-002\&quot;,     \&quot;filename\&quot;: \&quot;bee_movie_script.txt\&quot;,     \&quot;certainty\&quot;: 0.9069613814353943,     \&quot;loader_metadata\&quot;: {}   } }
 */
@ApiModel(
    description = "Example document response from embedding service {   \"document_chunk\": \"your status? This is Vanessa Bloome...\",   \"distance\": 0.18607724,   \"metadata\": {     \"source\": \"https://us-central-1.telnyxstorage.com/scripts/bee_movie_script.txt\",     \"checksum\": \"343054dd19bab39bbf6761a3d20f1daa\",     \"embedding\": \"openai/text-embedding-ada-002\",     \"filename\": \"bee_movie_script.txt\",     \"certainty\": 0.9069613814353943,     \"loader_metadata\": {}   } }"
)
@JsonPropertyOrder(
    {
        EmbeddingSimilaritySearchDocument.JSON_PROPERTY_DOCUMENT_CHUNK,
        EmbeddingSimilaritySearchDocument.JSON_PROPERTY_DISTANCE,
        EmbeddingSimilaritySearchDocument.JSON_PROPERTY_METADATA,
    }
)
@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.11.0"
)
public class EmbeddingSimilaritySearchDocument {

    public static final String JSON_PROPERTY_DOCUMENT_CHUNK = "document_chunk";
    private String documentChunk;

    public static final String JSON_PROPERTY_DISTANCE = "distance";
    private BigDecimal distance;

    public static final String JSON_PROPERTY_METADATA = "metadata";
    private EmbeddingMetadata metadata;

    public EmbeddingSimilaritySearchDocument() {}

    public EmbeddingSimilaritySearchDocument documentChunk(
        String documentChunk
    ) {
        this.documentChunk = documentChunk;
        return this;
    }

    /**
     * Get documentChunk
     * @return documentChunk
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_DOCUMENT_CHUNK)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getDocumentChunk() {
        return documentChunk;
    }

    @JsonProperty(JSON_PROPERTY_DOCUMENT_CHUNK)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDocumentChunk(String documentChunk) {
        this.documentChunk = documentChunk;
    }

    public EmbeddingSimilaritySearchDocument distance(BigDecimal distance) {
        this.distance = distance;
        return this;
    }

    /**
     * Get distance
     * @return distance
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_DISTANCE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public BigDecimal getDistance() {
        return distance;
    }

    @JsonProperty(JSON_PROPERTY_DISTANCE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDistance(BigDecimal distance) {
        this.distance = distance;
    }

    public EmbeddingSimilaritySearchDocument metadata(
        EmbeddingMetadata metadata
    ) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Get metadata
     * @return metadata
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_METADATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public EmbeddingMetadata getMetadata() {
        return metadata;
    }

    @JsonProperty(JSON_PROPERTY_METADATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setMetadata(EmbeddingMetadata metadata) {
        this.metadata = metadata;
    }

    /**
     * Return true if this EmbeddingSimilaritySearchDocument object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EmbeddingSimilaritySearchDocument embeddingSimilaritySearchDocument =
            (EmbeddingSimilaritySearchDocument) o;
        return (
            Objects.equals(
                this.documentChunk,
                embeddingSimilaritySearchDocument.documentChunk
            ) &&
            Objects.equals(
                this.distance,
                embeddingSimilaritySearchDocument.distance
            ) &&
            Objects.equals(
                this.metadata,
                embeddingSimilaritySearchDocument.metadata
            )
        );
    }

    @Override
    public int hashCode() {
        return Objects.hash(documentChunk, distance, metadata);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class EmbeddingSimilaritySearchDocument {\n");
        sb
            .append("    documentChunk: ")
            .append(toIndentedString(documentChunk))
            .append("\n");
        sb
            .append("    distance: ")
            .append(toIndentedString(distance))
            .append("\n");
        sb
            .append("    metadata: ")
            .append(toIndentedString(metadata))
            .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
