/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.telnyx.sdk.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.JSON;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Arrays;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.UUID;

/**
 * The logo to be used in the LOA.
 */
@ApiModel(description = "The logo to be used in the LOA.")
@JsonPropertyOrder(
    {
        PortingLOAConfigurationLogo.JSON_PROPERTY_DOCUMENT_ID,
        PortingLOAConfigurationLogo.JSON_PROPERTY_CONTENT_TYPE,
    }
)
@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.11.0"
)
public class PortingLOAConfigurationLogo {

    public static final String JSON_PROPERTY_DOCUMENT_ID = "document_id";
    private UUID documentId;

    /**
     * The content type of the logo.
     */
    public enum ContentTypeEnum {
        IMAGE_PNG(String.valueOf("image/png"));

        private String value;

        ContentTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ContentTypeEnum fromValue(String value) {
            for (ContentTypeEnum b : ContentTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException(
                "Unexpected value '" + value + "'"
            );
        }
    }

    public static final String JSON_PROPERTY_CONTENT_TYPE = "content_type";
    private ContentTypeEnum contentType;

    public PortingLOAConfigurationLogo() {}

    public PortingLOAConfigurationLogo documentId(UUID documentId) {
        this.documentId = documentId;
        return this;
    }

    /**
     * Identifies the document that contains the logo.
     * @return documentId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(
        example = "f1486bae-f067-460c-ad43-73a92848f902",
        value = "Identifies the document that contains the logo."
    )
    @JsonProperty(JSON_PROPERTY_DOCUMENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public UUID getDocumentId() {
        return documentId;
    }

    @JsonProperty(JSON_PROPERTY_DOCUMENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDocumentId(UUID documentId) {
        this.documentId = documentId;
    }

    public PortingLOAConfigurationLogo contentType(
        ContentTypeEnum contentType
    ) {
        this.contentType = contentType;
        return this;
    }

    /**
     * The content type of the logo.
     * @return contentType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(
        example = "image/png",
        value = "The content type of the logo."
    )
    @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ContentTypeEnum getContentType() {
        return contentType;
    }

    @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setContentType(ContentTypeEnum contentType) {
        this.contentType = contentType;
    }

    /**
     * Return true if this PortingLOAConfiguration_logo object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PortingLOAConfigurationLogo portingLOAConfigurationLogo =
            (PortingLOAConfigurationLogo) o;
        return (
            Objects.equals(
                this.documentId,
                portingLOAConfigurationLogo.documentId
            ) &&
            Objects.equals(
                this.contentType,
                portingLOAConfigurationLogo.contentType
            )
        );
    }

    @Override
    public int hashCode() {
        return Objects.hash(documentId, contentType);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PortingLOAConfigurationLogo {\n");
        sb
            .append("    documentId: ")
            .append(toIndentedString(documentId))
            .append("\n");
        sb
            .append("    contentType: ")
            .append(toIndentedString(contentType))
            .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
