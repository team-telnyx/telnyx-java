/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.telnyx.sdk.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.JSON;
import com.telnyx.sdk.model.RCSContentMessage;
import com.telnyx.sdk.model.RCSEvent;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * RCSAgentMessage
 */
@JsonPropertyOrder(
    {
        RCSAgentMessage.JSON_PROPERTY_CONTENT_MESSAGE,
        RCSAgentMessage.JSON_PROPERTY_EVENT,
        RCSAgentMessage.JSON_PROPERTY_EXPIRE_TIME,
        RCSAgentMessage.JSON_PROPERTY_TTL,
    }
)
@javax.annotation.Generated(
    value = "org.openapitools.codegen.languages.JavaClientCodegen",
    comments = "Generator version: 7.11.0"
)
public class RCSAgentMessage {

    public static final String JSON_PROPERTY_CONTENT_MESSAGE =
        "content_message";
    private RCSContentMessage contentMessage;

    public static final String JSON_PROPERTY_EVENT = "event";
    private RCSEvent event;

    public static final String JSON_PROPERTY_EXPIRE_TIME = "expire_time";
    private OffsetDateTime expireTime;

    public static final String JSON_PROPERTY_TTL = "ttl";
    private String ttl;

    public RCSAgentMessage() {}

    public RCSAgentMessage contentMessage(RCSContentMessage contentMessage) {
        this.contentMessage = contentMessage;
        return this;
    }

    /**
     * Get contentMessage
     * @return contentMessage
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CONTENT_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public RCSContentMessage getContentMessage() {
        return contentMessage;
    }

    @JsonProperty(JSON_PROPERTY_CONTENT_MESSAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setContentMessage(RCSContentMessage contentMessage) {
        this.contentMessage = contentMessage;
    }

    public RCSAgentMessage event(RCSEvent event) {
        this.event = event;
        return this;
    }

    /**
     * Get event
     * @return event
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_EVENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public RCSEvent getEvent() {
        return event;
    }

    @JsonProperty(JSON_PROPERTY_EVENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEvent(RCSEvent event) {
        this.event = event;
    }

    public RCSAgentMessage expireTime(OffsetDateTime expireTime) {
        this.expireTime = expireTime;
        return this;
    }

    /**
     * Timestamp in UTC of when this message is considered expired
     * @return expireTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(
        example = "2024-10-02T15:01:23Z",
        value = "Timestamp in UTC of when this message is considered expired"
    )
    @JsonProperty(JSON_PROPERTY_EXPIRE_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public OffsetDateTime getExpireTime() {
        return expireTime;
    }

    @JsonProperty(JSON_PROPERTY_EXPIRE_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExpireTime(OffsetDateTime expireTime) {
        this.expireTime = expireTime;
    }

    public RCSAgentMessage ttl(String ttl) {
        this.ttl = ttl;
        return this;
    }

    /**
     * Duration in seconds ending with &#39;s&#39;
     * @return ttl
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(
        example = "10.5s",
        value = "Duration in seconds ending with 's'"
    )
    @JsonProperty(JSON_PROPERTY_TTL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTtl() {
        return ttl;
    }

    @JsonProperty(JSON_PROPERTY_TTL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTtl(String ttl) {
        this.ttl = ttl;
    }

    /**
     * Return true if this RCSAgentMessage object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RCSAgentMessage rcSAgentMessage = (RCSAgentMessage) o;
        return (
            Objects.equals(
                this.contentMessage,
                rcSAgentMessage.contentMessage
            ) &&
            Objects.equals(this.event, rcSAgentMessage.event) &&
            Objects.equals(this.expireTime, rcSAgentMessage.expireTime) &&
            Objects.equals(this.ttl, rcSAgentMessage.ttl)
        );
    }

    @Override
    public int hashCode() {
        return Objects.hash(contentMessage, event, expireTime, ttl);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class RCSAgentMessage {\n");
        sb
            .append("    contentMessage: ")
            .append(toIndentedString(contentMessage))
            .append("\n");
        sb.append("    event: ").append(toIndentedString(event)).append("\n");
        sb
            .append("    expireTime: ")
            .append(toIndentedString(expireTime))
            .append("\n");
        sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
