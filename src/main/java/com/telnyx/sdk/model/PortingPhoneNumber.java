/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.PortabilityStatus;
import com.telnyx.sdk.model.PortingOrderActivationStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * PortingPhoneNumber
 */
@JsonPropertyOrder({
  PortingPhoneNumber.JSON_PROPERTY_PORTING_ORDER_STATUS,
  PortingPhoneNumber.JSON_PROPERTY_PHONE_NUMBER_TYPE,
  PortingPhoneNumber.JSON_PROPERTY_PHONE_NUMBER,
  PortingPhoneNumber.JSON_PROPERTY_PORTING_ORDER_ID,
  PortingPhoneNumber.JSON_PROPERTY_SUPPORT_KEY,
  PortingPhoneNumber.JSON_PROPERTY_ACTIVATION_STATUS,
  PortingPhoneNumber.JSON_PROPERTY_PORTABILITY_STATUS,
  PortingPhoneNumber.JSON_PROPERTY_REQUIREMENTS_STATUS,
  PortingPhoneNumber.JSON_PROPERTY_RECORD_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PortingPhoneNumber {
  /**
   * The current status of the porting order
   */
  public enum PortingOrderStatusEnum {
    DRAFT("draft"),
    
    IN_PROCESS("in-process"),
    
    SUBMITTED("submitted"),
    
    EXCEPTION("exception"),
    
    FOC_DATE_CONFIRMED("foc-date-confirmed"),
    
    CANCEL_PENDING("cancel-pending"),
    
    PORTED("ported"),
    
    CANCELLED("cancelled");

    private String value;

    PortingOrderStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PortingOrderStatusEnum fromValue(String value) {
      for (PortingOrderStatusEnum b : PortingOrderStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PORTING_ORDER_STATUS = "porting_order_status";
  private PortingOrderStatusEnum portingOrderStatus;

  /**
   * The type of the phone number
   */
  public enum PhoneNumberTypeEnum {
    LANDLINE("landline"),
    
    LOCAL("local"),
    
    MOBILE("mobile"),
    
    NATIONAL("national"),
    
    SHARED_COST("shared_cost"),
    
    TOLL_FREE("toll_free");

    private String value;

    PhoneNumberTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PhoneNumberTypeEnum fromValue(String value) {
      for (PhoneNumberTypeEnum b : PhoneNumberTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PHONE_NUMBER_TYPE = "phone_number_type";
  private PhoneNumberTypeEnum phoneNumberType;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phone_number";
  private String phoneNumber;

  public static final String JSON_PROPERTY_PORTING_ORDER_ID = "porting_order_id";
  private UUID portingOrderId;

  public static final String JSON_PROPERTY_SUPPORT_KEY = "support_key";
  private String supportKey;

  public static final String JSON_PROPERTY_ACTIVATION_STATUS = "activation_status";
  private PortingOrderActivationStatus activationStatus;

  public static final String JSON_PROPERTY_PORTABILITY_STATUS = "portability_status";
  private PortabilityStatus portabilityStatus;

  /**
   * The current status of the requirements in a INTL porting order
   */
  public enum RequirementsStatusEnum {
    REQUIREMENT_INFO_PENDING("requirement-info-pending"),
    
    REQUIREMENT_INFO_UNDER_REVIEW("requirement-info-under-review"),
    
    REQUIREMENT_INFO_EXCEPTION("requirement-info-exception"),
    
    APPROVED("approved");

    private String value;

    RequirementsStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RequirementsStatusEnum fromValue(String value) {
      for (RequirementsStatusEnum b : RequirementsStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REQUIREMENTS_STATUS = "requirements_status";
  private RequirementsStatusEnum requirementsStatus;

  public static final String JSON_PROPERTY_RECORD_TYPE = "record_type";
  private String recordType;

  public PortingPhoneNumber() { 
  }

  @JsonCreator
  public PortingPhoneNumber(
    @JsonProperty(JSON_PROPERTY_RECORD_TYPE) String recordType
  ) {
    this();
    this.recordType = recordType;
  }

  public PortingPhoneNumber portingOrderStatus(PortingOrderStatusEnum portingOrderStatus) {
    this.portingOrderStatus = portingOrderStatus;
    return this;
  }

   /**
   * The current status of the porting order
   * @return portingOrderStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "in-process", value = "The current status of the porting order")
  @JsonProperty(JSON_PROPERTY_PORTING_ORDER_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PortingOrderStatusEnum getPortingOrderStatus() {
    return portingOrderStatus;
  }


  @JsonProperty(JSON_PROPERTY_PORTING_ORDER_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortingOrderStatus(PortingOrderStatusEnum portingOrderStatus) {
    this.portingOrderStatus = portingOrderStatus;
  }


  public PortingPhoneNumber phoneNumberType(PhoneNumberTypeEnum phoneNumberType) {
    this.phoneNumberType = phoneNumberType;
    return this;
  }

   /**
   * The type of the phone number
   * @return phoneNumberType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "local", value = "The type of the phone number")
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PhoneNumberTypeEnum getPhoneNumberType() {
    return phoneNumberType;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumberType(PhoneNumberTypeEnum phoneNumberType) {
    this.phoneNumberType = phoneNumberType;
  }


  public PortingPhoneNumber phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * E164 formatted phone number
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "13035550987", value = "E164 formatted phone number")
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public PortingPhoneNumber portingOrderId(UUID portingOrderId) {
    this.portingOrderId = portingOrderId;
    return this;
  }

   /**
   * Identifies the associated port request
   * @return portingOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "f1486bae-f067-460c-ad43-73a92848f902", value = "Identifies the associated port request")
  @JsonProperty(JSON_PROPERTY_PORTING_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getPortingOrderId() {
    return portingOrderId;
  }


  @JsonProperty(JSON_PROPERTY_PORTING_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortingOrderId(UUID portingOrderId) {
    this.portingOrderId = portingOrderId;
  }


  public PortingPhoneNumber supportKey(String supportKey) {
    this.supportKey = supportKey;
    return this;
  }

   /**
   * A key to reference this porting order when contacting Telnyx customer support
   * @return supportKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "sr_a12345", value = "A key to reference this porting order when contacting Telnyx customer support")
  @JsonProperty(JSON_PROPERTY_SUPPORT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSupportKey() {
    return supportKey;
  }


  @JsonProperty(JSON_PROPERTY_SUPPORT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportKey(String supportKey) {
    this.supportKey = supportKey;
  }


  public PortingPhoneNumber activationStatus(PortingOrderActivationStatus activationStatus) {
    this.activationStatus = activationStatus;
    return this;
  }

   /**
   * Get activationStatus
   * @return activationStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACTIVATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PortingOrderActivationStatus getActivationStatus() {
    return activationStatus;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVATION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActivationStatus(PortingOrderActivationStatus activationStatus) {
    this.activationStatus = activationStatus;
  }


  public PortingPhoneNumber portabilityStatus(PortabilityStatus portabilityStatus) {
    this.portabilityStatus = portabilityStatus;
    return this;
  }

   /**
   * Get portabilityStatus
   * @return portabilityStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PORTABILITY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PortabilityStatus getPortabilityStatus() {
    return portabilityStatus;
  }


  @JsonProperty(JSON_PROPERTY_PORTABILITY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPortabilityStatus(PortabilityStatus portabilityStatus) {
    this.portabilityStatus = portabilityStatus;
  }


  public PortingPhoneNumber requirementsStatus(RequirementsStatusEnum requirementsStatus) {
    this.requirementsStatus = requirementsStatus;
    return this;
  }

   /**
   * The current status of the requirements in a INTL porting order
   * @return requirementsStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "approved", value = "The current status of the requirements in a INTL porting order")
  @JsonProperty(JSON_PROPERTY_REQUIREMENTS_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RequirementsStatusEnum getRequirementsStatus() {
    return requirementsStatus;
  }


  @JsonProperty(JSON_PROPERTY_REQUIREMENTS_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequirementsStatus(RequirementsStatusEnum requirementsStatus) {
    this.requirementsStatus = requirementsStatus;
  }


   /**
   * Identifies the type of the resource.
   * @return recordType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "porting_phone_number", value = "Identifies the type of the resource.")
  @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecordType() {
    return recordType;
  }




  /**
   * Return true if this PortingPhoneNumber object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortingPhoneNumber portingPhoneNumber = (PortingPhoneNumber) o;
    return Objects.equals(this.portingOrderStatus, portingPhoneNumber.portingOrderStatus) &&
        Objects.equals(this.phoneNumberType, portingPhoneNumber.phoneNumberType) &&
        Objects.equals(this.phoneNumber, portingPhoneNumber.phoneNumber) &&
        Objects.equals(this.portingOrderId, portingPhoneNumber.portingOrderId) &&
        Objects.equals(this.supportKey, portingPhoneNumber.supportKey) &&
        Objects.equals(this.activationStatus, portingPhoneNumber.activationStatus) &&
        Objects.equals(this.portabilityStatus, portingPhoneNumber.portabilityStatus) &&
        Objects.equals(this.requirementsStatus, portingPhoneNumber.requirementsStatus) &&
        Objects.equals(this.recordType, portingPhoneNumber.recordType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portingOrderStatus, phoneNumberType, phoneNumber, portingOrderId, supportKey, activationStatus, portabilityStatus, requirementsStatus, recordType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortingPhoneNumber {\n");
    sb.append("    portingOrderStatus: ").append(toIndentedString(portingOrderStatus)).append("\n");
    sb.append("    phoneNumberType: ").append(toIndentedString(phoneNumberType)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    portingOrderId: ").append(toIndentedString(portingOrderId)).append("\n");
    sb.append("    supportKey: ").append(toIndentedString(supportKey)).append("\n");
    sb.append("    activationStatus: ").append(toIndentedString(activationStatus)).append("\n");
    sb.append("    portabilityStatus: ").append(toIndentedString(portabilityStatus)).append("\n");
    sb.append("    requirementsStatus: ").append(toIndentedString(requirementsStatus)).append("\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

