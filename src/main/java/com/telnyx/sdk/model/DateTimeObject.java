/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.DateTimeComponent;
import com.telnyx.sdk.model.DateTimeUnixEpoch;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * The WhatsApp Business API Client will attempt to format the date/time based on a specified localization.
 */
@ApiModel(description = "The WhatsApp Business API Client will attempt to format the date/time based on a specified localization.")
@JsonPropertyOrder({
  DateTimeObject.JSON_PROPERTY_COMPONENT,
  DateTimeObject.JSON_PROPERTY_UNIX_EPOCH
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DateTimeObject {
  public static final String JSON_PROPERTY_COMPONENT = "component";
  private DateTimeComponent component;

  public static final String JSON_PROPERTY_UNIX_EPOCH = "unix_epoch";
  private DateTimeUnixEpoch unixEpoch;

  public DateTimeObject() { 
  }

  public DateTimeObject component(DateTimeComponent component) {
    this.component = component;
    return this;
  }

   /**
   * Get component
   * @return component
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMPONENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTimeComponent getComponent() {
    return component;
  }


  @JsonProperty(JSON_PROPERTY_COMPONENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComponent(DateTimeComponent component) {
    this.component = component;
  }


  public DateTimeObject unixEpoch(DateTimeUnixEpoch unixEpoch) {
    this.unixEpoch = unixEpoch;
    return this;
  }

   /**
   * Get unixEpoch
   * @return unixEpoch
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_UNIX_EPOCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DateTimeUnixEpoch getUnixEpoch() {
    return unixEpoch;
  }


  @JsonProperty(JSON_PROPERTY_UNIX_EPOCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnixEpoch(DateTimeUnixEpoch unixEpoch) {
    this.unixEpoch = unixEpoch;
  }


  /**
   * Return true if this DateTimeObject object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DateTimeObject dateTimeObject = (DateTimeObject) o;
    return Objects.equals(this.component, dateTimeObject.component) &&
        Objects.equals(this.unixEpoch, dateTimeObject.unixEpoch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(component, unixEpoch);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DateTimeObject {\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    unixEpoch: ").append(toIndentedString(unixEpoch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

