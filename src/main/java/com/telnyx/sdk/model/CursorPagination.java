/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.CursorPaginationCursors;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * CursorPagination
 */
@JsonPropertyOrder({
  CursorPagination.JSON_PROPERTY_CURSORS,
  CursorPagination.JSON_PROPERTY_NEXT,
  CursorPagination.JSON_PROPERTY_PREVIOUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CursorPagination {
  public static final String JSON_PROPERTY_CURSORS = "cursors";
  private CursorPaginationCursors cursors;

  public static final String JSON_PROPERTY_NEXT = "next";
  private String next;

  public static final String JSON_PROPERTY_PREVIOUS = "previous";
  private String previous;

  public CursorPagination() { 
  }

  public CursorPagination cursors(CursorPaginationCursors cursors) {
    this.cursors = cursors;
    return this;
  }

   /**
   * Get cursors
   * @return cursors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURSORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CursorPaginationCursors getCursors() {
    return cursors;
  }


  @JsonProperty(JSON_PROPERTY_CURSORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCursors(CursorPaginationCursors cursors) {
    this.cursors = cursors;
  }


  public CursorPagination next(String next) {
    this.next = next;
    return this;
  }

   /**
   * A URL to the next page of results.
   * @return next
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A URL to the next page of results.")
  @JsonProperty(JSON_PROPERTY_NEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNext() {
    return next;
  }


  @JsonProperty(JSON_PROPERTY_NEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNext(String next) {
    this.next = next;
  }


  public CursorPagination previous(String previous) {
    this.previous = previous;
    return this;
  }

   /**
   * A URL to the previous page of results.
   * @return previous
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A URL to the previous page of results.")
  @JsonProperty(JSON_PROPERTY_PREVIOUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrevious() {
    return previous;
  }


  @JsonProperty(JSON_PROPERTY_PREVIOUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrevious(String previous) {
    this.previous = previous;
  }


  /**
   * Return true if this CursorPagination object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CursorPagination cursorPagination = (CursorPagination) o;
    return Objects.equals(this.cursors, cursorPagination.cursors) &&
        Objects.equals(this.next, cursorPagination.next) &&
        Objects.equals(this.previous, cursorPagination.previous);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cursors, next, previous);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CursorPagination {\n");
    sb.append("    cursors: ").append(toIndentedString(cursors)).append("\n");
    sb.append("    next: ").append(toIndentedString(next)).append("\n");
    sb.append("    previous: ").append(toIndentedString(previous)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

