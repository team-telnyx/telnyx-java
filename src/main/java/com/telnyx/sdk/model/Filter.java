/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.telnyx.sdk.JSON;


/**
 * Filter
 */
@JsonPropertyOrder({
  Filter.JSON_PROPERTY_FILTER_TYPE,
  Filter.JSON_PROPERTY_CLI,
  Filter.JSON_PROPERTY_CLI_FILTER,
  Filter.JSON_PROPERTY_CLD,
  Filter.JSON_PROPERTY_CLD_FILTER,
  Filter.JSON_PROPERTY_TAGS_LIST,
  Filter.JSON_PROPERTY_BILLING_GROUP
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class Filter {
  /**
   * Gets or Sets filterType
   */
  public enum FilterTypeEnum {
    AND("and"),
    
    OR("or");

    private String value;

    FilterTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FilterTypeEnum fromValue(String value) {
      for (FilterTypeEnum b : FilterTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FILTER_TYPE = "filter_type";
  private FilterTypeEnum filterType;

  public static final String JSON_PROPERTY_CLI = "cli";
  private String cli;

  /**
   * Gets or Sets cliFilter
   */
  public enum CliFilterEnum {
    CONTAINS("contains"),
    
    STARTS_WITH("starts_with"),
    
    ENDS_WITH("ends_with");

    private String value;

    CliFilterEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CliFilterEnum fromValue(String value) {
      for (CliFilterEnum b : CliFilterEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CLI_FILTER = "cli_filter";
  private CliFilterEnum cliFilter;

  public static final String JSON_PROPERTY_CLD = "cld";
  private String cld;

  /**
   * Gets or Sets cldFilter
   */
  public enum CldFilterEnum {
    CONTAINS("contains"),
    
    STARTS_WITH("starts_with"),
    
    ENDS_WITH("ends_with");

    private String value;

    CldFilterEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CldFilterEnum fromValue(String value) {
      for (CldFilterEnum b : CldFilterEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CLD_FILTER = "cld_filter";
  private CldFilterEnum cldFilter;

  public static final String JSON_PROPERTY_TAGS_LIST = "tags_list";
  private String tagsList;

  public static final String JSON_PROPERTY_BILLING_GROUP = "billing_group";
  private String billingGroup;

  public Filter() { 
  }

  public Filter filterType(FilterTypeEnum filterType) {
    this.filterType = filterType;
    return this;
  }

   /**
   * Get filterType
   * @return filterType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FILTER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FilterTypeEnum getFilterType() {
    return filterType;
  }


  @JsonProperty(JSON_PROPERTY_FILTER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterType(FilterTypeEnum filterType) {
    this.filterType = filterType;
  }


  public Filter cli(String cli) {
    this.cli = cli;
    return this;
  }

   /**
   * Get cli
   * @return cli
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+13129457420", value = "")
  @JsonProperty(JSON_PROPERTY_CLI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCli() {
    return cli;
  }


  @JsonProperty(JSON_PROPERTY_CLI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCli(String cli) {
    this.cli = cli;
  }


  public Filter cliFilter(CliFilterEnum cliFilter) {
    this.cliFilter = cliFilter;
    return this;
  }

   /**
   * Get cliFilter
   * @return cliFilter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CLI_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CliFilterEnum getCliFilter() {
    return cliFilter;
  }


  @JsonProperty(JSON_PROPERTY_CLI_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCliFilter(CliFilterEnum cliFilter) {
    this.cliFilter = cliFilter;
  }


  public Filter cld(String cld) {
    this.cld = cld;
    return this;
  }

   /**
   * Get cld
   * @return cld
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+13129457420", value = "")
  @JsonProperty(JSON_PROPERTY_CLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCld() {
    return cld;
  }


  @JsonProperty(JSON_PROPERTY_CLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCld(String cld) {
    this.cld = cld;
  }


  public Filter cldFilter(CldFilterEnum cldFilter) {
    this.cldFilter = cldFilter;
    return this;
  }

   /**
   * Get cldFilter
   * @return cldFilter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CLD_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CldFilterEnum getCldFilter() {
    return cldFilter;
  }


  @JsonProperty(JSON_PROPERTY_CLD_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCldFilter(CldFilterEnum cldFilter) {
    this.cldFilter = cldFilter;
  }


  public Filter tagsList(String tagsList) {
    this.tagsList = tagsList;
    return this;
  }

   /**
   * Get tagsList
   * @return tagsList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "tag1", value = "")
  @JsonProperty(JSON_PROPERTY_TAGS_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTagsList() {
    return tagsList;
  }


  @JsonProperty(JSON_PROPERTY_TAGS_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTagsList(String tagsList) {
    this.tagsList = tagsList;
  }


  public Filter billingGroup(String billingGroup) {
    this.billingGroup = billingGroup;
    return this;
  }

   /**
   * Get billingGroup
   * @return billingGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "adfaa016-f921-4b6c-97bb-e4c1dad231c5", value = "")
  @JsonProperty(JSON_PROPERTY_BILLING_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBillingGroup() {
    return billingGroup;
  }


  @JsonProperty(JSON_PROPERTY_BILLING_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillingGroup(String billingGroup) {
    this.billingGroup = billingGroup;
  }


  /**
   * Return true if this Filter object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Filter filter = (Filter) o;
    return Objects.equals(this.filterType, filter.filterType) &&
        Objects.equals(this.cli, filter.cli) &&
        Objects.equals(this.cliFilter, filter.cliFilter) &&
        Objects.equals(this.cld, filter.cld) &&
        Objects.equals(this.cldFilter, filter.cldFilter) &&
        Objects.equals(this.tagsList, filter.tagsList) &&
        Objects.equals(this.billingGroup, filter.billingGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filterType, cli, cliFilter, cld, cldFilter, tagsList, billingGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Filter {\n");
    sb.append("    filterType: ").append(toIndentedString(filterType)).append("\n");
    sb.append("    cli: ").append(toIndentedString(cli)).append("\n");
    sb.append("    cliFilter: ").append(toIndentedString(cliFilter)).append("\n");
    sb.append("    cld: ").append(toIndentedString(cld)).append("\n");
    sb.append("    cldFilter: ").append(toIndentedString(cldFilter)).append("\n");
    sb.append("    tagsList: ").append(toIndentedString(tagsList)).append("\n");
    sb.append("    billingGroup: ").append(toIndentedString(billingGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

