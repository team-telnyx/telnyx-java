/*
 * Telnyx 10DLC API
 * # Overview The Telnyx 10DLC API facilitates interaction with The Campaign Registry (TCR), allowing the creation and registration of brands and campaigns with TCR.  # API Interaction ## Request Authorization Telnyx 10DLC API endpoints require authorization for each request. To properly authorize requests, send an Authorization header with `Bearer ` plus your Telnyx API key as the value. See the following curl request for example usage:  ```sh curl --location --request GET 'https://api.telnyx.com/10dlc/example/endpoint' \\  --header 'Authorization: Bearer YOUR_API_KEY_GOES_HERE' \\  --data-raw '' ```  You can obtain your API key by logging into your <a href=\"https://portal.telnyx.com\">Telnyx portal account</a> and clicking the \"API Keys\" tab. From there, you can copy your desired API key for use in your requests, similar to the above example curl request.  ## The 10DLC Work Flow 1. Create a brand  2. Apply for brand vetting  3. Create a campaign or campaigns (associated with the created brand)  4. Assign a phone number or phone numbers to the created campaign ## 10DLC Costs **Brands:** 1. Brand registration: $4 one time charge  2.  Brand vetting: $40 one time charge  **Campaigns:**  1. Campaign registration T-Mobile: $50 one time charge  2. Campaign creation: first 3 month's charge upfront. After the first 3 months, this charge will change to a once a month recurring charge (see charge values below, based on campaign use case)     a. Charity Campaign Use Case: $15 upfront (first 3 months), and $5 month to month after     b. Low Mixed Volume Campaign Use Case: $6 upfront (first 3 months), and $2 month to month after     c. Any Other Campaign Use Case: $30 upfront (first 3 months), and $10 month to month after 3. Phone number to campaign assignment: $0.03 one time charge for each assignment  ## Frequently Asked Questions For frequently asked questions, visit <a href=\"https://support.telnyx.com/en/articles/3679260-frequently-asked-questions-about-10dlc\">Telnyx 10DLC FAQs</a>.
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.TFPhoneNumber;
import com.telnyx.sdk.model.TFVerificationStatus;
import com.telnyx.sdk.model.Url;
import com.telnyx.sdk.model.UseCaseCategories;
import com.telnyx.sdk.model.Volume;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;



import org.junit.Test;

/**
 * Model tests for VerificationRequestStatus
 */
public class VerificationRequestStatusTest {
    private final VerificationRequestStatus model = new VerificationRequestStatus();

    /**
     * Model tests for VerificationRequestStatus
     */
    @Test
    public void testVerificationRequestStatus() {
        // TODO: test VerificationRequestStatus
    }

    /**
     * Test the property 'businessName'
     */
    @Test
    public void businessNameTest() {
        // TODO: test businessName
    }

    /**
     * Test the property 'corporateWebsite'
     */
    @Test
    public void corporateWebsiteTest() {
        // TODO: test corporateWebsite
    }

    /**
     * Test the property 'businessAddr1'
     */
    @Test
    public void businessAddr1Test() {
        // TODO: test businessAddr1
    }

    /**
     * Test the property 'businessAddr2'
     */
    @Test
    public void businessAddr2Test() {
        // TODO: test businessAddr2
    }

    /**
     * Test the property 'businessCity'
     */
    @Test
    public void businessCityTest() {
        // TODO: test businessCity
    }

    /**
     * Test the property 'businessState'
     */
    @Test
    public void businessStateTest() {
        // TODO: test businessState
    }

    /**
     * Test the property 'businessZip'
     */
    @Test
    public void businessZipTest() {
        // TODO: test businessZip
    }

    /**
     * Test the property 'businessContactFirstName'
     */
    @Test
    public void businessContactFirstNameTest() {
        // TODO: test businessContactFirstName
    }

    /**
     * Test the property 'businessContactLastName'
     */
    @Test
    public void businessContactLastNameTest() {
        // TODO: test businessContactLastName
    }

    /**
     * Test the property 'businessContactEmail'
     */
    @Test
    public void businessContactEmailTest() {
        // TODO: test businessContactEmail
    }

    /**
     * Test the property 'businessContactPhone'
     */
    @Test
    public void businessContactPhoneTest() {
        // TODO: test businessContactPhone
    }

    /**
     * Test the property 'messageVolume'
     */
    @Test
    public void messageVolumeTest() {
        // TODO: test messageVolume
    }

    /**
     * Test the property 'phoneNumbers'
     */
    @Test
    public void phoneNumbersTest() {
        // TODO: test phoneNumbers
    }

    /**
     * Test the property 'useCase'
     */
    @Test
    public void useCaseTest() {
        // TODO: test useCase
    }

    /**
     * Test the property 'useCaseSummary'
     */
    @Test
    public void useCaseSummaryTest() {
        // TODO: test useCaseSummary
    }

    /**
     * Test the property 'productionMessageContent'
     */
    @Test
    public void productionMessageContentTest() {
        // TODO: test productionMessageContent
    }

    /**
     * Test the property 'optInWorkflow'
     */
    @Test
    public void optInWorkflowTest() {
        // TODO: test optInWorkflow
    }

    /**
     * Test the property 'optInWorkflowImageURLs'
     */
    @Test
    public void optInWorkflowImageURLsTest() {
        // TODO: test optInWorkflowImageURLs
    }

    /**
     * Test the property 'additionalInformation'
     */
    @Test
    public void additionalInformationTest() {
        // TODO: test additionalInformation
    }

    /**
     * Test the property 'isvReseller'
     */
    @Test
    public void isvResellerTest() {
        // TODO: test isvReseller
    }

    /**
     * Test the property 'webhookUrl'
     */
    @Test
    public void webhookUrlTest() {
        // TODO: test webhookUrl
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'verificationStatus'
     */
    @Test
    public void verificationStatusTest() {
        // TODO: test verificationStatus
    }

    /**
     * Test the property 'reason'
     */
    @Test
    public void reasonTest() {
        // TODO: test reason
    }

}
