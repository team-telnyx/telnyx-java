/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.AnchorsiteOverride;
import com.telnyx.sdk.model.ConnectionRtcpSettings;
import com.telnyx.sdk.model.CreateInboundIpRequest;
import com.telnyx.sdk.model.DtmfType;
import com.telnyx.sdk.model.EncryptedMedia;
import com.telnyx.sdk.model.OutboundIp;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CreateIpConnectionRequest
 */
public class CreateIpConnectionRequestTest {
    private final CreateIpConnectionRequest model = new CreateIpConnectionRequest();

    /**
     * Model tests for CreateIpConnectionRequest
     */
    @Test
    public void testCreateIpConnectionRequest() {
        // TODO: test CreateIpConnectionRequest
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'anchorsiteOverride'
     */
    @Test
    public void anchorsiteOverrideTest() {
        // TODO: test anchorsiteOverride
    }

    /**
     * Test the property 'connectionName'
     */
    @Test
    public void connectionNameTest() {
        // TODO: test connectionName
    }

    /**
     * Test the property 'transportProtocol'
     */
    @Test
    public void transportProtocolTest() {
        // TODO: test transportProtocol
    }

    /**
     * Test the property 'defaultOnHoldComfortNoiseEnabled'
     */
    @Test
    public void defaultOnHoldComfortNoiseEnabledTest() {
        // TODO: test defaultOnHoldComfortNoiseEnabled
    }

    /**
     * Test the property 'dtmfType'
     */
    @Test
    public void dtmfTypeTest() {
        // TODO: test dtmfType
    }

    /**
     * Test the property 'encodeContactHeaderEnabled'
     */
    @Test
    public void encodeContactHeaderEnabledTest() {
        // TODO: test encodeContactHeaderEnabled
    }

    /**
     * Test the property 'encryptedMedia'
     */
    @Test
    public void encryptedMediaTest() {
        // TODO: test encryptedMedia
    }

    /**
     * Test the property 'onnetT38PassthroughEnabled'
     */
    @Test
    public void onnetT38PassthroughEnabledTest() {
        // TODO: test onnetT38PassthroughEnabled
    }

    /**
     * Test the property 'webhookEventUrl'
     */
    @Test
    public void webhookEventUrlTest() {
        // TODO: test webhookEventUrl
    }

    /**
     * Test the property 'webhookEventFailoverUrl'
     */
    @Test
    public void webhookEventFailoverUrlTest() {
        // TODO: test webhookEventFailoverUrl
    }

    /**
     * Test the property 'webhookApiVersion'
     */
    @Test
    public void webhookApiVersionTest() {
        // TODO: test webhookApiVersion
    }

    /**
     * Test the property 'webhookTimeoutSecs'
     */
    @Test
    public void webhookTimeoutSecsTest() {
        // TODO: test webhookTimeoutSecs
    }

    /**
     * Test the property 'rtcpSettings'
     */
    @Test
    public void rtcpSettingsTest() {
        // TODO: test rtcpSettings
    }

    /**
     * Test the property 'inbound'
     */
    @Test
    public void inboundTest() {
        // TODO: test inbound
    }

    /**
     * Test the property 'outbound'
     */
    @Test
    public void outboundTest() {
        // TODO: test outbound
    }

}
