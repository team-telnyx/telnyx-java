/*
 * Telnyx 10DLC API
 * # Overview The Telnyx 10DLC API facilitates interaction with The Campaign Registry (TCR), allowing the creation and registration of brands and campaigns with TCR.  # API Interaction ## Request Authorization Telnyx 10DLC API endpoints require authorization for each request. To properly authorize requests, send an Authorization header with `Bearer ` plus your Telnyx API key as the value. See the following curl request for example usage:  ```sh curl --location --request GET 'https://api.telnyx.com/10dlc/example/endpoint' \\  --header 'Authorization: Bearer YOUR_API_KEY_GOES_HERE' \\  --data-raw '' ```  You can obtain your API key by logging into your <a href=\"https://portal.telnyx.com\">Telnyx portal account</a> and clicking the \"API Keys\" tab. From there, you can copy your desired API key for use in your requests, similar to the above example curl request.  ## The 10DLC Work Flow 1. Create a brand  2. Apply for brand vetting  3. Create a campaign or campaigns (associated with the created brand)  4. Assign a phone number or phone numbers to the created campaign ## 10DLC Costs **Brands:** 1. Brand registration: $4 one time charge  2.  Brand vetting: $40 one time charge  **Campaigns:**  1. Campaign registration T-Mobile: $50 one time charge  2. Campaign creation: first 3 month's charge upfront. After the first 3 months, this charge will change to a once a month recurring charge (see charge values below, based on campaign use case)     a. Charity Campaign Use Case: $15 upfront (first 3 months), and $5 month to month after     b. Low Mixed Volume Campaign Use Case: $6 upfront (first 3 months), and $2 month to month after     c. Any Other Campaign Use Case: $30 upfront (first 3 months), and $10 month to month after 3. Phone number to campaign assignment: $0.03 one time charge for each assignment  ## Frequently Asked Questions For frequently asked questions, visit <a href=\"https://support.telnyx.com/en/articles/3679260-frequently-asked-questions-about-10dlc\">Telnyx 10DLC FAQs</a>.
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;



import org.junit.Test;

/**
 * Model tests for SlimPhoneNumberDetailed
 */
public class SlimPhoneNumberDetailedTest {
    private final SlimPhoneNumberDetailed model = new SlimPhoneNumberDetailed();

    /**
     * Model tests for SlimPhoneNumberDetailed
     */
    @Test
    public void testSlimPhoneNumberDetailed() {
        // TODO: test SlimPhoneNumberDetailed
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'recordType'
     */
    @Test
    public void recordTypeTest() {
        // TODO: test recordType
    }

    /**
     * Test the property 'phoneNumber'
     */
    @Test
    public void phoneNumberTest() {
        // TODO: test phoneNumber
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'externalPin'
     */
    @Test
    public void externalPinTest() {
        // TODO: test externalPin
    }

    /**
     * Test the property 'connectionId'
     */
    @Test
    public void connectionIdTest() {
        // TODO: test connectionId
    }

    /**
     * Test the property 'customerReference'
     */
    @Test
    public void customerReferenceTest() {
        // TODO: test customerReference
    }

    /**
     * Test the property 'billingGroupId'
     */
    @Test
    public void billingGroupIdTest() {
        // TODO: test billingGroupId
    }

    /**
     * Test the property 'emergencyEnabled'
     */
    @Test
    public void emergencyEnabledTest() {
        // TODO: test emergencyEnabled
    }

    /**
     * Test the property 'emergencyAddressId'
     */
    @Test
    public void emergencyAddressIdTest() {
        // TODO: test emergencyAddressId
    }

    /**
     * Test the property 'callForwardingEnabled'
     */
    @Test
    public void callForwardingEnabledTest() {
        // TODO: test callForwardingEnabled
    }

    /**
     * Test the property 'cnamListingEnabled'
     */
    @Test
    public void cnamListingEnabledTest() {
        // TODO: test cnamListingEnabled
    }

    /**
     * Test the property 'callerIdNameEnabled'
     */
    @Test
    public void callerIdNameEnabledTest() {
        // TODO: test callerIdNameEnabled
    }

    /**
     * Test the property 'callRecordingEnabled'
     */
    @Test
    public void callRecordingEnabledTest() {
        // TODO: test callRecordingEnabled
    }

    /**
     * Test the property 't38FaxGatewayEnabled'
     */
    @Test
    public void t38FaxGatewayEnabledTest() {
        // TODO: test t38FaxGatewayEnabled
    }

    /**
     * Test the property 'purchasedAt'
     */
    @Test
    public void purchasedAtTest() {
        // TODO: test purchasedAt
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'numberLevelRouting'
     */
    @Test
    public void numberLevelRoutingTest() {
        // TODO: test numberLevelRouting
    }

    /**
     * Test the property 'phoneNumberType'
     */
    @Test
    public void phoneNumberTypeTest() {
        // TODO: test phoneNumberType
    }

    /**
     * Test the property 'inboundCallScreening'
     */
    @Test
    public void inboundCallScreeningTest() {
        // TODO: test inboundCallScreening
    }

}
