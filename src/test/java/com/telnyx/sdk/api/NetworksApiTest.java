/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.Errors;
import com.telnyx.sdk.model.InterfaceStatus;
import com.telnyx.sdk.model.NetworkCreate;
import com.telnyx.sdk.model.NetworkCreate200Response;
import com.telnyx.sdk.model.NetworkInterfaceList200Response;
import com.telnyx.sdk.model.NetworkList200Response;
import java.util.UUID;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NetworksApi
 */
public class NetworksApiTest {

    private final NetworksApi api = new NetworksApi();

    /**
     * Create a Network
     *
     * Create a new Network.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void networkCreateTest() throws ApiException {
        //NetworkCreate networkCreate = null;
        //NetworkCreate200Response response = api.networkCreate(networkCreate);
        // TODO: test validations
    }

    /**
     * Delete a Network
     *
     * Delete a Network.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void networkDeleteTest() throws ApiException {
        //UUID id = null;
        //NetworkCreate200Response response = api.networkDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieve a Network
     *
     * Retrieve a Network.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void networkGetTest() throws ApiException {
        //UUID id = null;
        //NetworkCreate200Response response = api.networkGet(id);
        // TODO: test validations
    }

    /**
     * List all Interfaces for a Network.
     *
     * List all Interfaces for a Network.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void networkInterfaceListTest() throws ApiException {
        //UUID id = null;
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //String filterName = null;
        //String filterType = null;
        //InterfaceStatus filterStatus = null;
        //NetworkInterfaceList200Response response = api.networkInterfaceList(id, pageNumber, pageSize, filterName, filterType, filterStatus);
        // TODO: test validations
    }

    /**
     * List all Networks
     *
     * List all Networks.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void networkListTest() throws ApiException {
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //String filterName = null;
        //NetworkList200Response response = api.networkList(pageNumber, pageSize, filterName);
        // TODO: test validations
    }

    /**
     * Update a Network
     *
     * Update a Network.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void networkUpdateTest() throws ApiException {
        //UUID id = null;
        //NetworkCreate networkCreate = null;
        //NetworkCreate200Response response = api.networkUpdate(id, networkCreate);
        // TODO: test validations
    }

}
