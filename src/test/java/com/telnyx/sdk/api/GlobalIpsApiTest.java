/*
 * Telnyx 10DLC API
 * # Overview The Telnyx 10DLC API facilitates interaction with The Campaign Registry (TCR), allowing the creation and registration of brands and campaigns with TCR.  # API Interaction ## Request Authorization Telnyx 10DLC API endpoints require authorization for each request. To properly authorize requests, send an Authorization header with `Bearer ` plus your Telnyx API key as the value. See the following curl request for example usage:  ```sh curl --location --request GET 'https://api.telnyx.com/10dlc/example/endpoint' \\  --header 'Authorization: Bearer YOUR_API_KEY_GOES_HERE' \\  --data-raw '' ```  You can obtain your API key by logging into your <a href=\"https://portal.telnyx.com\">Telnyx portal account</a> and clicking the \"API Keys\" tab. From there, you can copy your desired API key for use in your requests, similar to the above example curl request.  ## The 10DLC Work Flow 1. Create a brand  2. Apply for brand vetting  3. Create a campaign or campaigns (associated with the created brand)  4. Assign a phone number or phone numbers to the created campaign ## 10DLC Costs **Brands:** 1. Brand registration: $4 one time charge  2.  Brand vetting: $40 one time charge  **Campaigns:**  1. Campaign registration T-Mobile: $50 one time charge  2. Campaign creation: first 3 month's charge upfront. After the first 3 months, this charge will change to a once a month recurring charge (see charge values below, based on campaign use case)     a. Charity Campaign Use Case: $15 upfront (first 3 months), and $5 month to month after     b. Low Mixed Volume Campaign Use Case: $6 upfront (first 3 months), and $2 month to month after     c. Any Other Campaign Use Case: $30 upfront (first 3 months), and $10 month to month after 3. Phone number to campaign assignment: $0.03 one time charge for each assignment  ## Frequently Asked Questions For frequently asked questions, visit <a href=\"https://support.telnyx.com/en/articles/3679260-frequently-asked-questions-about-10dlc\">Telnyx 10DLC FAQs</a>.
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.CreateGlobalIp202Response;
import com.telnyx.sdk.model.CreateGlobalIpAssignment202Response;
import com.telnyx.sdk.model.CreateGlobalIpHealthCheck202Response;
import com.telnyx.sdk.model.Errors;
import com.telnyx.sdk.model.GetGlobalIpAssignmentHealth200Response;
import com.telnyx.sdk.model.GetGlobalIpAssignmentUsage200Response;
import com.telnyx.sdk.model.GetGlobalIpLatency200Response;
import com.telnyx.sdk.model.GetGlobalIpUsage200Response;
import com.telnyx.sdk.model.GlobalIP;
import com.telnyx.sdk.model.GlobalIPHealthCheck;
import com.telnyx.sdk.model.GlobalIpAssignment;
import com.telnyx.sdk.model.GlobalIpAssignmentUpdate;
import com.telnyx.sdk.model.ListGlobalIpAllowedPorts200Response;
import com.telnyx.sdk.model.ListGlobalIpAssignments200Response;
import com.telnyx.sdk.model.ListGlobalIpHealthCheckTypes200Response;
import com.telnyx.sdk.model.ListGlobalIpHealthChecks200Response;
import com.telnyx.sdk.model.ListGlobalIpProtocols200Response;
import com.telnyx.sdk.model.ListGlobalIps200Response;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GlobalIpsApi
 */
public class GlobalIpsApiTest {

    private final GlobalIpsApi api = new GlobalIpsApi();

    /**
     * Create a Global IP
     *
     * Create a Global IP.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createGlobalIpTest() throws ApiException {
        //GlobalIP globalIP = null;
        //CreateGlobalIp202Response response = api.createGlobalIp(globalIP);
        // TODO: test validations
    }

    /**
     * Create a Global IP assignment
     *
     * Create a Global IP assignment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createGlobalIpAssignmentTest() throws ApiException {
        //GlobalIpAssignment globalIpAssignment = null;
        //CreateGlobalIpAssignment202Response response = api.createGlobalIpAssignment(globalIpAssignment);
        // TODO: test validations
    }

    /**
     * Create a Global IP health check
     *
     * Create a Global IP health check.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createGlobalIpHealthCheckTest() throws ApiException {
        //GlobalIPHealthCheck globalIPHealthCheck = null;
        //CreateGlobalIpHealthCheck202Response response = api.createGlobalIpHealthCheck(globalIPHealthCheck);
        // TODO: test validations
    }

    /**
     * Delete a Global IP
     *
     * Delete a Global IP.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteGlobalIpTest() throws ApiException {
        //UUID id = null;
        //CreateGlobalIp202Response response = api.deleteGlobalIp(id);
        // TODO: test validations
    }

    /**
     * Delete a Global IP assignment
     *
     * Delete a Global IP assignment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteGlobalIpAssignmentTest() throws ApiException {
        //UUID id = null;
        //CreateGlobalIpAssignment202Response response = api.deleteGlobalIpAssignment(id);
        // TODO: test validations
    }

    /**
     * Delete a Global IP health check
     *
     * Delete a Global IP health check.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteGlobalIpHealthCheckTest() throws ApiException {
        //UUID id = null;
        //CreateGlobalIpHealthCheck202Response response = api.deleteGlobalIpHealthCheck(id);
        // TODO: test validations
    }

    /**
     * Retrieve a Global IP
     *
     * Retrieve a Global IP.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGlobalIpTest() throws ApiException {
        //UUID id = null;
        //CreateGlobalIp202Response response = api.getGlobalIp(id);
        // TODO: test validations
    }

    /**
     * Retrieve a Global IP
     *
     * Retrieve a Global IP assignment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGlobalIpAssignmentTest() throws ApiException {
        //UUID id = null;
        //CreateGlobalIpAssignment202Response response = api.getGlobalIpAssignment(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGlobalIpAssignmentHealthTest() throws ApiException {
        //String filterGlobalIpIdIn = null;
        //String filterGlobalIpAssignmentIdIn = null;
        //OffsetDateTime filterTimestampGt = null;
        //OffsetDateTime filterTimestampLt = null;
        //GetGlobalIpAssignmentHealth200Response response = api.getGlobalIpAssignmentHealth(filterGlobalIpIdIn, filterGlobalIpAssignmentIdIn, filterTimestampGt, filterTimestampLt);
        // TODO: test validations
    }

    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGlobalIpAssignmentUsageTest() throws ApiException {
        //String filterGlobalIpAssignmentIdIn = null;
        //String filterGlobalIpIdIn = null;
        //OffsetDateTime filterTimestampGt = null;
        //OffsetDateTime filterTimestampLt = null;
        //GetGlobalIpAssignmentUsage200Response response = api.getGlobalIpAssignmentUsage(filterGlobalIpAssignmentIdIn, filterGlobalIpIdIn, filterTimestampGt, filterTimestampLt);
        // TODO: test validations
    }

    /**
     * Retrieve a Global IP health check
     *
     * Retrieve a Global IP health check.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGlobalIpHealthCheckTest() throws ApiException {
        //UUID id = null;
        //CreateGlobalIpHealthCheck202Response response = api.getGlobalIpHealthCheck(id);
        // TODO: test validations
    }

    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGlobalIpLatencyTest() throws ApiException {
        //String filterGlobalIpIdIn = null;
        //OffsetDateTime filterTimestampGt = null;
        //OffsetDateTime filterTimestampLt = null;
        //GetGlobalIpLatency200Response response = api.getGlobalIpLatency(filterGlobalIpIdIn, filterTimestampGt, filterTimestampLt);
        // TODO: test validations
    }

    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGlobalIpUsageTest() throws ApiException {
        //String filterGlobalIpIdIn = null;
        //OffsetDateTime filterTimestampGt = null;
        //OffsetDateTime filterTimestampLt = null;
        //GetGlobalIpUsage200Response response = api.getGlobalIpUsage(filterGlobalIpIdIn, filterTimestampGt, filterTimestampLt);
        // TODO: test validations
    }

    /**
     * List all Global IP Allowed Ports
     *
     * List all Global IP Allowed Ports
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listGlobalIpAllowedPortsTest() throws ApiException {
        //ListGlobalIpAllowedPorts200Response response = api.listGlobalIpAllowedPorts();
        // TODO: test validations
    }

    /**
     * List all Global IP assignments
     *
     * List all Global IP assignments.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listGlobalIpAssignmentsTest() throws ApiException {
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //ListGlobalIpAssignments200Response response = api.listGlobalIpAssignments(pageNumber, pageSize);
        // TODO: test validations
    }

    /**
     * List all Global IP Health check types
     *
     * List all Global IP Health check types.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listGlobalIpHealthCheckTypesTest() throws ApiException {
        //ListGlobalIpHealthCheckTypes200Response response = api.listGlobalIpHealthCheckTypes();
        // TODO: test validations
    }

    /**
     * List all Global IP health checks
     *
     * List all Global IP health checks.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listGlobalIpHealthChecksTest() throws ApiException {
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //ListGlobalIpHealthChecks200Response response = api.listGlobalIpHealthChecks(pageNumber, pageSize);
        // TODO: test validations
    }

    /**
     * List all Global IP Protocols
     *
     * List all Global IP Protocols
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listGlobalIpProtocolsTest() throws ApiException {
        //ListGlobalIpProtocols200Response response = api.listGlobalIpProtocols();
        // TODO: test validations
    }

    /**
     * List all Global IPs
     *
     * List all Global IPs.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listGlobalIpsTest() throws ApiException {
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //ListGlobalIps200Response response = api.listGlobalIps(pageNumber, pageSize);
        // TODO: test validations
    }

    /**
     * Update a Global IP assignment
     *
     * Update a Global IP assignment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateGlobalIpAssignmentTest() throws ApiException {
        //UUID id = null;
        //GlobalIpAssignmentUpdate globalIpAssignmentUpdate = null;
        //CreateGlobalIpAssignment202Response response = api.updateGlobalIpAssignment(id, globalIpAssignmentUpdate);
        // TODO: test validations
    }

}
