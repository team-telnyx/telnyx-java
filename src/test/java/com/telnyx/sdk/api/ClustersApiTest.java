/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.ClusteringRequestInfoData;
import com.telnyx.sdk.model.ClusteringStatusResponseData;
import com.telnyx.sdk.model.HTTPValidationError;
import com.telnyx.sdk.model.PublicTextClusteringRequest;
import com.telnyx.sdk.model.TextClusteringResponseData;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * API tests for ClustersApi
 */
public class ClustersApiTest {

    private final ClustersApi api = new ClustersApi();

    /**
     * Compute new clusters
     *
     * Starts a background task to compute how the data in an [embedded storage bucket](https://developers.telnyx.com/api/inference/inference-embedding/post-embedding) is clustered. This helps identify common themes and patterns in the data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void computeNewClusterPublicTextClustersPostTest()
        throws ApiException {
        //PublicTextClusteringRequest publicTextClusteringRequest = null;
        //TextClusteringResponseData response = api.computeNewClusterPublicTextClustersPost(publicTextClusteringRequest);
        // TODO: test validations
    }

    /**
     * Delete a cluster
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteClusterByTaskIdPublicTextClustersTaskIdDeleteTest()
        throws ApiException {
        //String taskId = null;
        //api.deleteClusterByTaskIdPublicTextClustersTaskIdDelete(taskId);
        // TODO: test validations
    }

    /**
     * Fetch a cluster
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchClusterByTaskIdPublicTextClustersTaskIdGetTest()
        throws ApiException {
        //String taskId = null;
        //Integer topNNodes = null;
        //Boolean showSubclusters = null;
        //ClusteringStatusResponseData response = api.fetchClusterByTaskIdPublicTextClustersTaskIdGet(taskId, topNNodes, showSubclusters);
        // TODO: test validations
    }

    /**
     * Fetch a cluster visualization
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fetchClusterImageByTaskIdPublicTextClustersTaskIdImageGetTest()
        throws ApiException {
        //String taskId = null;
        //Integer clusterId = null;
        //Object response = api.fetchClusterImageByTaskIdPublicTextClustersTaskIdImageGet(taskId, clusterId);
        // TODO: test validations
    }

    /**
     * List all clusters
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAllRequestedClustersPublicTextClustersGetTest()
        throws ApiException {
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //ClusteringRequestInfoData response = api.listAllRequestedClustersPublicTextClustersGet(pageNumber, pageSize);
        // TODO: test validations
    }
}
