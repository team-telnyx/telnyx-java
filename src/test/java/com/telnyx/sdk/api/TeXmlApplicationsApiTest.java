/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.ApiException;
import org.junit.Test;

/**
 * API tests for TeXmlApplicationsApi
 */
public class TeXmlApplicationsApiTest {

    private final TeXmlApplicationsApi api = new TeXmlApplicationsApi();

    /**
     * Creates a TeXML Application
     * <p>
     * Creates a TeXML Application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTexmlApplicationTest() throws ApiException {
        //CreateTexmlApplicationRequest createTexmlApplicationRequest = null;
        //InlineResponse2011 response = api.createTexmlApplication(createTexmlApplicationRequest);
        // TODO: test validations
    }

    /**
     * Deletes a TeXML Application
     * <p>
     * Deletes a TeXML Application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTexmlApplicationTest() throws ApiException {
        //String id = null;
        //InlineResponse2011 response = api.deleteTexmlApplication(id);
        // TODO: test validations
    }

    /**
     * List all TeXML Applications
     * <p>
     * Returns a list of your TeXML Applications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findTexmlApplicationsTest() throws ApiException {
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //String filterFriendlyNameContains = null;
        //String filterOutboundVoiceProfileId = null;
        //String sort = null;
        //InlineResponse2001 response = api.findTexmlApplications(pageNumber, pageSize, filterFriendlyNameContains, filterOutboundVoiceProfileId, sort);
        // TODO: test validations
    }

    /**
     * Retrieve a TeXML Application
     * <p>
     * Retrieves the details of an existing TeXML Application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTexmlApplicationTest() throws ApiException {
        //String id = null;
        //InlineResponse2011 response = api.getTexmlApplication(id);
        // TODO: test validations
    }

    /**
     * Update a TeXML Application
     * <p>
     * Updates settings of an existing TeXML Application.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTexmlApplicationTest() throws ApiException {
        //String id = null;
        //UpdateTexmlApplicationRequest updateTexmlApplicationRequest = null;
        //InlineResponse2011 response = api.updateTexmlApplication(id, updateTexmlApplicationRequest);
        // TODO: test validations
    }

}
