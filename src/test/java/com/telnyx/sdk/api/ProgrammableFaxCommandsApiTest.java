/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.Errors;
import com.telnyx.sdk.model.GetFaxResponse;
import com.telnyx.sdk.model.ListFaxesResponse;
import com.telnyx.sdk.model.RefreshFaxResponse;
import com.telnyx.sdk.model.SendFaxRequest;
import com.telnyx.sdk.model.SendFaxResponse;
import com.telnyx.sdk.model.SuccessfulResponseUponAcceptingCancelFaxCommand;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * API tests for ProgrammableFaxCommandsApi
 */
public class ProgrammableFaxCommandsApiTest {

    private final ProgrammableFaxCommandsApi api =
        new ProgrammableFaxCommandsApi();

    /**
     * Cancel a fax
     *
     * Cancel the outbound fax that is in one of the following states: &#x60;queued&#x60;, &#x60;media.processed&#x60;, &#x60;originated&#x60; or &#x60;sending&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cancelFaxTest() throws ApiException {
        //UUID id = null;
        //SuccessfulResponseUponAcceptingCancelFaxCommand response = api.cancelFax(id);
        // TODO: test validations
    }

    /**
     * Delete a fax
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteFaxTest() throws ApiException {
        //UUID id = null;
        //api.deleteFax(id);
        // TODO: test validations
    }

    /**
     * View a list of faxes
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listFaxesTest() throws ApiException {
        //OffsetDateTime filterCreatedAtGte = null;
        //OffsetDateTime filterCreatedAtGt = null;
        //OffsetDateTime filterCreatedAtLte = null;
        //OffsetDateTime filterCreatedAtLt = null;
        //String filterDirectionEq = null;
        //String filterFromEq = null;
        //String filterToEq = null;
        //Integer pageSize = null;
        //Integer pageNumber = null;
        //ListFaxesResponse response = api.listFaxes(filterCreatedAtGte, filterCreatedAtGt, filterCreatedAtLte, filterCreatedAtLt, filterDirectionEq, filterFromEq, filterToEq, pageSize, pageNumber);
        // TODO: test validations
    }

    /**
     * Refresh a fax
     *
     * Refreshes the inbound fax&#39;s media_url when it has expired
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void refreshFaxTest() throws ApiException {
        //UUID id = null;
        //RefreshFaxResponse response = api.refreshFax(id);
        // TODO: test validations
    }

    /**
     * Send a fax
     *
     * Send a fax. Files have size limits and page count limit validations. If a file is bigger than 50MB or has more than 350 pages it will fail with &#x60;file_size_limit_exceeded&#x60; and &#x60;page_count_limit_exceeded&#x60; respectively.   **Expected Webhooks:**  - &#x60;fax.queued&#x60; - &#x60;fax.media.processed&#x60; - &#x60;fax.sending.started&#x60; - &#x60;fax.delivered&#x60; - &#x60;fax.failed&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendFaxTest() throws ApiException {
        //SendFaxRequest sendFaxRequest = null;
        //SendFaxResponse response = api.sendFax(sendFaxRequest);
        // TODO: test validations
    }

    /**
     * View a fax
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void viewFaxTest() throws ApiException {
        //UUID id = null;
        //GetFaxResponse response = api.viewFax(id);
        // TODO: test validations
    }
}
