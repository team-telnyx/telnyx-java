/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.ApiClient;
import com.telnyx.sdk.ApiException;
import com.telnyx.sdk.Configuration;
import com.telnyx.sdk.auth.HttpBearerAuth;
import com.telnyx.sdk.model.Fax;
import com.telnyx.sdk.model.InlineResponse2001;
import com.telnyx.sdk.model.InlineResponse202;
import com.telnyx.sdk.model.SendFaxRequest;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import java.time.OffsetDateTime;
import java.util.List;
import java.util.UUID;

import static org.junit.Assert.*;

/**
 * API tests for ProgrammableFaxCommandsApi
 */
public class ProgrammableFaxCommandsApiTest {

    private final ProgrammableFaxCommandsApi api = new ProgrammableFaxCommandsApi();

    @Before
    public void setup() {
        ApiClient defaultClient = Configuration.getDefaultApiClient();
        defaultClient.setBasePath(TestConfiguration.MOCK_SERVER_URL);

        HttpBearerAuth bearerAuth = (HttpBearerAuth) defaultClient.getAuthentication("bearerAuth");
        bearerAuth.setBearerToken(TestConfiguration.API_KEY);
    }

    /**
     * Delete a fax
     *
     * @throws ApiException if the Api call fails
     */
    @Ignore
    @Test
    public void deleteFax_IdProvided_removesFax() throws ApiException {
        //given
        UUID id = api.sendFax(prepareSampleSendFaxRequest()).getData().getId();

        //when
        api.deleteFax(id);

        //then
        assertNull(api.viewFax(id));
    }

    /**
     * View a list of faxes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFaxes_nullParams_returnsNotNullListOfFaxes() throws ApiException {
        //given
        api.sendFax(prepareSampleSendFaxRequest());

//        OffsetDateTime filterCreatedAtGte = OffsetDateTime.now().minusDays(1);
        OffsetDateTime filterCreatedAtGte = null;
        OffsetDateTime filterCreatedAtGt = null;
        OffsetDateTime filterCreatedAtLte = null;
        OffsetDateTime filterCreatedAtLt = null;
        String filterDirectionEq = null;
        String filterFromEq = null;
        Integer pageSize = 10;
        Integer pageNumber = 0;

        //when
        InlineResponse2001 response = api.listFaxes(filterCreatedAtGte, filterCreatedAtGt, filterCreatedAtLte, filterCreatedAtLt, filterDirectionEq, filterFromEq, pageSize, pageNumber);

        //then
        assertNotNull(response);

        List<Fax> actual = response.getData();
        assertNotNull(actual);
        assertTrue(actual.size() > 0);
    }

    /**
     * View a list of faxes
     *
     * @throws ApiException if the Api call fails
     */
    @Ignore
    @Test
    public void listFaxes_defaultParams_returnsNotNullListOfFaxes() throws ApiException {
        //given
        api.sendFax(prepareSampleSendFaxRequest());

        OffsetDateTime filterCreatedAtGte = OffsetDateTime.now().minusDays(1);
        OffsetDateTime filterCreatedAtGt = OffsetDateTime.now().minusDays(1);
        OffsetDateTime filterCreatedAtLte = OffsetDateTime.now().plusDays(1);
        OffsetDateTime filterCreatedAtLt = OffsetDateTime.now().plusDays(1);
        String filterDirectionEq = "+456";
        String filterFromEq = "+123";
        Integer pageSize = 10;
        Integer pageNumber = 0;

        //when
        InlineResponse2001 response = api.listFaxes(filterCreatedAtGte, filterCreatedAtGt, filterCreatedAtLte, filterCreatedAtLt, filterDirectionEq, filterFromEq, pageSize, pageNumber);

        //then
        assertNotNull(response);

        List<Fax> actual = response.getData();
        assertNotNull(actual);
        assertTrue(actual.size() > 0);
    }

    /**
     * Send a fax
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendFax_fullRequestProvided_createsNewFax() throws ApiException {
        //given
        SendFaxRequest sendFaxRequest = prepareSampleSendFaxRequest();

        //when
        InlineResponse202 response = api.sendFax(sendFaxRequest);
        //then
        assertNotNull(response);
        Fax actual = response.getData();
        assertNotNull(actual);

        assertEquals(sendFaxRequest.getConnectionId(), actual.getConnectionId());
        assertEquals(sendFaxRequest.getMediaUrl(), actual.getMediaUrl());
        assertEquals(sendFaxRequest.getFrom(), actual.getFrom());
        assertEquals(sendFaxRequest.getTo(), actual.getTo());
        assertEquals(sendFaxRequest.getQuality(), actual.getQuality());
    }

    /**
     * View a fax
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewFax_IdProvided_returnsFax() throws ApiException {
        //given
        SendFaxRequest sendFaxRequest = prepareSampleSendFaxRequest();
        UUID id = api.sendFax(sendFaxRequest).getData().getId();

        //when
        InlineResponse202 response = api.viewFax(id);

        //then
        assertNotNull(response);

        Fax actual = response.getData();
        assertNotNull(actual);

        assertEquals(sendFaxRequest.getConnectionId(), actual.getConnectionId());
        assertEquals(sendFaxRequest.getMediaUrl(), actual.getMediaUrl());
        assertEquals(sendFaxRequest.getFrom(), actual.getFrom());
        assertEquals(sendFaxRequest.getTo(), actual.getTo());
        assertEquals(sendFaxRequest.getQuality(), actual.getQuality());
    }

    private SendFaxRequest prepareSampleSendFaxRequest() {
        String connectionId = "c-1";
        String mediaUrl = "http://www.example.com/fax.pdf";
        String from = "+123";
        String to = "+456";
        String quality = "high";

        SendFaxRequest sendFaxRequest = new SendFaxRequest()
                .connectionId(connectionId)
                .mediaUrl(mediaUrl)
                .from(from)
                .to(to)
                .quality(quality);
        return sendFaxRequest;
    }
}
