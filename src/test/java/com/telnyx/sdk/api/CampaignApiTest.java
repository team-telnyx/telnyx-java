/*
 * Telnyx 10DLC API
 * # Overview The Telnyx 10DLC API facilitates interaction with The Campaign Registry (TCR), allowing the creation and registration of brands and campaigns with TCR.  # API Interaction ## Request Authorization Telnyx 10DLC API endpoints require authorization for each request. To properly authorize requests, send an Authorization header with `Bearer ` plus your Telnyx API key as the value. See the following curl request for example usage:  ```sh curl --location --request GET 'https://api.telnyx.com/10dlc/example/endpoint' \\  --header 'Authorization: Bearer YOUR_API_KEY_GOES_HERE' \\  --data-raw '' ```  You can obtain your API key by logging into your <a href=\"https://portal.telnyx.com\">Telnyx portal account</a> and clicking the \"API Keys\" tab. From there, you can copy your desired API key for use in your requests, similar to the above example curl request.  ## The 10DLC Work Flow 1. Create a brand  2. Apply for brand vetting  3. Create a campaign or campaigns (associated with the created brand)  4. Assign a phone number or phone numbers to the created campaign ## 10DLC Costs **Brands:** 1. Brand registration: $4 one time charge  2.  Brand vetting: $40 one time charge  **Campaigns:**  1. Campaign registration T-Mobile: $50 one time charge  2. Campaign creation: first 3 month's charge upfront. After the first 3 months, this charge will change to a once a month recurring charge (see charge values below, based on campaign use case)     a. Charity Campaign Use Case: $15 upfront (first 3 months), and $5 month to month after     b. Low Mixed Volume Campaign Use Case: $6 upfront (first 3 months), and $2 month to month after     c. Any Other Campaign Use Case: $30 upfront (first 3 months), and $10 month to month after 3. Phone number to campaign assignment: $0.03 one time charge for each assignment  ## Frequently Asked Questions For frequently asked questions, visit <a href=\"https://support.telnyx.com/en/articles/3679260-frequently-asked-questions-about-10dlc\">Telnyx 10DLC FAQs</a>.
 *
 * The version of the OpenAPI document: 0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.Campaign;
import com.telnyx.sdk.model.CampaignCSP;
import com.telnyx.sdk.model.CampaignCost;
import com.telnyx.sdk.model.CampaignDeletionResponse;
import com.telnyx.sdk.model.CampaignRecordSetCSP;
import com.telnyx.sdk.model.CampaignRequest;
import com.telnyx.sdk.model.CampaignSharingChain;
import com.telnyx.sdk.model.HTTPValidationError;
import com.telnyx.sdk.model.ResponseSubmitCampaignPublicCampaignbuilderPost;
import com.telnyx.sdk.model.UpdateCampaign;
import com.telnyx.sdk.model.UsecaseMetadata;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CampaignApi
 */
public class CampaignApiTest {

    private final CampaignApi api = new CampaignApi();

    /**
     * Accept Shared Campaign
     *
     * Manually accept a campaign shared with Telnyx
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void acceptCampaignTest() throws ApiException {
        //String campaignId = null;
        //Object response = api.acceptCampaign(campaignId);
        // TODO: test validations
    }

    /**
     * Deactivate My Campaign
     *
     * Terminate a campaign. Note that once deactivated, a campaign cannot be restored.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deactivateCampaignTest() throws ApiException {
        //String campaignId = null;
        //CampaignDeletionResponse response = api.deactivateCampaign(campaignId);
        // TODO: test validations
    }

    /**
     * Get My Campaign
     *
     * Retrieve campaign details by &#x60;campaignId&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignTest() throws ApiException {
        //String campaignId = null;
        //CampaignCSP response = api.getCampaign(campaignId);
        // TODO: test validations
    }

    /**
     * Get Campaign Cost
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignCostTest() throws ApiException {
        //String usecase = null;
        //CampaignCost response = api.getCampaignCost(usecase);
        // TODO: test validations
    }

    /**
     * Get Campaign Mno Metadata
     *
     * Get the campaign metadata for each MNO it was submitted to
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignMnoMetadataTest() throws ApiException {
        //String campaignId = null;
        //Object response = api.getCampaignMnoMetadata(campaignId);
        // TODO: test validations
    }

    /**
     * Get My Campaign Operation Status
     *
     * Retrieve campaign&#39;s operation status at MNO level.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignOperationStatusTest() throws ApiException {
        //String campaignId = null;
        //Object response = api.getCampaignOperationStatus(campaignId);
        // TODO: test validations
    }

    /**
     * Get My Osr Campaign Attributes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignOsrAttributesTest() throws ApiException {
        //String campaignId = null;
        //Object response = api.getCampaignOsrAttributes(campaignId);
        // TODO: test validations
    }

    /**
     * Get Sharing Status
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignSharingStatusTest() throws ApiException {
        //String campaignId = null;
        //CampaignSharingChain response = api.getCampaignSharingStatus(campaignId);
        // TODO: test validations
    }

    /**
     * List Campaigns
     *
     * Retrieve a list of campaigns associated with a supplied &#x60;brandId&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignsTest() throws ApiException {
        //String brandId = null;
        //Integer page = null;
        //Integer recordsPerPage = null;
        //CampaignRecordSetCSP response = api.getCampaigns(brandId, page, recordsPerPage);
        // TODO: test validations
    }

    /**
     * Qualify By Usecase
     *
     * This endpoint allows you to see whether or not the supplied brand is suitable for your desired campaign use case.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsecaseQualificationTest() throws ApiException {
        //String usecase = null;
        //String brandId = null;
        //UsecaseMetadata response = api.getUsecaseQualification(usecase, brandId);
        // TODO: test validations
    }

    /**
     * Submit Campaign
     *
     * Before creating a campaign, use the [Qualify By Usecase endpoint](https://developers.telnyx.com/docs/api/v2/10dlc/Campaign#qualify_by_usecase_campaignBuilder_brand__brand_id__usecase__usecase__get) to ensure that the brand you want to assign a new campaign to is qualified for the desired use case of that campaign. **Please note:** After campaign creation, you&#39;ll only be able to edit the campaign&#39;s sample messages. Creating a campaign will entail an upfront, non-refundable three month&#39;s cost that will depend on the campaign&#39;s use case ([see 10DLC Costs section for details](https://developers.telnyx.com/docs/api/v2/10dlc)).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postCampaignTest() throws ApiException {
        //CampaignRequest campaignRequest = null;
        //ResponseSubmitCampaignPublicCampaignbuilderPost response = api.postCampaign(campaignRequest);
        // TODO: test validations
    }

    /**
     * Update My Campaign
     *
     * Update a campaign&#39;s properties by &#x60;campaignId&#x60;. **Please note:** only sample messages are editable.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCampaignTest() throws ApiException {
        //String campaignId = null;
        //UpdateCampaign updateCampaign = null;
        //Campaign response = api.updateCampaign(campaignId, updateCampaign);
        // TODO: test validations
    }

}
