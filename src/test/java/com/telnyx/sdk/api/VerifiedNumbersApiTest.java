/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.CreateVerifiedNumberRequest;
import com.telnyx.sdk.model.CreateVerifiedNumberResponse;
import com.telnyx.sdk.model.Errors;
import com.telnyx.sdk.model.ListCustomerServiceRecords422Response;
import com.telnyx.sdk.model.ListVerifiedNumbersResponse;
import com.telnyx.sdk.model.VerifiedNumberResponseDataWrapper;
import com.telnyx.sdk.model.VerifyVerificationCodeRequest;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * API tests for VerifiedNumbersApi
 */
public class VerifiedNumbersApiTest {

    private final VerifiedNumbersApi api = new VerifiedNumbersApi();

    /**
     * Request phone number verification
     *
     * Initiates phone number verification procedure.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createVerifiedNumberTest() throws ApiException {
        //CreateVerifiedNumberRequest createVerifiedNumberRequest = null;
        //CreateVerifiedNumberResponse response = api.createVerifiedNumber(createVerifiedNumberRequest);
        // TODO: test validations
    }

    /**
     * Delete a verified number
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteVerifiedNumberTest() throws ApiException {
        //String phoneNumber = null;
        //VerifiedNumberResponseDataWrapper response = api.deleteVerifiedNumber(phoneNumber);
        // TODO: test validations
    }

    /**
     * Retrieve a verified number
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVerifiedNumberTest() throws ApiException {
        //String phoneNumber = null;
        //VerifiedNumberResponseDataWrapper response = api.getVerifiedNumber(phoneNumber);
        // TODO: test validations
    }

    /**
     * List all Verified Numbers
     *
     * Gets a paginated list of Verified Numbers.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listVerifiedNumbersTest() throws ApiException {
        //Integer pageSize = null;
        //Integer pageNumber = null;
        //ListVerifiedNumbersResponse response = api.listVerifiedNumbers()
        //        .pageSize(pageSize)
        //        .pageNumber(pageNumber)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Submit verification code
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void verifyVerificationCodeTest() throws ApiException {
        //String phoneNumber = null;
        //VerifyVerificationCodeRequest verifyVerificationCodeRequest = null;
        //VerifiedNumberResponseDataWrapper response = api.verifyVerificationCode(phoneNumber, verifyVerificationCodeRequest);
        // TODO: test validations
    }
}
