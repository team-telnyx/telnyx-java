/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.Errors;
import java.util.UUID;
import com.telnyx.sdk.model.WireguardInterfaceCreate;
import com.telnyx.sdk.model.WireguardInterfaceCreate202Response;
import com.telnyx.sdk.model.WireguardInterfaceList200Response;
import com.telnyx.sdk.model.WireguardPeerAllowedIPGet200Response;
import com.telnyx.sdk.model.WireguardPeerAllowedIPList200Response;
import com.telnyx.sdk.model.WireguardPeerCreate;
import com.telnyx.sdk.model.WireguardPeerCreate202Response;
import com.telnyx.sdk.model.WireguardPeerList200Response;
import com.telnyx.sdk.model.WireguardPeerPatch;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WireGuardInterfacesApi
 */
public class WireGuardInterfacesApiTest {

    private final WireGuardInterfacesApi api = new WireGuardInterfacesApi();

    /**
     * Create a WireGuard Interface
     *
     * Create a new WireGuard Interface. Current limitation of 10 interfaces per user can be created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wireguardInterfaceCreateTest() throws ApiException {
        //WireguardInterfaceCreate wireguardInterfaceCreate = null;
        //WireguardInterfaceCreate202Response response = api.wireguardInterfaceCreate(wireguardInterfaceCreate);
        // TODO: test validations
    }

    /**
     * Delete a WireGuard Interface
     *
     * Delete a WireGuard Interface.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wireguardInterfaceDeleteTest() throws ApiException {
        //UUID id = null;
        //WireguardInterfaceCreate202Response response = api.wireguardInterfaceDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieve a WireGuard Interfaces
     *
     * Retrieve a WireGuard Interfaces.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wireguardInterfaceGetTest() throws ApiException {
        //UUID id = null;
        //WireguardInterfaceCreate202Response response = api.wireguardInterfaceGet(id);
        // TODO: test validations
    }

    /**
     * List all WireGuard Interfaces
     *
     * List all WireGuard Interfaces.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wireguardInterfaceListTest() throws ApiException {
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //String filterNetworkId = null;
        //WireguardInterfaceList200Response response = api.wireguardInterfaceList(pageNumber, pageSize, filterNetworkId);
        // TODO: test validations
    }

    /**
     * Retrieve the Allowed IP
     *
     * Retrieve the Allowed IP.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wireguardPeerAllowedIPGetTest() throws ApiException {
        //UUID id = null;
        //UUID childId = null;
        //WireguardPeerAllowedIPGet200Response response = api.wireguardPeerAllowedIPGet(id, childId);
        // TODO: test validations
    }

    /**
     * List all Allowed IPs for a WireGuard Peer
     *
     * List all Allowed IPs for a WireGuard peer.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wireguardPeerAllowedIPListTest() throws ApiException {
        //UUID id = null;
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //WireguardPeerAllowedIPList200Response response = api.wireguardPeerAllowedIPList(id, pageNumber, pageSize);
        // TODO: test validations
    }

    /**
     * Retrieve Wireguard config template for Peer
     *
     * Retrieve Wireguard config template for Peer
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wireguardPeerConfigTest() throws ApiException {
        //UUID id = null;
        //String response = api.wireguardPeerConfig(id);
        // TODO: test validations
    }

    /**
     * Create a WireGuard Peer
     *
     * Create a new WireGuard Peer. Current limitation of 5 peers per interface can be created.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wireguardPeerCreateTest() throws ApiException {
        //UUID id = null;
        //WireguardPeerCreate wireguardPeerCreate = null;
        //WireguardPeerCreate202Response response = api.wireguardPeerCreate(id, wireguardPeerCreate);
        // TODO: test validations
    }

    /**
     * Delete the WireGuard Peer
     *
     * Delete the WireGuard peer.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wireguardPeerDeleteTest() throws ApiException {
        //UUID id = null;
        //WireguardPeerCreate202Response response = api.wireguardPeerDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieve the WireGuard Peer
     *
     * Retrieve the WireGuard peer.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wireguardPeerGetTest() throws ApiException {
        //UUID id = null;
        //WireguardPeerCreate202Response response = api.wireguardPeerGet(id);
        // TODO: test validations
    }

    /**
     * List all WireGuard Peers
     *
     * List all WireGuard peers.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wireguardPeerListTest() throws ApiException {
        //UUID id = null;
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //UUID filterWireguardInterfaceId = null;
        //WireguardPeerList200Response response = api.wireguardPeerList(id, pageNumber, pageSize, filterWireguardInterfaceId);
        // TODO: test validations
    }

    /**
     * Update the WireGuard Peer
     *
     * Update the WireGuard peer.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void wireguardPeerUpdateTest() throws ApiException {
        //UUID id = null;
        //WireguardPeerPatch wireguardPeerPatch = null;
        //WireguardPeerCreate202Response response = api.wireguardPeerUpdate(id, wireguardPeerPatch);
        // TODO: test validations
    }

}
