/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.BackgroundTasksQueryResponseData;
import com.telnyx.sdk.model.BucketNotFoundError;
import com.telnyx.sdk.model.EmbeddingBucketRequest;
import com.telnyx.sdk.model.EmbeddingResponse;
import com.telnyx.sdk.model.EmbeddingSimilaritySearchRequest;
import com.telnyx.sdk.model.EmbeddingSimilaritySearchResponse;
import com.telnyx.sdk.model.EmbeddingsBucketFilesData;
import com.telnyx.sdk.model.HTTPValidationError;
import com.telnyx.sdk.model.TaskStatusResponse;
import com.telnyx.sdk.model.UserEmbeddedBucketsData;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * API tests for EmbeddingsApi
 */
public class EmbeddingsApiTest {

    private final EmbeddingsApi api = new EmbeddingsApi();

    /**
     * Disable AI for an Embedded Bucket
     *
     * Deletes an entire bucket&#39;s embeddings and disables the bucket for AI-use, returning it to normal storage pricing.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void embeddingBucketFilesPublicEmbeddingBucketsBucketNameDeleteTest()
        throws ApiException {
        //String bucketName = null;
        //api.embeddingBucketFilesPublicEmbeddingBucketsBucketNameDelete(bucketName);
        // TODO: test validations
    }

    /**
     * Get file-level embedding statuses for a bucket
     *
     * Get all embedded files for a given user bucket, including their processing status.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBucketNameTest() throws ApiException {
        //String bucketName = null;
        //EmbeddingsBucketFilesData response = api.getBucketName(bucketName);
        // TODO: test validations
    }

    /**
     * List embedded buckets
     *
     * Get all embedding buckets for a user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEmbeddingBucketsTest() throws ApiException {
        //UserEmbeddedBucketsData response = api.getEmbeddingBuckets();
        // TODO: test validations
    }

    /**
     * Get an embedding task&#39;s status
     *
     * Check the status of a current embedding task. Will be one of the following: - &#x60;queued&#x60; - Task is waiting to be picked up by a worker - &#x60;processing&#x60; - The embedding task is running - &#x60;success&#x60; - Task completed successfully and the bucket is embedded - &#x60;failure&#x60; - Task failed and no files were embedded successfully - &#x60;partial_success&#x60; - Some files were embedded successfully, but at least one failed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEmbeddingTaskTest() throws ApiException {
        //String taskId = null;
        //TaskStatusResponse response = api.getEmbeddingTask(taskId);
        // TODO: test validations
    }

    /**
     * Get Tasks by Status
     *
     * Retrieve tasks for the user that are either &#x60;queued&#x60;, &#x60;processing&#x60;, &#x60;failed&#x60;, &#x60;success&#x60; or &#x60;partial_success&#x60; based on the query string. Defaults to &#x60;queued&#x60; and &#x60;processing&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTasksByStatusTest() throws ApiException {
        //List<String> status = null;
        //BackgroundTasksQueryResponseData response = api.getTasksByStatus(status);
        // TODO: test validations
    }

    /**
     * Embed documents
     *
     * Perform embedding on a Telnyx Storage Bucket using the a embedding model. The current supported file types are: - PDF - HTML - txt/unstructured text files - json - csv - audio / video (mp3, mp4, mpeg, mpga, m4a, wav, or webm ) - Max of 100mb file size.  Any files not matching the above types will be attempted to be embedded as unstructured text.  This process can be slow, so it runs in the background and the user can check the status of the task using the endpoint &#x60;/ai/embeddings/{task_id}&#x60;.   **Important Note**: When you update documents in a Telnyx Storage bucket, their associated embeddings are automatically kept up to date. If you add or update a file, it is automatically embedded. If you delete a file, the embeddings are deleted for that particular file.  You can also specify a custom &#x60;loader&#x60; param. Currently the only supported loader value is &#x60;intercom&#x60; which loads Intercom article jsons as specified by [the Intercom article API](https://developers.intercom.com/docs/references/rest-api/api.intercom.io/Articles/article/) This loader will split each article into paragraphs and save additional parameters relevant to Intercom docs, such as &#x60;article_url&#x60; and &#x60;heading&#x60;. These values will be returned by the &#x60;/v2/ai/embeddings/similarity-search&#x60; endpoint in the &#x60;loader_metadata&#x60; field.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postEmbeddingTest() throws ApiException {
        //EmbeddingBucketRequest embeddingBucketRequest = null;
        //EmbeddingResponse response = api.postEmbedding(embeddingBucketRequest);
        // TODO: test validations
    }

    /**
     * Search for documents
     *
     * Perform a similarity search on a Telnyx Storage Bucket, returning the most similar &#x60;num_docs&#x60; document chunks to the query.  Currently the only available distance metric is cosine similarity which will return a &#x60;distance&#x60; between 0 and 1. The lower the distance, the more similar the returned document chunks are to the query. A &#x60;certainty&#x60; will also be returned, which is a value between 0 and 1 where the higher the certainty, the more similar the document. You can read more about Weaviate distance metrics here: [Weaviate Docs](https://weaviate.io/developers/weaviate/config-refs/distances)  If a bucket was embedded using a custom loader, such as &#x60;intercom&#x60;, the additional metadata will be returned in the  &#x60;loader_metadata&#x60; field.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postEmbeddingSimilaritySearchTest() throws ApiException {
        //EmbeddingSimilaritySearchRequest embeddingSimilaritySearchRequest = null;
        //EmbeddingSimilaritySearchResponse response = api.postEmbeddingSimilaritySearch(embeddingSimilaritySearchRequest);
        // TODO: test validations
    }
}
