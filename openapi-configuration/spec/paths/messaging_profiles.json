{
  "get": {
    "summary": "List messaging profiles",
    "operationId": "ListMessagingProfiles",
    "tags": [
      "Messaging Profiles"
    ],
    "x-group-parameters": "true",
    "x-endpoint-cost": "medium",
    "parameters": [
      {
        "$ref": "../components/parameters/PageNumber.json"
      },
      {
        "$ref": "../components/parameters/PageSize.json"
      },
      {
        "name": "filter[name]",
        "in": "query",
        "description": "Filter by name",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    ],
    "responses": {
      "200": {
        "$ref": "../components/responses/ListMessagingProfilesResponse.json"
      },
      "default": {
        "$ref": "../components/responses/GenericErrorResponse.json"
      }
    },
    "x-latency-category": "responsive"
  },
  "post": {
    "summary": "Create a messaging profile",
    "operationId": "CreateMessagingProfile",
    "tags": [
      "Messaging Profiles"
    ],
    "x-endpoint-cost": "medium",
    "requestBody": {
      "description": "New Messaging Profile object",
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "$ref": "../components/schemas/CreateMessagingProfileRequest.json"
          }
        }
      }
    },
    "responses": {
      "200": {
        "$ref": "../components/responses/MessagingProfileResponse.json"
      },
      "default": {
        "$ref": "../components/responses/GenericErrorResponse.json"
      }
    },
    "callbacks": {
      "inboundMessage": {
        "{$request.body#/webhook_url}": {
          "post": {
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "../components/schemas/InboundMessageEvent.json"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
              }
            }
          }
        }
      },
      "deliveryUpdate": {
        "{$request.body#/webhook_url}": {
          "post": {
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "../components/schemas/OutboundMessageEvent.json"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
              }
            }
          }
        }
      },
      "replacedLinkClick": {
        "{$request.body#/webhook_url}": {
          "post": {
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "../components/schemas/ReplacedLinkClickEvent.json"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
              }
            }
          }
        }
      }
    },
    "x-latency-category": "responsive"
  }
}