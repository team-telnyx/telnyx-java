{
  "get": {
    "summary": "List all documents",
    "deprecated": false,
    "description": "List all documents ordered by created_at descending.",
    "operationId": "ListDocuments",
    "tags": [
      "Documents"
    ],
    "parameters": [
      {
        "name": "filter[filename][contains]",
        "in": "query",
        "description": "Filter by string matching part of filename.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "invoice"
        }
      },
      {
        "name": "filter[customer_reference][eq]",
        "in": "query",
        "description": "Filter documents by a customer references.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "MY REF 001"
        }
      },
      {
        "name": "filter[customer_reference][in][]",
        "in": "query",
        "description": "Filter documents by a list of customer references.",
        "required": false,
        "schema": {
          "type": "string",
          "example": "MY REF 001"
        }
      },
      {
        "name": "filter[created_at][gt]",
        "in": "query",
        "description": "Filter by created at greater than provided value.",
        "required": false,
        "schema": {
          "type": "string",
          "description": "ISO 8601 formatted date-time indicating when the resource was created.",
          "example": "2021-04-09T22:25:27.521Z"
        }
      },
      {
        "name": "filter[created_at][lt]",
        "in": "query",
        "description": "Filter by created at less than provided value.",
        "required": false,
        "schema": {
          "type": "string",
          "description": "ISO 8601 formatted date-time indicating when the resource was created.",
          "example": "2021-04-09T22:25:27.521Z"
        }
      },
      {
        "name": "sort[]",
        "in": "query",
        "description": "Specifies the sort order for results. If you want to sort by a field in ascending order, include it as a sort parameter. If you want to sort in descending order, prepend a `-` in front of the field name.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "filename",
            "created_at",
            "updated_at"
          ],
          "example": "filename"
        }
      },
      {
        "name": "page[number]",
        "in": "query",
        "description": "The page number to load",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      {
        "name": "page[size]",
        "in": "query",
        "description": "The size of the page",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 250,
          "default": 20
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "../components/schemas/DocServiceDocument.json"
                  }
                },
                "meta": {
                  "$ref": "../components/schemas/PaginationMeta.json"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../components/schemas/Errors.json"
            }
          }
        }
      }
    },
    "x-latency-category": "responsive"
  },
  "post": {
    "summary": "Upload a document",
    "deprecated": false,
    "description": "Upload a document.<br /><br />Uploaded files must be linked to a service within 30 minutes or they will be automatically deleted.",
    "operationId": "CreateDocument",
    "tags": [
      "Documents"
    ],
    "parameters": [],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "url": {
                    "description": "If the file is already hosted publicly, you can provide a URL and have the documents service fetch it for you.",
                    "type": "string",
                    "example": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
                  },
                  "filename": {
                    "description": "The filename of the document.",
                    "type": "string",
                    "example": "test-document.pdf"
                  },
                  "customer_reference": {
                    "type": "string",
                    "description": "Optional reference string for customer tracking.",
                    "example": "MY REF 001"
                  }
                },
                "required": [
                  "url"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "The Base64 encoded contents of the file you are uploading.",
                    "type": "string",
                    "format": "byte",
                    "example": "[Base64 encoded content]"
                  },
                  "filename": {
                    "description": "The filename of the document.",
                    "type": "string",
                    "example": "test-document.pdf"
                  },
                  "customer_reference": {
                    "type": "string",
                    "description": "A customer reference string for customer look ups.",
                    "example": "MY REF 001"
                  }
                },
                "required": [
                  "file"
                ]
              }
            ]
          }
        },
        "multipart/form-data": {
          "schema": {
            "type": "object",
            "properties": {
              "file": {
                "description": "The file you are uploading.",
                "type": "string",
                "format": "binary",
                "example": ""
              },
              "customer_reference": {
                "type": "string",
                "description": "Optional reference string for customer tracking.",
                "example": "MY REF 001"
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "../components/schemas/DocServiceDocument.json"
                }
              }
            }
          }
        }
      },
      "422": {
        "description": "Unprocessable entity. Check the 'detail' field in response for details.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../components/schemas/Errors.json"
            }
          }
        }
      },
      "500": {
        "description": "Unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../components/schemas/Errors.json"
            }
          }
        }
      }
    },
    "x-latency-category": "responsive"
  }
}