{
  "get": {
    "tags": [
      "Detail Records"
    ],
    "summary": "Search detail records",
    "description": "Search for any detail record across the Telnyx Platform",
    "operationId": "SearchDetailRecords",
    "parameters": [
      {
        "name": "filter[record_type]",
        "in": "query",
        "description": "Filter by the given record type.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "ai-voice-assistant",
            "amd",
            "call-control",
            "conference",
            "conference-participant",
            "embedding",
            "fax",
            "inference",
            "inference-speech-to-text",
            "media_storage",
            "media-streaming",
            "messaging",
            "noise-suppression",
            "recording",
            "sip-trunking",
            "siprec-client",
            "stt",
            "tts",
            "verify",
            "webrtc",
            "wireless"
          ]
        },
        "examples": {
          "filter[record_type]=messaging": {
            "value": "messaging",
            "summary": "Searches for messaging detail records"
          },
          "filter[record_type]=verify": {
            "value": "verify",
            "summary": "Searches for verify detail records"
          }
        }
      },
      {
        "name": "filter[date_range]",
        "in": "query",
        "description": "Filter by the given user-friendly date range. You can specify one of the following enum values, or a dynamic one using this format: last_N_days.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "yesterday",
            "today",
            "tomorrow",
            "last_week",
            "this_week",
            "next_week",
            "last_month",
            "this_month",
            "next_month"
          ]
        },
        "examples": {
          "filter[date_range]=today": {
            "value": "today",
            "summary": "Searches for records with timestamp starting at `00:00:00` of the current day"
          },
          "filter[date_range]=yesterday": {
            "value": "yesterday",
            "summary": "Searches for records with timestamp starting at `00:00:00` of yesterday"
          },
          "filter[date_range]=last_month": {
            "value": "last_month",
            "summary": "Searches for records with timestamp starting at `00:00:00` on the first day of the month"
          }
        }
      },
      {
        "name": "filter",
        "in": "query",
        "description": "Filter records on a given record attribute and value. <br/>Example: filter[status]=delivered",
        "required": false,
        "schema": {
          "type": "object",
          "additionalProperties": true
        },
        "examples": {
          "filter[created_at][gte]=2021-06-22": {
            "value": "2021-06-22",
            "summary": "Searches for records with `created_at` starting at `2021-06-22`"
          },
          "filter[created_at][lt]=2021-06-23": {
            "value": "2021-06-23",
            "summary": "Searches for records with `created_at` ending at `2021-06-22`"
          },
          "filter[direction]=inbound": {
            "value": "inbound",
            "summary": "Searches for records which have the property `direction` equal to `inbound`"
          },
          "filter[cld][starts_with]=123": {
            "value": "123",
            "summary": "Searches for records which have the property `cld` starting with the prefix `123`"
          },
          "filter[cld][ends_with]=789": {
            "value": "789",
            "summary": "Searches for records which have the property `cld` ending with the suffix `789`"
          },
          "filter[cld][contains]=456": {
            "value": "456",
            "summary": "Searches for records which have the property `cld` containing the pattern `456`"
          }
        }
      },
      {
        "name": "page[number]",
        "in": "query",
        "description": "Page number",
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 1,
          "minimum": 1
        }
      },
      {
        "name": "page[size]",
        "in": "query",
        "description": "Page size",
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 20,
          "minimum": 1,
          "maximum": 50
        }
      },
      {
        "name": "sort",
        "description": "Specifies the sort order for results. <br/>Example: sort=-created_at",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "examples": {
          "sort=created_at": {
            "value": "created_at",
            "summary": "Sorts search results using the `created_at` date-time in ascending order"
          },
          "sort=-created_at": {
            "value": "created_at",
            "summary": "Sorts search results using the `created_at` date-time in descending order"
          }
        }
      }
    ],
    "responses": {
      "200": {
        "description": "Successful",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../components/schemas/DetailRecordsSearchResponse.json"
            }
          }
        }
      }
    },
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "x-latency-category": "interactive"
  }
}