/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.CreateRoom201Response;
import com.telnyx.sdk.model.CreateRoomRequest;
import com.telnyx.sdk.model.Error;
import com.telnyx.sdk.model.Errors;
import com.telnyx.sdk.model.ListRoomSessions200Response;
import com.telnyx.sdk.model.ListRooms200Response;
import java.time.LocalDate;
import com.telnyx.sdk.model.PatchRoomRequest;
import java.util.UUID;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RoomsApi
 */
public class RoomsApiTest {

    private final RoomsApi api = new RoomsApi();

    /**
     * Create a room.
     *
     * Synchronously create a Room.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRoomTest() throws ApiException {
        //CreateRoomRequest createRoomRequest = null;
        //CreateRoom201Response response = api.createRoom(createRoomRequest);
        // TODO: test validations
    }

    /**
     * Delete a room.
     *
     * Synchronously delete a Room. Participants from that room will be kicked out, they won&#39;t be able to join that room anymore, and you won&#39;t be charged anymore for that room.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRoomTest() throws ApiException {
        //UUID roomId = null;
        //api.deleteRoom(roomId);
        // TODO: test validations
    }

    /**
     * View a list of rooms.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listRoomsTest() throws ApiException {
        //LocalDate filterDateCreatedAtEq = null;
        //LocalDate filterDateCreatedAtGte = null;
        //LocalDate filterDateCreatedAtLte = null;
        //LocalDate filterDateUpdatedAtEq = null;
        //LocalDate filterDateUpdatedAtGte = null;
        //LocalDate filterDateUpdatedAtLte = null;
        //String filterUniqueName = null;
        //Boolean includeSessions = null;
        //Integer pageSize = null;
        //Integer pageNumber = null;
        //ListRooms200Response response = api.listRooms(filterDateCreatedAtEq, filterDateCreatedAtGte, filterDateCreatedAtLte, filterDateUpdatedAtEq, filterDateUpdatedAtGte, filterDateUpdatedAtLte, filterUniqueName, includeSessions, pageSize, pageNumber);
        // TODO: test validations
    }

    /**
     * View a list of room sessions.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveListRoomSessionsTest() throws ApiException {
        //UUID roomId = null;
        //LocalDate filterDateCreatedAtEq = null;
        //LocalDate filterDateCreatedAtGte = null;
        //LocalDate filterDateCreatedAtLte = null;
        //LocalDate filterDateUpdatedAtEq = null;
        //LocalDate filterDateUpdatedAtGte = null;
        //LocalDate filterDateUpdatedAtLte = null;
        //LocalDate filterDateEndedAtEq = null;
        //LocalDate filterDateEndedAtGte = null;
        //LocalDate filterDateEndedAtLte = null;
        //Boolean filterActive = null;
        //Boolean includeParticipants = null;
        //Integer pageSize = null;
        //Integer pageNumber = null;
        //ListRoomSessions200Response response = api.retrieveListRoomSessions(roomId, filterDateCreatedAtEq, filterDateCreatedAtGte, filterDateCreatedAtLte, filterDateUpdatedAtEq, filterDateUpdatedAtGte, filterDateUpdatedAtLte, filterDateEndedAtEq, filterDateEndedAtGte, filterDateEndedAtLte, filterActive, includeParticipants, pageSize, pageNumber);
        // TODO: test validations
    }

    /**
     * Update a room.
     *
     * Synchronously update a Room.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateRoomTest() throws ApiException {
        //UUID roomId = null;
        //PatchRoomRequest patchRoomRequest = null;
        //CreateRoom201Response response = api.updateRoom(roomId, patchRoomRequest);
        // TODO: test validations
    }

    /**
     * View a room.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void viewRoomTest() throws ApiException {
        //UUID roomId = null;
        //Boolean includeSessions = null;
        //CreateRoom201Response response = api.viewRoom(roomId, includeSessions);
        // TODO: test validations
    }

}
