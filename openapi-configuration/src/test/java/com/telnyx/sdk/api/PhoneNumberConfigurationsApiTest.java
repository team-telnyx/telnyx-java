/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.Errors;
import com.telnyx.sdk.model.ListPhoneNumbersFilterCountryIsoAlpha2Parameter;
import com.telnyx.sdk.model.ListPhoneNumbersResponse;
import com.telnyx.sdk.model.ListPhoneNumbersResponse1;
import com.telnyx.sdk.model.ListPhoneNumbersWithVoiceSettingsResponse;
import com.telnyx.sdk.model.PhoneNumberBundleStatusChange;
import com.telnyx.sdk.model.PhoneNumberBundleStatusChangeRequest;
import com.telnyx.sdk.model.PhoneNumberEnableEmergency;
import com.telnyx.sdk.model.PhoneNumberEnableEmergencyRequest;
import com.telnyx.sdk.model.PhoneNumberResponse;
import com.telnyx.sdk.model.PhoneNumberResponse1;
import com.telnyx.sdk.model.RetrievePhoneNumberVoiceResponse;
import com.telnyx.sdk.model.UpdatePhoneNumberRequest;
import com.telnyx.sdk.model.UpdatePhoneNumberVoiceSettingsRequest;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PhoneNumberConfigurationsApi
 */
public class PhoneNumberConfigurationsApiTest {

    private final PhoneNumberConfigurationsApi api = new PhoneNumberConfigurationsApi();

    /**
     * Delete a phone number
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePhoneNumberTest() throws ApiException {
        //String id = null;
        //PhoneNumberResponse1 response = api.deletePhoneNumber(id);
        // TODO: test validations
    }

    /**
     * Enable emergency for a phone number
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void enablePhoneNumberEmergencyTest() throws ApiException {
        //String id = null;
        //PhoneNumberEnableEmergencyRequest phoneNumberEnableEmergencyRequest = null;
        //PhoneNumberEnableEmergency response = api.enablePhoneNumberEmergency(id, phoneNumberEnableEmergencyRequest);
        // TODO: test validations
    }

    /**
     * Retrieve a phone number with voice settings
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPhoneNumberVoiceSettingsTest() throws ApiException {
        //String id = null;
        //RetrievePhoneNumberVoiceResponse response = api.getPhoneNumberVoiceSettings(id);
        // TODO: test validations
    }

    /**
     * List phone numbers
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPhoneNumbersTest() throws ApiException {
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //String filterTag = null;
        //String filterPhoneNumber = null;
        //String filterStatus = null;
        //ListPhoneNumbersFilterCountryIsoAlpha2Parameter filterCountryIsoAlpha2 = null;
        //String filterConnectionId = null;
        //String filterVoiceConnectionNameContains = null;
        //String filterVoiceConnectionNameStartsWith = null;
        //String filterVoiceConnectionNameEndsWith = null;
        //String filterVoiceConnectionNameEq = null;
        //String filterVoiceUsagePaymentMethod = null;
        //String filterBillingGroupId = null;
        //String filterEmergencyAddressId = null;
        //String filterCustomerReference = null;
        //String filterNumberTypeEq = null;
        //String filterSource = null;
        //String sort = null;
        //ListPhoneNumbersResponse response = api.listPhoneNumbers()
        //        .pageNumber(pageNumber)
        //        .pageSize(pageSize)
        //        .filterTag(filterTag)
        //        .filterPhoneNumber(filterPhoneNumber)
        //        .filterStatus(filterStatus)
        //        .filterCountryIsoAlpha2(filterCountryIsoAlpha2)
        //        .filterConnectionId(filterConnectionId)
        //        .filterVoiceConnectionNameContains(filterVoiceConnectionNameContains)
        //        .filterVoiceConnectionNameStartsWith(filterVoiceConnectionNameStartsWith)
        //        .filterVoiceConnectionNameEndsWith(filterVoiceConnectionNameEndsWith)
        //        .filterVoiceConnectionNameEq(filterVoiceConnectionNameEq)
        //        .filterVoiceUsagePaymentMethod(filterVoiceUsagePaymentMethod)
        //        .filterBillingGroupId(filterBillingGroupId)
        //        .filterEmergencyAddressId(filterEmergencyAddressId)
        //        .filterCustomerReference(filterCustomerReference)
        //        .filterNumberTypeEq(filterNumberTypeEq)
        //        .filterSource(filterSource)
        //        .sort(sort)
        //        .execute();
        // TODO: test validations
    }

    /**
     * List phone numbers with voice settings
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPhoneNumbersWithVoiceSettingsTest() throws ApiException {
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //String filterPhoneNumber = null;
        //String filterConnectionNameContains = null;
        //String filterCustomerReference = null;
        //String filterVoiceUsagePaymentMethod = null;
        //String sort = null;
        //ListPhoneNumbersWithVoiceSettingsResponse response = api.listPhoneNumbersWithVoiceSettings()
        //        .pageNumber(pageNumber)
        //        .pageSize(pageSize)
        //        .filterPhoneNumber(filterPhoneNumber)
        //        .filterConnectionNameContains(filterConnectionNameContains)
        //        .filterCustomerReference(filterCustomerReference)
        //        .filterVoiceUsagePaymentMethod(filterVoiceUsagePaymentMethod)
        //        .sort(sort)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Change the bundle status for a phone number (set to being in a bundle or remove from a bundle)
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void phoneNumberBundleStatusChangeTest() throws ApiException {
        //String id = null;
        //PhoneNumberBundleStatusChangeRequest phoneNumberBundleStatusChangeRequest = null;
        //PhoneNumberBundleStatusChange response = api.phoneNumberBundleStatusChange(id, phoneNumberBundleStatusChangeRequest);
        // TODO: test validations
    }

    /**
     * Retrieve a phone number
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrievePhoneNumberTest() throws ApiException {
        //String id = null;
        //PhoneNumberResponse response = api.retrievePhoneNumber(id);
        // TODO: test validations
    }

    /**
     * Slim List phone numbers
     *
     * List phone numbers, This endpoint is a lighter version of the /phone_numbers endpoint having higher performance and rate limit.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void slimListPhoneNumbersTest() throws ApiException {
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //Boolean includeConnection = null;
        //Boolean includeTags = null;
        //String filterTag = null;
        //String filterPhoneNumber = null;
        //String filterStatus = null;
        //ListPhoneNumbersFilterCountryIsoAlpha2Parameter filterCountryIsoAlpha2 = null;
        //String filterConnectionId = null;
        //String filterVoiceConnectionNameContains = null;
        //String filterVoiceConnectionNameStartsWith = null;
        //String filterVoiceConnectionNameEndsWith = null;
        //String filterVoiceConnectionName = null;
        //String filterVoiceUsagePaymentMethod = null;
        //String filterBillingGroupId = null;
        //String filterEmergencyAddressId = null;
        //String filterCustomerReference = null;
        //String filterNumberTypeEq = null;
        //String filterSource = null;
        //String sort = null;
        //ListPhoneNumbersResponse1 response = api.slimListPhoneNumbers()
        //        .pageNumber(pageNumber)
        //        .pageSize(pageSize)
        //        .includeConnection(includeConnection)
        //        .includeTags(includeTags)
        //        .filterTag(filterTag)
        //        .filterPhoneNumber(filterPhoneNumber)
        //        .filterStatus(filterStatus)
        //        .filterCountryIsoAlpha2(filterCountryIsoAlpha2)
        //        .filterConnectionId(filterConnectionId)
        //        .filterVoiceConnectionNameContains(filterVoiceConnectionNameContains)
        //        .filterVoiceConnectionNameStartsWith(filterVoiceConnectionNameStartsWith)
        //        .filterVoiceConnectionNameEndsWith(filterVoiceConnectionNameEndsWith)
        //        .filterVoiceConnectionName(filterVoiceConnectionName)
        //        .filterVoiceUsagePaymentMethod(filterVoiceUsagePaymentMethod)
        //        .filterBillingGroupId(filterBillingGroupId)
        //        .filterEmergencyAddressId(filterEmergencyAddressId)
        //        .filterCustomerReference(filterCustomerReference)
        //        .filterNumberTypeEq(filterNumberTypeEq)
        //        .filterSource(filterSource)
        //        .sort(sort)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Update a phone number
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePhoneNumberTest() throws ApiException {
        //String id = null;
        //UpdatePhoneNumberRequest updatePhoneNumberRequest = null;
        //PhoneNumberResponse response = api.updatePhoneNumber(id, updatePhoneNumberRequest);
        // TODO: test validations
    }

    /**
     * Update a phone number with voice settings
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePhoneNumberVoiceSettingsTest() throws ApiException {
        //String id = null;
        //UpdatePhoneNumberVoiceSettingsRequest updatePhoneNumberVoiceSettingsRequest = null;
        //RetrievePhoneNumberVoiceResponse response = api.updatePhoneNumberVoiceSettings(id, updatePhoneNumberVoiceSettingsRequest);
        // TODO: test validations
    }

}
