/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.CreateIpConnectionRequest;
import com.telnyx.sdk.model.ErrorResponse;
import com.telnyx.sdk.model.IpConnectionResponse;
import com.telnyx.sdk.model.ListIpConnectionsResponse;
import com.telnyx.sdk.model.UpdateIpConnectionRequest;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IpConnectionsApi
 */
public class IpConnectionsApiTest {

    private final IpConnectionsApi api = new IpConnectionsApi();

    /**
     * Create an Ip connection
     *
     * Creates an IP connection.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIpConnectionTest() throws ApiException {
        //CreateIpConnectionRequest createIpConnectionRequest = null;
        //IpConnectionResponse response = api.createIpConnection(createIpConnectionRequest);
        // TODO: test validations
    }

    /**
     * Delete an Ip connection
     *
     * Deletes an existing IP connection.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIpConnectionTest() throws ApiException {
        //String id = null;
        //IpConnectionResponse response = api.deleteIpConnection(id);
        // TODO: test validations
    }

    /**
     * List Ip connections
     *
     * Returns a list of your IP connections.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIpConnectionsTest() throws ApiException {
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //String filterConnectionNameContains = null;
        //String filterOutboundOutboundVoiceProfileId = null;
        //String sort = null;
        //ListIpConnectionsResponse response = api.listIpConnections()
        //        .pageNumber(pageNumber)
        //        .pageSize(pageSize)
        //        .filterConnectionNameContains(filterConnectionNameContains)
        //        .filterOutboundOutboundVoiceProfileId(filterOutboundOutboundVoiceProfileId)
        //        .sort(sort)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Retrieve an Ip connection
     *
     * Retrieves the details of an existing ip connection.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveIpConnectionTest() throws ApiException {
        //String id = null;
        //IpConnectionResponse response = api.retrieveIpConnection(id);
        // TODO: test validations
    }

    /**
     * Update an Ip connection
     *
     * Updates settings of an existing IP connection.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIpConnectionTest() throws ApiException {
        //String id = null;
        //UpdateIpConnectionRequest updateIpConnectionRequest = null;
        //IpConnectionResponse response = api.updateIpConnection(id, updateIpConnectionRequest);
        // TODO: test validations
    }

}
