/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.DeleteObjectsRequestInner;
import java.io.File;
import com.telnyx.sdk.model.ListObjectsResponse;
import java.time.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ObjectApi
 */
public class ObjectApiTest {

    private final ObjectApi api = new ObjectApi();

    /**
     * DeleteObject
     *
     * Delete an object from a given bucket.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteObjectTest() throws ApiException {
        //String bucketName = null;
        //String objectName = null;
        //api.deleteObject(bucketName, objectName);
        // TODO: test validations
    }

    /**
     * DeleteObjects
     *
     * Deletes one or multiple objects from a given bucket.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteObjectsTest() throws ApiException {
        //String bucketName = null;
        //Boolean delete = null;
        //List<DeleteObjectsRequestInner> deleteObjectsRequestInner = null;
        //Object response = api.deleteObjects(bucketName, delete, deleteObjectsRequestInner);
        // TODO: test validations
    }

    /**
     * GetObject
     *
     * Retrieves an object from a given bucket.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getObjectTest() throws ApiException {
        //String bucketName = null;
        //String objectName = null;
        //String uploadId = null;
        //File response = api.getObject(bucketName, objectName, uploadId);
        // TODO: test validations
    }

    /**
     * HeadObject
     *
     * Retrieves metadata from an object without returning the object itself.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void headObjectTest() throws ApiException {
        //String bucketName = null;
        //String objectName = null;
        //api.headObject(bucketName, objectName);
        // TODO: test validations
    }

    /**
     * ListObjectsV2
     *
     * List all objects contained in a given bucket.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listObjectsTest() throws ApiException {
        //String bucketName = null;
        //Integer listType = null;
        //ListObjectsResponse response = api.listObjects(bucketName, listType);
        // TODO: test validations
    }

    /**
     * PutObject
     *
     * Add an object to a bucket.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putObjectTest() throws ApiException {
        //String bucketName = null;
        //String objectName = null;
        //File body = null;
        //String contentType = null;
        //String partNumber = null;
        //String uploadId = null;
        //api.putObject(bucketName, objectName, body, contentType, partNumber, uploadId);
        // TODO: test validations
    }

}
