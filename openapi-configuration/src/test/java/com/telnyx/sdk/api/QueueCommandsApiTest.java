/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.CreateQueueRequest;
import com.telnyx.sdk.model.Errors;
import com.telnyx.sdk.model.ListQueueCallsResponse;
import com.telnyx.sdk.model.QueueCallResponse;
import com.telnyx.sdk.model.QueueResponse;
import com.telnyx.sdk.model.UpdateQueueMaxSizeRequest;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QueueCommandsApi
 */
public class QueueCommandsApiTest {

    private final QueueCommandsApi api = new QueueCommandsApi();

    /**
     * Create a queue
     *
     * Create a new call queue with the specified name and maximum size.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createQueueTest() throws ApiException {
        //CreateQueueRequest createQueueRequest = null;
        //QueueResponse response = api.createQueue(createQueueRequest);
        // TODO: test validations
    }

    /**
     * Delete a queue
     *
     * Delete an existing queue. The queue must be empty (no calls in it) to be deleted.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteQueueTest() throws ApiException {
        //String queueName = null;
        //api.deleteQueue(queueName);
        // TODO: test validations
    }

    /**
     * Retrieve calls from a queue
     *
     * Retrieve the list of calls in an existing queue
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listQueueCallsTest() throws ApiException {
        //String queueName = null;
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //ListQueueCallsResponse response = api.listQueueCalls(queueName, pageNumber, pageSize);
        // TODO: test validations
    }

    /**
     * Retrieve a call from a queue
     *
     * Retrieve an existing call from an existing queue
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCallFromQueueTest() throws ApiException {
        //String queueName = null;
        //String callControlId = null;
        //QueueCallResponse response = api.retrieveCallFromQueue(queueName, callControlId);
        // TODO: test validations
    }

    /**
     * Retrieve a call queue
     *
     * Retrieve an existing call queue
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCallQueueTest() throws ApiException {
        //String queueName = null;
        //QueueResponse response = api.retrieveCallQueue(queueName);
        // TODO: test validations
    }

    /**
     * Update queue max size
     *
     * Update the maximum size of an existing queue
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateQueueMaxSizeTest() throws ApiException {
        //String queueName = null;
        //UpdateQueueMaxSizeRequest updateQueueMaxSizeRequest = null;
        //QueueResponse response = api.updateQueueMaxSize(queueName, updateQueueMaxSizeRequest);
        // TODO: test validations
    }

}
