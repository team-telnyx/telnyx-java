/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.AuthenticationProviderCreate;
import com.telnyx.sdk.model.CreateAuthenticationProvider200Response;
import com.telnyx.sdk.model.FindAuthenticationProviders200Response;
import com.telnyx.sdk.model.UpdateAuthenticationProviderRequest;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthenticationProvidersApi
 */
public class AuthenticationProvidersApiTest {

    private final AuthenticationProvidersApi api = new AuthenticationProvidersApi();

    /**
     * Creates an authentication provider
     *
     * Creates an authentication provider.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthenticationProviderTest() throws ApiException {
        //AuthenticationProviderCreate authenticationProviderCreate = null;
        //CreateAuthenticationProvider200Response response = api.createAuthenticationProvider(authenticationProviderCreate);
        // TODO: test validations
    }

    /**
     * Deletes an authentication provider
     *
     * Deletes an existing authentication provider.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAuthenticationProviderTest() throws ApiException {
        //String id = null;
        //CreateAuthenticationProvider200Response response = api.deleteAuthenticationProvider(id);
        // TODO: test validations
    }

    /**
     * List all SSO authentication providers
     *
     * Returns a list of your SSO authentication providers.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findAuthenticationProvidersTest() throws ApiException {
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //String sort = null;
        //FindAuthenticationProviders200Response response = api.findAuthenticationProviders(pageNumber, pageSize, sort);
        // TODO: test validations
    }

    /**
     * Retrieve an authentication provider
     *
     * Retrieves the details of an existing authentication provider.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAuthenticationProviderTest() throws ApiException {
        //String id = null;
        //CreateAuthenticationProvider200Response response = api.getAuthenticationProvider(id);
        // TODO: test validations
    }

    /**
     * Update an authentication provider
     *
     * Updates settings of an existing authentication provider.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAuthenticationProviderTest() throws ApiException {
        //String id = null;
        //UpdateAuthenticationProviderRequest updateAuthenticationProviderRequest = null;
        //CreateAuthenticationProvider200Response response = api.updateAuthenticationProvider(id, updateAuthenticationProviderRequest);
        // TODO: test validations
    }

}
