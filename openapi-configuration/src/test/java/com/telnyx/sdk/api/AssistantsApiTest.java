/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.Assistant;
import com.telnyx.sdk.model.AssistantDeletedResponse;
import com.telnyx.sdk.model.AssistantsListData;
import com.telnyx.sdk.model.CreateAssistantRequest;
import com.telnyx.sdk.model.HTTPValidationError;
import com.telnyx.sdk.model.UpdateAssistantRequest;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AssistantsApi
 */
public class AssistantsApiTest {

    private final AssistantsApi api = new AssistantsApi();

    /**
     * Create an assistant
     *
     * Create a new AI Assistant.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNewAssistantPublicAssistantsPostTest() throws ApiException {
        //CreateAssistantRequest createAssistantRequest = null;
        //Assistant response = api.createNewAssistantPublicAssistantsPost(createAssistantRequest);
        // TODO: test validations
    }

    /**
     * Delete an assistant
     *
     * Delete an AI Assistant by &#x60;assistant_id&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAssistantPublicAssistantsAssistantIdDeleteTest() throws ApiException {
        //String assistantId = null;
        //AssistantDeletedResponse response = api.deleteAssistantPublicAssistantsAssistantIdDelete(assistantId);
        // TODO: test validations
    }

    /**
     * Get an assistant
     *
     * Retrieve an AI Assistant configuration by &#x60;assistant_id&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAssistantPublicAssistantsAssistantIdGetTest() throws ApiException {
        //String assistantId = null;
        //Assistant response = api.getAssistantPublicAssistantsAssistantIdGet(assistantId);
        // TODO: test validations
    }

    /**
     * List assistants
     *
     * Retrieve a list of all AI Assistants configured by the user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAssistantsPublicAssistantsGetTest() throws ApiException {
        //AssistantsListData response = api.getAssistantsPublicAssistantsGet();
        // TODO: test validations
    }

    /**
     * Update an assistant
     *
     * Update an AI Assistant&#39;s attributes.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateAssistantPublicAssistantsAssistantIdPostTest() throws ApiException {
        //String assistantId = null;
        //UpdateAssistantRequest updateAssistantRequest = null;
        //Object response = api.updateAssistantPublicAssistantsAssistantIdPost(assistantId, updateAssistantRequest);
        // TODO: test validations
    }

}
