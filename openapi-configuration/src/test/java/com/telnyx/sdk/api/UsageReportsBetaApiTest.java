/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.ErrorResponse;
import com.telnyx.sdk.model.UsageReportsOptionsResponse;
import com.telnyx.sdk.model.UsageReportsResponse;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsageReportsBetaApi
 */
public class UsageReportsBetaApiTest {

    private final UsageReportsBetaApi api = new UsageReportsBetaApi();

    /**
     * Get Telnyx product usage data (BETA)
     *
     * Get Telnyx usage data by product, broken out by the specified dimensions
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsageReportTest() throws ApiException {
        //String product = null;
        //List<String> dimensions = null;
        //List<String> metrics = null;
        //String startDate = null;
        //String endDate = null;
        //String dateRange = null;
        //String filter = null;
        //Boolean managedAccounts = null;
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //List<String> sort = null;
        //String format = null;
        //String authorizationBearerLessThanTOKENGreaterThan = null;
        //UsageReportsResponse response = api.getUsageReport(product, dimensions, metrics, startDate, endDate, dateRange, filter, managedAccounts, pageNumber, pageSize, sort, format, authorizationBearerLessThanTOKENGreaterThan);
        // TODO: test validations
    }

    /**
     * Get Usage Reports query options (BETA)
     *
     * Get the Usage Reports options for querying usage, including the products available and their respective metrics and dimensions
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listUsageReportsOptionsTest() throws ApiException {
        //String product = null;
        //String authorizationBearerLessThanTOKENGreaterThan = null;
        //UsageReportsOptionsResponse response = api.listUsageReportsOptions(product, authorizationBearerLessThanTOKENGreaterThan);
        // TODO: test validations
    }

}
