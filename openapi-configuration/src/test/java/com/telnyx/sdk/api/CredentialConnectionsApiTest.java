/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.api;

import com.telnyx.sdk.*;
import com.telnyx.sdk.auth.*;
import com.telnyx.sdk.model.CreateCredentialConnectionRequest;
import com.telnyx.sdk.model.CredentialConnectionResponse;
import com.telnyx.sdk.model.ErrorResponse;
import com.telnyx.sdk.model.ListCredentialConnectionsResponse;
import com.telnyx.sdk.model.RegistrationStatusResponse;
import com.telnyx.sdk.model.UpdateCredentialConnectionRequest;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CredentialConnectionsApi
 */
public class CredentialConnectionsApiTest {

    private final CredentialConnectionsApi api = new CredentialConnectionsApi();

    /**
     * Update a credential connection registration status
     *
     * Updates the registration_status for a credential connection, this endpoint also updates the &#x60;registration_status&#x60; and &#x60;registration_status_updated_at&#x60; fields in the credential connection
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void checkRegistrationStatusTest() throws ApiException {
        //String id = null;
        //RegistrationStatusResponse response = api.checkRegistrationStatus(id);
        // TODO: test validations
    }

    /**
     * Create a credential connection
     *
     * Creates a credential connection.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCredentialConnectionTest() throws ApiException {
        //CreateCredentialConnectionRequest createCredentialConnectionRequest = null;
        //CredentialConnectionResponse response = api.createCredentialConnection(createCredentialConnectionRequest);
        // TODO: test validations
    }

    /**
     * Delete a credential connection
     *
     * Deletes an existing credential connection.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCredentialConnectionTest() throws ApiException {
        //String id = null;
        //CredentialConnectionResponse response = api.deleteCredentialConnection(id);
        // TODO: test validations
    }

    /**
     * List credential connections
     *
     * Returns a list of your credential connections.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listCredentialConnectionsTest() throws ApiException {
        //Integer pageNumber = null;
        //Integer pageSize = null;
        //String filterConnectionNameContains = null;
        //String filterOutboundOutboundVoiceProfileId = null;
        //String sort = null;
        //ListCredentialConnectionsResponse response = api.listCredentialConnections()
        //        .pageNumber(pageNumber)
        //        .pageSize(pageSize)
        //        .filterConnectionNameContains(filterConnectionNameContains)
        //        .filterOutboundOutboundVoiceProfileId(filterOutboundOutboundVoiceProfileId)
        //        .sort(sort)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Retrieve a credential connection
     *
     * Retrieves the details of an existing credential connection.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveCredentialConnectionTest() throws ApiException {
        //String id = null;
        //CredentialConnectionResponse response = api.retrieveCredentialConnection(id);
        // TODO: test validations
    }

    /**
     * Update a credential connection
     *
     * Updates settings of an existing credential connection.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCredentialConnectionTest() throws ApiException {
        //String id = null;
        //UpdateCredentialConnectionRequest updateCredentialConnectionRequest = null;
        //CredentialConnectionResponse response = api.updateCredentialConnection(id, updateCredentialConnectionRequest);
        // TODO: test validations
    }

}
