/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for InitiateCallRequest
 */
public class InitiateCallRequestTest {
    private final InitiateCallRequest model = new InitiateCallRequest();

    /**
     * Model tests for InitiateCallRequest
     */
    @Test
    public void testInitiateCallRequest() {
        // TODO: test InitiateCallRequest
    }

    /**
     * Test the property 'applicationSid'
     */
    @Test
    public void applicationSidTest() {
        // TODO: test applicationSid
    }

    /**
     * Test the property 'to'
     */
    @Test
    public void toTest() {
        // TODO: test to
    }

    /**
     * Test the property 'from'
     */
    @Test
    public void fromTest() {
        // TODO: test from
    }

    /**
     * Test the property 'callerId'
     */
    @Test
    public void callerIdTest() {
        // TODO: test callerId
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'urlMethod'
     */
    @Test
    public void urlMethodTest() {
        // TODO: test urlMethod
    }

    /**
     * Test the property 'fallbackUrl'
     */
    @Test
    public void fallbackUrlTest() {
        // TODO: test fallbackUrl
    }

    /**
     * Test the property 'statusCallback'
     */
    @Test
    public void statusCallbackTest() {
        // TODO: test statusCallback
    }

    /**
     * Test the property 'statusCallbackMethod'
     */
    @Test
    public void statusCallbackMethodTest() {
        // TODO: test statusCallbackMethod
    }

    /**
     * Test the property 'statusCallbackEvent'
     */
    @Test
    public void statusCallbackEventTest() {
        // TODO: test statusCallbackEvent
    }

    /**
     * Test the property 'machineDetection'
     */
    @Test
    public void machineDetectionTest() {
        // TODO: test machineDetection
    }

    /**
     * Test the property 'detectionMode'
     */
    @Test
    public void detectionModeTest() {
        // TODO: test detectionMode
    }

    /**
     * Test the property 'asyncAmd'
     */
    @Test
    public void asyncAmdTest() {
        // TODO: test asyncAmd
    }

    /**
     * Test the property 'asyncAmdStatusCallback'
     */
    @Test
    public void asyncAmdStatusCallbackTest() {
        // TODO: test asyncAmdStatusCallback
    }

    /**
     * Test the property 'asyncAmdStatusCallbackMethod'
     */
    @Test
    public void asyncAmdStatusCallbackMethodTest() {
        // TODO: test asyncAmdStatusCallbackMethod
    }

    /**
     * Test the property 'machineDetectionTimeout'
     */
    @Test
    public void machineDetectionTimeoutTest() {
        // TODO: test machineDetectionTimeout
    }

    /**
     * Test the property 'machineDetectionSpeechThreshold'
     */
    @Test
    public void machineDetectionSpeechThresholdTest() {
        // TODO: test machineDetectionSpeechThreshold
    }

    /**
     * Test the property 'machineDetectionSpeechEndThreshold'
     */
    @Test
    public void machineDetectionSpeechEndThresholdTest() {
        // TODO: test machineDetectionSpeechEndThreshold
    }

    /**
     * Test the property 'machineDetectionSilenceTimeout'
     */
    @Test
    public void machineDetectionSilenceTimeoutTest() {
        // TODO: test machineDetectionSilenceTimeout
    }

    /**
     * Test the property 'cancelPlaybackOnMachineDetection'
     */
    @Test
    public void cancelPlaybackOnMachineDetectionTest() {
        // TODO: test cancelPlaybackOnMachineDetection
    }

    /**
     * Test the property 'cancelPlaybackOnDetectMessageEnd'
     */
    @Test
    public void cancelPlaybackOnDetectMessageEndTest() {
        // TODO: test cancelPlaybackOnDetectMessageEnd
    }

    /**
     * Test the property 'preferredCodecs'
     */
    @Test
    public void preferredCodecsTest() {
        // TODO: test preferredCodecs
    }

    /**
     * Test the property 'record'
     */
    @Test
    public void recordTest() {
        // TODO: test record
    }

    /**
     * Test the property 'recordingChannels'
     */
    @Test
    public void recordingChannelsTest() {
        // TODO: test recordingChannels
    }

    /**
     * Test the property 'recordingStatusCallback'
     */
    @Test
    public void recordingStatusCallbackTest() {
        // TODO: test recordingStatusCallback
    }

    /**
     * Test the property 'recordingStatusCallbackMethod'
     */
    @Test
    public void recordingStatusCallbackMethodTest() {
        // TODO: test recordingStatusCallbackMethod
    }

    /**
     * Test the property 'recordingStatusCallbackEvent'
     */
    @Test
    public void recordingStatusCallbackEventTest() {
        // TODO: test recordingStatusCallbackEvent
    }

    /**
     * Test the property 'recordingTimeout'
     */
    @Test
    public void recordingTimeoutTest() {
        // TODO: test recordingTimeout
    }

    /**
     * Test the property 'recordingTrack'
     */
    @Test
    public void recordingTrackTest() {
        // TODO: test recordingTrack
    }

    /**
     * Test the property 'sipAuthPassword'
     */
    @Test
    public void sipAuthPasswordTest() {
        // TODO: test sipAuthPassword
    }

    /**
     * Test the property 'sipAuthUsername'
     */
    @Test
    public void sipAuthUsernameTest() {
        // TODO: test sipAuthUsername
    }

    /**
     * Test the property 'trim'
     */
    @Test
    public void trimTest() {
        // TODO: test trim
    }

}
