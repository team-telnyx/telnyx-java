/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.CustomSipHeader;
import com.telnyx.sdk.model.SipHeader;
import com.telnyx.sdk.model.SoundModifications;
import com.telnyx.sdk.model.StreamBidirectionalCodec;
import com.telnyx.sdk.model.StreamBidirectionalMode;
import com.telnyx.sdk.model.StreamBidirectionalTargetLegs;
import com.telnyx.sdk.model.TranscriptionStartRequest;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AnswerRequest
 */
public class AnswerRequestTest {
    private final AnswerRequest model = new AnswerRequest();

    /**
     * Model tests for AnswerRequest
     */
    @Test
    public void testAnswerRequest() {
        // TODO: test AnswerRequest
    }

    /**
     * Test the property 'billingGroupId'
     */
    @Test
    public void billingGroupIdTest() {
        // TODO: test billingGroupId
    }

    /**
     * Test the property 'clientState'
     */
    @Test
    public void clientStateTest() {
        // TODO: test clientState
    }

    /**
     * Test the property 'commandId'
     */
    @Test
    public void commandIdTest() {
        // TODO: test commandId
    }

    /**
     * Test the property 'customHeaders'
     */
    @Test
    public void customHeadersTest() {
        // TODO: test customHeaders
    }

    /**
     * Test the property 'preferredCodecs'
     */
    @Test
    public void preferredCodecsTest() {
        // TODO: test preferredCodecs
    }

    /**
     * Test the property 'sipHeaders'
     */
    @Test
    public void sipHeadersTest() {
        // TODO: test sipHeaders
    }

    /**
     * Test the property 'soundModifications'
     */
    @Test
    public void soundModificationsTest() {
        // TODO: test soundModifications
    }

    /**
     * Test the property 'streamUrl'
     */
    @Test
    public void streamUrlTest() {
        // TODO: test streamUrl
    }

    /**
     * Test the property 'streamTrack'
     */
    @Test
    public void streamTrackTest() {
        // TODO: test streamTrack
    }

    /**
     * Test the property 'streamBidirectionalMode'
     */
    @Test
    public void streamBidirectionalModeTest() {
        // TODO: test streamBidirectionalMode
    }

    /**
     * Test the property 'streamBidirectionalCodec'
     */
    @Test
    public void streamBidirectionalCodecTest() {
        // TODO: test streamBidirectionalCodec
    }

    /**
     * Test the property 'streamBidirectionalTargetLegs'
     */
    @Test
    public void streamBidirectionalTargetLegsTest() {
        // TODO: test streamBidirectionalTargetLegs
    }

    /**
     * Test the property 'sendSilenceWhenIdle'
     */
    @Test
    public void sendSilenceWhenIdleTest() {
        // TODO: test sendSilenceWhenIdle
    }

    /**
     * Test the property 'webhookUrl'
     */
    @Test
    public void webhookUrlTest() {
        // TODO: test webhookUrl
    }

    /**
     * Test the property 'webhookUrlMethod'
     */
    @Test
    public void webhookUrlMethodTest() {
        // TODO: test webhookUrlMethod
    }

    /**
     * Test the property 'transcription'
     */
    @Test
    public void transcriptionTest() {
        // TODO: test transcription
    }

    /**
     * Test the property 'transcriptionConfig'
     */
    @Test
    public void transcriptionConfigTest() {
        // TODO: test transcriptionConfig
    }

    /**
     * Test the property 'record'
     */
    @Test
    public void recordTest() {
        // TODO: test record
    }

    /**
     * Test the property 'recordChannels'
     */
    @Test
    public void recordChannelsTest() {
        // TODO: test recordChannels
    }

    /**
     * Test the property 'recordFormat'
     */
    @Test
    public void recordFormatTest() {
        // TODO: test recordFormat
    }

    /**
     * Test the property 'recordMaxLength'
     */
    @Test
    public void recordMaxLengthTest() {
        // TODO: test recordMaxLength
    }

    /**
     * Test the property 'recordTimeoutSecs'
     */
    @Test
    public void recordTimeoutSecsTest() {
        // TODO: test recordTimeoutSecs
    }

    /**
     * Test the property 'recordTrack'
     */
    @Test
    public void recordTrackTest() {
        // TODO: test recordTrack
    }

    /**
     * Test the property 'recordTrim'
     */
    @Test
    public void recordTrimTest() {
        // TODO: test recordTrim
    }

    /**
     * Test the property 'recordCustomFileName'
     */
    @Test
    public void recordCustomFileNameTest() {
        // TODO: test recordCustomFileName
    }

}
