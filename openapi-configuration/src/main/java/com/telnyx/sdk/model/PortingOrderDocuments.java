/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * Can be specified directly or via the &#x60;requirement_group_id&#x60; parameter.
 */
@ApiModel(description = "Can be specified directly or via the `requirement_group_id` parameter.")
@JsonPropertyOrder({
  PortingOrderDocuments.JSON_PROPERTY_LOA,
  PortingOrderDocuments.JSON_PROPERTY_INVOICE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class PortingOrderDocuments {
  public static final String JSON_PROPERTY_LOA = "loa";
  private UUID loa;

  public static final String JSON_PROPERTY_INVOICE = "invoice";
  private UUID invoice;

  public PortingOrderDocuments() { 
  }

  public PortingOrderDocuments loa(UUID loa) {
    this.loa = loa;
    return this;
  }

   /**
   * Returned ID of the submitted LOA via the Documents endpoint
   * @return loa
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "64ffb720-04c7-455b-92d6-20fcca92e935", value = "Returned ID of the submitted LOA via the Documents endpoint")
  @JsonProperty(JSON_PROPERTY_LOA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getLoa() {
    return loa;
  }


  @JsonProperty(JSON_PROPERTY_LOA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoa(UUID loa) {
    this.loa = loa;
  }


  public PortingOrderDocuments invoice(UUID invoice) {
    this.invoice = invoice;
    return this;
  }

   /**
   * Returned ID of the submitted Invoice via the Documents endpoint
   * @return invoice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ce74b771-d23d-4960-81ec-8741b3862146", value = "Returned ID of the submitted Invoice via the Documents endpoint")
  @JsonProperty(JSON_PROPERTY_INVOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getInvoice() {
    return invoice;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoice(UUID invoice) {
    this.invoice = invoice;
  }


  /**
   * Return true if this PortingOrderDocuments object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PortingOrderDocuments portingOrderDocuments = (PortingOrderDocuments) o;
    return Objects.equals(this.loa, portingOrderDocuments.loa) &&
        Objects.equals(this.invoice, portingOrderDocuments.invoice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loa, invoice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PortingOrderDocuments {\n");
    sb.append("    loa: ").append(toIndentedString(loa)).append("\n");
    sb.append("    invoice: ").append(toIndentedString(invoice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

