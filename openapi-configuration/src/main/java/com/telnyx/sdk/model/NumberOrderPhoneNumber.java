/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.SubNumberOrderRegulatoryRequirementWithValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * NumberOrderPhoneNumber
 */
@JsonPropertyOrder({
  NumberOrderPhoneNumber.JSON_PROPERTY_ID,
  NumberOrderPhoneNumber.JSON_PROPERTY_RECORD_TYPE,
  NumberOrderPhoneNumber.JSON_PROPERTY_PHONE_NUMBER,
  NumberOrderPhoneNumber.JSON_PROPERTY_ORDER_REQUEST_ID,
  NumberOrderPhoneNumber.JSON_PROPERTY_SUB_NUMBER_ORDER_ID,
  NumberOrderPhoneNumber.JSON_PROPERTY_COUNTRY_CODE,
  NumberOrderPhoneNumber.JSON_PROPERTY_PHONE_NUMBER_TYPE,
  NumberOrderPhoneNumber.JSON_PROPERTY_REGULATORY_REQUIREMENTS,
  NumberOrderPhoneNumber.JSON_PROPERTY_REQUIREMENTS_MET,
  NumberOrderPhoneNumber.JSON_PROPERTY_STATUS,
  NumberOrderPhoneNumber.JSON_PROPERTY_BUNDLE_ID,
  NumberOrderPhoneNumber.JSON_PROPERTY_LOCALITY,
  NumberOrderPhoneNumber.JSON_PROPERTY_DEADLINE,
  NumberOrderPhoneNumber.JSON_PROPERTY_REQUIREMENTS_STATUS,
  NumberOrderPhoneNumber.JSON_PROPERTY_IS_BLOCK_NUMBER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class NumberOrderPhoneNumber {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_RECORD_TYPE = "record_type";
  private String recordType;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phone_number";
  private String phoneNumber;

  public static final String JSON_PROPERTY_ORDER_REQUEST_ID = "order_request_id";
  private UUID orderRequestId;

  public static final String JSON_PROPERTY_SUB_NUMBER_ORDER_ID = "sub_number_order_id";
  private UUID subNumberOrderId;

  public static final String JSON_PROPERTY_COUNTRY_CODE = "country_code";
  private String countryCode;

  /**
   * Gets or Sets phoneNumberType
   */
  public enum PhoneNumberTypeEnum {
    LOCAL(String.valueOf("local")),
    
    TOLL_FREE(String.valueOf("toll_free")),
    
    MOBILE(String.valueOf("mobile")),
    
    NATIONAL(String.valueOf("national")),
    
    SHARED_COST(String.valueOf("shared_cost")),
    
    LANDLINE(String.valueOf("landline"));

    private String value;

    PhoneNumberTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PhoneNumberTypeEnum fromValue(String value) {
      for (PhoneNumberTypeEnum b : PhoneNumberTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PHONE_NUMBER_TYPE = "phone_number_type";
  private PhoneNumberTypeEnum phoneNumberType;

  public static final String JSON_PROPERTY_REGULATORY_REQUIREMENTS = "regulatory_requirements";
  private List<SubNumberOrderRegulatoryRequirementWithValue> regulatoryRequirements = null;

  public static final String JSON_PROPERTY_REQUIREMENTS_MET = "requirements_met";
  private Boolean requirementsMet;

  /**
   * The status of the phone number in the order.
   */
  public enum StatusEnum {
    PENDING(String.valueOf("pending")),
    
    SUCCESS(String.valueOf("success")),
    
    FAILURE(String.valueOf("failure"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_BUNDLE_ID = "bundle_id";
  private UUID bundleId;

  public static final String JSON_PROPERTY_LOCALITY = "locality";
  private String locality;

  public static final String JSON_PROPERTY_DEADLINE = "deadline";
  private String deadline;

  /**
   * Status of requirements (if applicable)
   */
  public enum RequirementsStatusEnum {
    PENDING(String.valueOf("pending")),
    
    APPROVED(String.valueOf("approved")),
    
    CANCELLED(String.valueOf("cancelled")),
    
    DELETED(String.valueOf("deleted")),
    
    REQUIREMENT_INFO_EXCEPTION(String.valueOf("requirement-info-exception")),
    
    REQUIREMENT_INFO_PENDING(String.valueOf("requirement-info-pending")),
    
    REQUIREMENT_INFO_UNDER_REVIEW(String.valueOf("requirement-info-under-review"));

    private String value;

    RequirementsStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RequirementsStatusEnum fromValue(String value) {
      for (RequirementsStatusEnum b : RequirementsStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REQUIREMENTS_STATUS = "requirements_status";
  private RequirementsStatusEnum requirementsStatus;

  public static final String JSON_PROPERTY_IS_BLOCK_NUMBER = "is_block_number";
  private Boolean isBlockNumber;

  public NumberOrderPhoneNumber() { 
  }

  @JsonCreator
  public NumberOrderPhoneNumber(
    @JsonProperty(JSON_PROPERTY_ID) UUID id, 
    @JsonProperty(JSON_PROPERTY_RECORD_TYPE) String recordType, 
    @JsonProperty(JSON_PROPERTY_REQUIREMENTS_MET) Boolean requirementsMet, 
    @JsonProperty(JSON_PROPERTY_STATUS) StatusEnum status, 
    @JsonProperty(JSON_PROPERTY_BUNDLE_ID) UUID bundleId, 
    @JsonProperty(JSON_PROPERTY_REQUIREMENTS_STATUS) RequirementsStatusEnum requirementsStatus
  ) {
    this();
    this.id = id;
    this.recordType = recordType;
    this.requirementsMet = requirementsMet;
    this.status = status;
    this.bundleId = bundleId;
    this.requirementsStatus = requirementsStatus;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "dc8e4d67-33a0-4cbb-af74-7b58f05bd494", value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }




   /**
   * Get recordType
   * @return recordType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "number_order_phone_number", value = "")
  @JsonProperty(JSON_PROPERTY_RECORD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecordType() {
    return recordType;
  }




  public NumberOrderPhoneNumber phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "+19705555098", value = "")
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public NumberOrderPhoneNumber orderRequestId(UUID orderRequestId) {
    this.orderRequestId = orderRequestId;
    return this;
  }

   /**
   * Get orderRequestId
   * @return orderRequestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "dc8e4d67-33a0-4cbb-af74-7b58f05bd495", value = "")
  @JsonProperty(JSON_PROPERTY_ORDER_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getOrderRequestId() {
    return orderRequestId;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderRequestId(UUID orderRequestId) {
    this.orderRequestId = orderRequestId;
  }


  public NumberOrderPhoneNumber subNumberOrderId(UUID subNumberOrderId) {
    this.subNumberOrderId = subNumberOrderId;
    return this;
  }

   /**
   * Get subNumberOrderId
   * @return subNumberOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "dc8e4d67-33a0-4cbb-af74-7b58f05bd496", value = "")
  @JsonProperty(JSON_PROPERTY_SUB_NUMBER_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getSubNumberOrderId() {
    return subNumberOrderId;
  }


  @JsonProperty(JSON_PROPERTY_SUB_NUMBER_ORDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubNumberOrderId(UUID subNumberOrderId) {
    this.subNumberOrderId = subNumberOrderId;
  }


  public NumberOrderPhoneNumber countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Get countryCode
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "US", value = "")
  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountryCode() {
    return countryCode;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public NumberOrderPhoneNumber phoneNumberType(PhoneNumberTypeEnum phoneNumberType) {
    this.phoneNumberType = phoneNumberType;
    return this;
  }

   /**
   * Get phoneNumberType
   * @return phoneNumberType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "local", value = "")
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PhoneNumberTypeEnum getPhoneNumberType() {
    return phoneNumberType;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumberType(PhoneNumberTypeEnum phoneNumberType) {
    this.phoneNumberType = phoneNumberType;
  }


  public NumberOrderPhoneNumber regulatoryRequirements(List<SubNumberOrderRegulatoryRequirementWithValue> regulatoryRequirements) {
    this.regulatoryRequirements = regulatoryRequirements;
    return this;
  }

  public NumberOrderPhoneNumber addregulatoryRequirementsItem(SubNumberOrderRegulatoryRequirementWithValue regulatoryRequirementsItem) {
    if (this.regulatoryRequirements == null) {
      this.regulatoryRequirements = new ArrayList<>();
    }
    this.regulatoryRequirements.add(regulatoryRequirementsItem);
    return this;
  }

   /**
   * Get regulatoryRequirements
   * @return regulatoryRequirements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REGULATORY_REQUIREMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SubNumberOrderRegulatoryRequirementWithValue> getRegulatoryRequirements() {
    return regulatoryRequirements;
  }


  @JsonProperty(JSON_PROPERTY_REGULATORY_REQUIREMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegulatoryRequirements(List<SubNumberOrderRegulatoryRequirementWithValue> regulatoryRequirements) {
    this.regulatoryRequirements = regulatoryRequirements;
  }


   /**
   * True if all requirements are met for a phone number, false otherwise.
   * @return requirementsMet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "True if all requirements are met for a phone number, false otherwise.")
  @JsonProperty(JSON_PROPERTY_REQUIREMENTS_MET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRequirementsMet() {
    return requirementsMet;
  }




   /**
   * The status of the phone number in the order.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The status of the phone number in the order.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }




   /**
   * Get bundleId
   * @return bundleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BUNDLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getBundleId() {
    return bundleId;
  }




  public NumberOrderPhoneNumber locality(String locality) {
    this.locality = locality;
    return this;
  }

   /**
   * Get locality
   * @return locality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "San Francisco", value = "")
  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocality() {
    return locality;
  }


  @JsonProperty(JSON_PROPERTY_LOCALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocality(String locality) {
    this.locality = locality;
  }


  public NumberOrderPhoneNumber deadline(String deadline) {
    this.deadline = deadline;
    return this;
  }

   /**
   * Get deadline
   * @return deadline
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "024-05-31T11:14:00+00:00", value = "")
  @JsonProperty(JSON_PROPERTY_DEADLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeadline() {
    return deadline;
  }


  @JsonProperty(JSON_PROPERTY_DEADLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeadline(String deadline) {
    this.deadline = deadline;
  }


   /**
   * Status of requirements (if applicable)
   * @return requirementsStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Status of requirements (if applicable)")
  @JsonProperty(JSON_PROPERTY_REQUIREMENTS_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RequirementsStatusEnum getRequirementsStatus() {
    return requirementsStatus;
  }




  public NumberOrderPhoneNumber isBlockNumber(Boolean isBlockNumber) {
    this.isBlockNumber = isBlockNumber;
    return this;
  }

   /**
   * Get isBlockNumber
   * @return isBlockNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")
  @JsonProperty(JSON_PROPERTY_IS_BLOCK_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsBlockNumber() {
    return isBlockNumber;
  }


  @JsonProperty(JSON_PROPERTY_IS_BLOCK_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsBlockNumber(Boolean isBlockNumber) {
    this.isBlockNumber = isBlockNumber;
  }


  /**
   * Return true if this NumberOrderPhoneNumber object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NumberOrderPhoneNumber numberOrderPhoneNumber = (NumberOrderPhoneNumber) o;
    return Objects.equals(this.id, numberOrderPhoneNumber.id) &&
        Objects.equals(this.recordType, numberOrderPhoneNumber.recordType) &&
        Objects.equals(this.phoneNumber, numberOrderPhoneNumber.phoneNumber) &&
        Objects.equals(this.orderRequestId, numberOrderPhoneNumber.orderRequestId) &&
        Objects.equals(this.subNumberOrderId, numberOrderPhoneNumber.subNumberOrderId) &&
        Objects.equals(this.countryCode, numberOrderPhoneNumber.countryCode) &&
        Objects.equals(this.phoneNumberType, numberOrderPhoneNumber.phoneNumberType) &&
        Objects.equals(this.regulatoryRequirements, numberOrderPhoneNumber.regulatoryRequirements) &&
        Objects.equals(this.requirementsMet, numberOrderPhoneNumber.requirementsMet) &&
        Objects.equals(this.status, numberOrderPhoneNumber.status) &&
        Objects.equals(this.bundleId, numberOrderPhoneNumber.bundleId) &&
        Objects.equals(this.locality, numberOrderPhoneNumber.locality) &&
        Objects.equals(this.deadline, numberOrderPhoneNumber.deadline) &&
        Objects.equals(this.requirementsStatus, numberOrderPhoneNumber.requirementsStatus) &&
        Objects.equals(this.isBlockNumber, numberOrderPhoneNumber.isBlockNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, recordType, phoneNumber, orderRequestId, subNumberOrderId, countryCode, phoneNumberType, regulatoryRequirements, requirementsMet, status, bundleId, locality, deadline, requirementsStatus, isBlockNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NumberOrderPhoneNumber {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    orderRequestId: ").append(toIndentedString(orderRequestId)).append("\n");
    sb.append("    subNumberOrderId: ").append(toIndentedString(subNumberOrderId)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    phoneNumberType: ").append(toIndentedString(phoneNumberType)).append("\n");
    sb.append("    regulatoryRequirements: ").append(toIndentedString(regulatoryRequirements)).append("\n");
    sb.append("    requirementsMet: ").append(toIndentedString(requirementsMet)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    bundleId: ").append(toIndentedString(bundleId)).append("\n");
    sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
    sb.append("    deadline: ").append(toIndentedString(deadline)).append("\n");
    sb.append("    requirementsStatus: ").append(toIndentedString(requirementsStatus)).append("\n");
    sb.append("    isBlockNumber: ").append(toIndentedString(isBlockNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

