/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.RCSComposeAction;
import com.telnyx.sdk.model.RCSCreateCalendarEventAction;
import com.telnyx.sdk.model.RCSDialAction;
import com.telnyx.sdk.model.RCSOpenUrlAction;
import com.telnyx.sdk.model.RCSViewLocationAction;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * When tapped, initiates the corresponding native action on the device.
 */
@ApiModel(description = "When tapped, initiates the corresponding native action on the device.")
@JsonPropertyOrder({
  RCSAction.JSON_PROPERTY_TEXT,
  RCSAction.JSON_PROPERTY_POSTBACK_DATA,
  RCSAction.JSON_PROPERTY_FALLBACK_URL,
  RCSAction.JSON_PROPERTY_DIAL_ACTION,
  RCSAction.JSON_PROPERTY_VIEW_LOCATION_ACTION,
  RCSAction.JSON_PROPERTY_CREATE_CALENDAR_EVENT_ACTION,
  RCSAction.JSON_PROPERTY_OPEN_URL_ACTION,
  RCSAction.JSON_PROPERTY_SHARE_LOCATION_ACTION,
  RCSAction.JSON_PROPERTY_COMPOSE_ACTION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class RCSAction {
  public static final String JSON_PROPERTY_TEXT = "text";
  private String text;

  public static final String JSON_PROPERTY_POSTBACK_DATA = "postback_data";
  private String postbackData;

  public static final String JSON_PROPERTY_FALLBACK_URL = "fallback_url";
  private String fallbackUrl;

  public static final String JSON_PROPERTY_DIAL_ACTION = "dial_action";
  private RCSDialAction dialAction;

  public static final String JSON_PROPERTY_VIEW_LOCATION_ACTION = "view_location_action";
  private RCSViewLocationAction viewLocationAction;

  public static final String JSON_PROPERTY_CREATE_CALENDAR_EVENT_ACTION = "create_calendar_event_action";
  private RCSCreateCalendarEventAction createCalendarEventAction;

  public static final String JSON_PROPERTY_OPEN_URL_ACTION = "open_url_action";
  private RCSOpenUrlAction openUrlAction;

  public static final String JSON_PROPERTY_SHARE_LOCATION_ACTION = "share_location_action";
  private Object shareLocationAction;

  public static final String JSON_PROPERTY_COMPOSE_ACTION = "compose_action";
  private RCSComposeAction composeAction;

  public RCSAction() { 
  }

  public RCSAction text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Text that is shown in the suggested action. Maximum 25 characters.
   * @return text
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Hello world", value = "Text that is shown in the suggested action. Maximum 25 characters.")
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setText(String text) {
    this.text = text;
  }


  public RCSAction postbackData(String postbackData) {
    this.postbackData = postbackData;
    return this;
  }

   /**
   * Payload (base64 encoded) that will be sent to the agent in the user event that results when the user taps the suggested action. Maximum 2048 characters.
   * @return postbackData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Payload (base64 encoded) that will be sent to the agent in the user event that results when the user taps the suggested action. Maximum 2048 characters.")
  @JsonProperty(JSON_PROPERTY_POSTBACK_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostbackData() {
    return postbackData;
  }


  @JsonProperty(JSON_PROPERTY_POSTBACK_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostbackData(String postbackData) {
    this.postbackData = postbackData;
  }


  public RCSAction fallbackUrl(String fallbackUrl) {
    this.fallbackUrl = fallbackUrl;
    return this;
  }

   /**
   * Fallback URL to use if a client doesn&#39;t support a suggested action. Fallback URLs open in new browser windows. Maximum 2048 characters.
   * @return fallbackUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fallback URL to use if a client doesn't support a suggested action. Fallback URLs open in new browser windows. Maximum 2048 characters.")
  @JsonProperty(JSON_PROPERTY_FALLBACK_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFallbackUrl() {
    return fallbackUrl;
  }


  @JsonProperty(JSON_PROPERTY_FALLBACK_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFallbackUrl(String fallbackUrl) {
    this.fallbackUrl = fallbackUrl;
  }


  public RCSAction dialAction(RCSDialAction dialAction) {
    this.dialAction = dialAction;
    return this;
  }

   /**
   * Get dialAction
   * @return dialAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DIAL_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RCSDialAction getDialAction() {
    return dialAction;
  }


  @JsonProperty(JSON_PROPERTY_DIAL_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDialAction(RCSDialAction dialAction) {
    this.dialAction = dialAction;
  }


  public RCSAction viewLocationAction(RCSViewLocationAction viewLocationAction) {
    this.viewLocationAction = viewLocationAction;
    return this;
  }

   /**
   * Get viewLocationAction
   * @return viewLocationAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VIEW_LOCATION_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RCSViewLocationAction getViewLocationAction() {
    return viewLocationAction;
  }


  @JsonProperty(JSON_PROPERTY_VIEW_LOCATION_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setViewLocationAction(RCSViewLocationAction viewLocationAction) {
    this.viewLocationAction = viewLocationAction;
  }


  public RCSAction createCalendarEventAction(RCSCreateCalendarEventAction createCalendarEventAction) {
    this.createCalendarEventAction = createCalendarEventAction;
    return this;
  }

   /**
   * Get createCalendarEventAction
   * @return createCalendarEventAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATE_CALENDAR_EVENT_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RCSCreateCalendarEventAction getCreateCalendarEventAction() {
    return createCalendarEventAction;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_CALENDAR_EVENT_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateCalendarEventAction(RCSCreateCalendarEventAction createCalendarEventAction) {
    this.createCalendarEventAction = createCalendarEventAction;
  }


  public RCSAction openUrlAction(RCSOpenUrlAction openUrlAction) {
    this.openUrlAction = openUrlAction;
    return this;
  }

   /**
   * Get openUrlAction
   * @return openUrlAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OPEN_URL_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RCSOpenUrlAction getOpenUrlAction() {
    return openUrlAction;
  }


  @JsonProperty(JSON_PROPERTY_OPEN_URL_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpenUrlAction(RCSOpenUrlAction openUrlAction) {
    this.openUrlAction = openUrlAction;
  }


  public RCSAction shareLocationAction(Object shareLocationAction) {
    this.shareLocationAction = shareLocationAction;
    return this;
  }

   /**
   * Opens the RCS app&#39;s location chooser so the user can pick a location to send back to the agent.
   * @return shareLocationAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Opens the RCS app's location chooser so the user can pick a location to send back to the agent.")
  @JsonProperty(JSON_PROPERTY_SHARE_LOCATION_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getShareLocationAction() {
    return shareLocationAction;
  }


  @JsonProperty(JSON_PROPERTY_SHARE_LOCATION_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShareLocationAction(Object shareLocationAction) {
    this.shareLocationAction = shareLocationAction;
  }


  public RCSAction composeAction(RCSComposeAction composeAction) {
    this.composeAction = composeAction;
    return this;
  }

   /**
   * Get composeAction
   * @return composeAction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMPOSE_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RCSComposeAction getComposeAction() {
    return composeAction;
  }


  @JsonProperty(JSON_PROPERTY_COMPOSE_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComposeAction(RCSComposeAction composeAction) {
    this.composeAction = composeAction;
  }


  /**
   * Return true if this RCSAction object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RCSAction rcSAction = (RCSAction) o;
    return Objects.equals(this.text, rcSAction.text) &&
        Objects.equals(this.postbackData, rcSAction.postbackData) &&
        Objects.equals(this.fallbackUrl, rcSAction.fallbackUrl) &&
        Objects.equals(this.dialAction, rcSAction.dialAction) &&
        Objects.equals(this.viewLocationAction, rcSAction.viewLocationAction) &&
        Objects.equals(this.createCalendarEventAction, rcSAction.createCalendarEventAction) &&
        Objects.equals(this.openUrlAction, rcSAction.openUrlAction) &&
        Objects.equals(this.shareLocationAction, rcSAction.shareLocationAction) &&
        Objects.equals(this.composeAction, rcSAction.composeAction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(text, postbackData, fallbackUrl, dialAction, viewLocationAction, createCalendarEventAction, openUrlAction, shareLocationAction, composeAction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RCSAction {\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    postbackData: ").append(toIndentedString(postbackData)).append("\n");
    sb.append("    fallbackUrl: ").append(toIndentedString(fallbackUrl)).append("\n");
    sb.append("    dialAction: ").append(toIndentedString(dialAction)).append("\n");
    sb.append("    viewLocationAction: ").append(toIndentedString(viewLocationAction)).append("\n");
    sb.append("    createCalendarEventAction: ").append(toIndentedString(createCalendarEventAction)).append("\n");
    sb.append("    openUrlAction: ").append(toIndentedString(openUrlAction)).append("\n");
    sb.append("    shareLocationAction: ").append(toIndentedString(shareLocationAction)).append("\n");
    sb.append("    composeAction: ").append(toIndentedString(composeAction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

