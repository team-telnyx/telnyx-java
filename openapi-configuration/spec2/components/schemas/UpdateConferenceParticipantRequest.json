{
  "type": "object",
  "title": "Update Conference Participant Request",
  "properties": {
    "Muted": {
      "description": "Whether the participant should be muted.",
      "example": true,
      "type": "boolean"
    },
    "Hold": {
      "description": "Whether the participant should be on hold.",
      "example": true,
      "type": "boolean"
    },
    "HoldUrl": {
      "description": "The URL to be called using the `HoldMethod` for music that plays when the participant is on hold. The URL may return an MP3 file, a WAV file, or a TwiML document that contains `<Play>`, `<Say>`, `<Pause>`, or `<Redirect>` verbs.",
      "example": true,
      "type": "string"
    },
    "HoldMethod": {
      "description": "The HTTP method to use when calling the `HoldUrl`.",
      "example": "POST",
      "enum": [
        "GET",
        "POST"
      ],
      "type": "string"
    },
    "AnnounceUrl": {
      "description": "The URL to call to announce something to the participant. The URL may return an MP3 fileo a WAV file, or a TwiML document that contains `<Play>`, `<Say>`, `<Pause>`, or `<Redirect>` verbs.",
      "example": "https://www.example.com/announce.xml",
      "type": "string"
    },
    "AnnounceMethod": {
      "description": "The HTTP method used to call the `AnnounceUrl`. Defaults to `POST`.",
      "example": "GET",
      "type": "string",
      "enum": [
        "GET",
        "POST"
      ]
    },
    "WaitUrl": {
      "description": "The URL to call for an audio file to play while the participant is waiting for the conference to start.",
      "example": "https://www.example.com/wait_music.mp3",
      "type": "string"
    },
    "BeepOnExit": {
      "description": "Whether to play a notification beep to the conference when the participant exits.",
      "example": false,
      "type": "boolean"
    },
    "EndConferenceOnExit": {
      "description": "Whether to end the conference when the participant leaves.",
      "example": false,
      "type": "boolean"
    },
    "Coaching": {
      "description": "Whether the participant is coaching another call. When `true`, `CallSidToCoach` has to be given.",
      "example": false,
      "type": "boolean"
    },
    "CallSidToCoach": {
      "description": "The SID of the participant who is being coached. The participant being coached is the only participant who can hear the participant who is coaching.",
      "example": "v3:9X2vxPDFY2RHSJ1EdMS0RHRksMTg7ldNxdjWbVr9zBjbGjGsSe-aiQ",
      "type": "string"
    }
  },
  "example": {
    "BeepOnExit": false
  }
}