{
  "get": {
    "x-group-parameters": "true",
    "x-latency-category": "responsive",
    "description": "Lists conferences. Conferences are created on demand, and will expire after all participants have left the conference or after 4 hours regardless of the number of active participants. Conferences are listed in descending order by `expires_at`.",
    "summary": "List conferences",
    "operationId": "ListConferences",
    "tags": [
      "Conference Commands"
    ],
    "parameters": [
      {
        "$ref": "../components/parameters/FilterConferenceName.json"
      },
      {
        "$ref": "../components/parameters/FilterConferenceStatus.json"
      },
      {
        "$ref": "../components/parameters/PageNumber.json"
      },
      {
        "$ref": "../components/parameters/PageSize.json"
      }
    ],
    "responses": {
      "200": {
        "$ref": "../components/responses/ListConferencesResponse.json"
      },
      "401": {
        "$ref": "../components/responses/UnauthorizedResponse.json"
      },
      "422": {
        "$ref": "../components/responses/UnprocessableEntityResponse.json"
      }
    }
  },
  "post": {
    "summary": "Create conference",
    "description": "Create a conference from an existing call leg using a `call_control_id` and a conference name. Upon creating the conference, the call will be automatically bridged to the conference. Conferences will expire after all participants have left the conference or after 4 hours regardless of the number of active participants.\n\n**Expected Webhooks (see [callback schema](https://developers.telnyx.com/api/call-control/create-conference#callbacks) below):**\n\n- `conference.created`\n- `conference.participant.joined`\n- `conference.participant.left`\n- `conference.ended`\n- `conference.recording.saved`\n- `conference.floor.changed`\n",
    "operationId": "CreateConference",
    "tags": [
      "Conference Commands"
    ],
    "requestBody": {
      "description": "Create a conference",
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "$ref": "../components/schemas/CreateConferenceRequest.json"
          }
        }
      }
    },
    "responses": {
      "200": {
        "$ref": "../components/responses/ConferenceResponse.json"
      },
      "401": {
        "$ref": "../components/responses/UnauthorizedResponse.json"
      },
      "422": {
        "$ref": "../components/responses/UnprocessableEntityResponse.json"
      }
    },
    "callbacks": {
      "conferenceCreated": {
        "{$request.body#/webhook_url}": {
          "post": {
            "summary": "Conference conference created",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "../components/schemas/ConferenceCreatedEvent.json"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
              }
            }
          }
        }
      },
      "conferenceParticipantJoined": {
        "{$request.body#/webhook_url}": {
          "post": {
            "summary": "Conferences conference participant joined",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "../components/schemas/ConferenceParticipantJoinedEvent.json"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
              }
            }
          }
        }
      },
      "conferenceEnded": {
        "{$request.body#/webhook_url}": {
          "post": {
            "summary": "Conferences conference ended",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "../components/schemas/ConferenceEndedEvent.json"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
              }
            }
          }
        }
      },
      "conferenceParticipantLeft": {
        "{$request.body#/webhook_url}": {
          "post": {
            "summary": "Conferences conference participant left",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "../components/schemas/ConferenceParticipantLeftEvent.json"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
              }
            }
          }
        }
      },
      "conferenceFloorChanged": {
        "{$request.body#/webhook_url}": {
          "post": {
            "summary": "Conferences conference floor changed",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "../components/schemas/ConferenceFloorChangedEvent.json"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "The server must return an HTTP 200, otherwise we will reattempt delivery at the failover webhook URL."
              }
            }
          }
        }
      }
    },
    "x-latency-category": "interactive"
  }
}