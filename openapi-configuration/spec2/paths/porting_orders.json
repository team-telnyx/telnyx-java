{
  "get": {
    "summary": "List all porting orders",
    "tags": [
      "Porting Orders"
    ],
    "description": "Returns a list of your porting order.",
    "operationId": "ListPortingOrders",
    "parameters": [
      {
        "$ref": "../components/parameters/PageNumber.json"
      },
      {
        "$ref": "../components/parameters/PageSize.json"
      },
      {
        "$ref": "../components/parameters/QueryIncludePhoneNumbers.json"
      },
      {
        "$ref": "../components/parameters/FilterByPortingOrderStatus.json"
      },
      {
        "$ref": "../components/parameters/FilterByPortingOrderStatusIn.json"
      },
      {
        "name": "filter[customer_reference]",
        "in": "query",
        "description": "Filter results by customer_reference",
        "example": "123abc",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "filter[parent_support_key]",
        "in": "query",
        "description": "Filter results by parent_support_key",
        "example": "123abc",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "filter[phone_numbers.country_code]",
        "in": "query",
        "description": "Filter results by country ISO 3166-1 alpha-2 code",
        "example": "US",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "filter[phone_numbers.carrier_name]",
        "in": "query",
        "description": "Filter results by old service provider",
        "example": "Telnyx",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "filter[misc.type]",
        "in": "query",
        "example": "full",
        "description": "Filter results by porting order type",
        "schema": {
          "$ref": "../components/schemas/PortingOrderType.json"
        }
      },
      {
        "name": "filter[end_user.admin.entity_name]",
        "in": "query",
        "description": "Filter results by person or company name",
        "example": "Porter McPortersen",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "filter[end_user.admin.auth_person_name]",
        "in": "query",
        "example": "Admin McPortersen",
        "description": "Filter results by authorized person",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "filter[activation_settings.fast_port_eligible]",
        "in": "query",
        "description": "Filter results by fast port eligible",
        "example": false,
        "schema": {
          "type": "boolean"
        }
      },
      {
        "name": "filter[activation_settings.foc_datetime_requested][gt]",
        "in": "query",
        "description": "Filter results by foc date later than this value",
        "example": "2021-03-25T10:00:00.000Z",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "filter[activation_settings.foc_datetime_requested][lt]",
        "in": "query",
        "description": "Filter results by foc date earlier than this value",
        "example": "2021-03-25T10:00:00.000Z",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "filter[phone_numbers.phone_number][contains]",
        "in": "query",
        "description": "Filter results by full or partial phone_number",
        "example": "+13038675309",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "sort[]",
        "in": "query",
        "description": "Specifies the sort order for results. If not given, results are sorted by created_at in descending order.",
        "schema": {
          "type": "string",
          "enum": [
            "created_at",
            "-created_at",
            "activation_settings.foc_datetime_requested",
            "-activation_settings.foc_datetime_requested"
          ],
          "example": "created_at"
        }
      }
    ],
    "responses": {
      "200": {
        "$ref": "../components/responses/ListPortingOrder.json"
      },
      "401": {
        "description": "Unauthorized"
      },
      "422": {
        "description": "Unprocessable entity. Check message field in response for details."
      }
    },
    "x-latency-category": "responsive"
  },
  "post": {
    "summary": "Create a porting order",
    "tags": [
      "Porting Orders"
    ],
    "description": "Creates a new porting order object.",
    "operationId": "CreatePortingOrder",
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "$ref": "../components/schemas/CreatePortingOrder.json"
          }
        }
      }
    },
    "responses": {
      "201": {
        "$ref": "../components/responses/ListDraftPortingOrdersWithoutPagination.json"
      },
      "401": {
        "description": "Unauthorized"
      },
      "422": {
        "description": "Unprocessable entity. Check message field in response for details."
      }
    },
    "x-latency-category": "responsive"
  }
}